{
  "hash": "40d946c90582aa423ce3c7d84ade722e",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday Twofer (32 and 33)\"\ndescription: \"Looking at how heat levels increase on the show The Hot Ones. Then doing some EDA on a data set on spam emails.\"\ntwitter-card:\n  image: \"thumbnail.jpg\"\nauthor:\n  - name: Louise E. Sinks\n    url: https://lsinks.github.io/\ndate: 08-15-2023\ncategories: [R, R-code, Code-Along, TidyTuesday, corrplot] # self-defined categories\ncitation:\n  url: https://lsinks.github.io/posts/2023-08-15-TidyTuesday-Twofer\nimage: \"thumbnail.jpg\"\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nLast week I played around with the [TidyTuesday data on hot sauces](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-08/readme.md), but I didn't polish anything or write any text. This week's [TidyTuesday data concerns spam email](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-15/readme.md). I'm going to cover them both in this blog post.\n\n# Loading Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # who doesn't want to be tidy\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(gt) # to make nice tables\nlibrary(skimr) # to survey the data\nlibrary(corrplot) # to make correlation plots\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ncorrplot 0.92 loaded\n```\n:::\n:::\n\n\n# TidyTuesday 32: Hot Sauces\n\n## Loading the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2023, week = 32)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-08-08 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There are 3 files available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 3: `episodes.csv`\n\tDownloading file 2 of 3: `sauces.csv`\n\tDownloading file 3 of 3: `seasons.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nepisodes <- tuesdata$episodes\nsauces <- tuesdata$sauces\nseasons <- tuesdata$seasons\n```\n:::\n\n\nThe data is taken from some show where apparently people are interviewed while eating hot sauce. As the interview proceeds (as measured by the question number), the hot sauces get hotter.\n\n## How much hotter?\n\nI made a factor out of the `sauce_number`/ question number. You can see the x-axis label is nicer for the version with the factor `sauce_number2`.\n\n### Column Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#making a factor\nsauces <- sauces %>%\n    mutate(sauce_number2 = factor(sauce_number))\n\n#numeric\nggplot(sauces, aes(sauce_number, scoville, color = season)) +\n    geom_col(position = \"dodge2\") \n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#factor\nggplot(sauces, aes(sauce_number2, scoville, color = season)) +\n    geom_col(position = \"dodge2\") \n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\nAnd having that variable as a factor allows for a really nice box plot as well. ggplot generates a box plot for each level of the factor and displays them in a single plot. Using the numeric form of the variable gives a warning that it is expecting a group and puts everything into a single box plot. (You can add `group = sauce_number` to the `aes` to recreate the plot you get straight out of the box with the factor version.)\n\n### Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#numeric\n  ggplot(sauces, aes(sauce_number, scoville)) + \n    scale_y_log10() + \n    geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n```\n:::\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#factor\n  ggplot(sauces, aes(sauce_number2, scoville)) + \n    scale_y_log10() + \n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\nThe increase in heat level as the questions proceed looks like it has exponential behavior to me. Also looks like some questions \\# have more variation in the heat level. Questions 8 and 10 seem to have settled in on a specific sauce after the first few seasons.\n\n### Question 10 Sauces\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsauces %>% filter(sauce_number == 10) %>% \n  select(season, sauce_name, scoville) %>%\n  gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"xzofpysrol\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#xzofpysrol table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#xzofpysrol thead, #xzofpysrol tbody, #xzofpysrol tfoot, #xzofpysrol tr, #xzofpysrol td, #xzofpysrol th {\n  border-style: none;\n}\n\n#xzofpysrol p {\n  margin: 0;\n  padding: 0;\n}\n\n#xzofpysrol .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#xzofpysrol .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xzofpysrol .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xzofpysrol .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xzofpysrol .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xzofpysrol .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xzofpysrol .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xzofpysrol .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xzofpysrol .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#xzofpysrol .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#xzofpysrol .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xzofpysrol .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xzofpysrol .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xzofpysrol .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xzofpysrol .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xzofpysrol .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#xzofpysrol .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#xzofpysrol .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#xzofpysrol .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xzofpysrol .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#xzofpysrol .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xzofpysrol .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xzofpysrol .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xzofpysrol .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xzofpysrol .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xzofpysrol .gt_left {\n  text-align: left;\n}\n\n#xzofpysrol .gt_center {\n  text-align: center;\n}\n\n#xzofpysrol .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xzofpysrol .gt_font_normal {\n  font-weight: normal;\n}\n\n#xzofpysrol .gt_font_bold {\n  font-weight: bold;\n}\n\n#xzofpysrol .gt_font_italic {\n  font-style: italic;\n}\n\n#xzofpysrol .gt_super {\n  font-size: 65%;\n}\n\n#xzofpysrol .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#xzofpysrol .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#xzofpysrol .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#xzofpysrol .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#xzofpysrol .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#xzofpysrol .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#xzofpysrol .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"season\">season</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sauce_name\">sauce_name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"scoville\">scoville</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">1</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Mad Dog 357</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">357000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">2</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Blair's Mega Death Sauce</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">550000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">3</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Blair's Mega Death Sauce</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">550000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">4</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">The Last Dab</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">5</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab (Reaper Edition)</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">6</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab Reduxx</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">7</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab Reduxx</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">8</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Reduxx</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">9</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab Reduxx</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">10</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab XXX</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">11</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab XXX</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">12</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab XXX</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">13</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">14</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">15</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">16</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">17</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">18</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">19</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">20</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n    <tr><td headers=\"season\" class=\"gt_row gt_right\">21</td>\n<td headers=\"sauce_name\" class=\"gt_row gt_left\">Hot Ones – The Last Dab: Apollo</td>\n<td headers=\"scoville\" class=\"gt_row gt_right\">2000000</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nSo it looks like once they found a 2 million scoville sauce they used variations of it or rebranded it as a show tie in for the remaining seasons.\n\n### Log Scale Column Plot\n\nFor exponential data, you can plot on a log scale to see more details. (Season 8 and 10 really stand out with their flat tops.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sauces, aes(sauce_number2, scoville, color = season)) +\n  geom_col(position = \"dodge2\") +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nIt looks like there are a few different regimes. The first three or four questions, the heat level rises sharply with each question. Then for the middle questions, the increase is somewhat more gradual. For the last two or three questions, the heat level again rises steeply.\n\n### Average Heat per Question\n\nThis might be more easily seen by plotting the average heat for each question across all seasons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naverage_sauce <- sauces %>% group_by(sauce_number) %>% summarize(hot = mean(scoville))\n\nggplot(average_sauce, aes(x= sauce_number, y = hot)) +\n    geom_point() +\n   scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThat seems pretty clear that there are 3 regions.\n\n### Exponential Fit\n\nBut, we get a decent-ish fit just assuming an exponential increase. I'm not doing anything fancy here. I'm just using geom_smooth and passing it an exponential formula. This isn't serious model fitting, this is more a guide to the eye.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sauces, aes(x = sauce_number, y =  scoville)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = (y ~ exp(x)))\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(average_sauce, aes(x = sauce_number, y = hot)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", formula = (y ~ exp(x)))\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n## What does this mean?\n\nHonestly, probably nothing. :) It is possible that the producers were trying to have some sort of exponential increase in the heat level, so the experience got much worse with each question. But I doubt anyone sat down and simulated what Scoville levels they needed for each question.\n\n# TidyTuesday 33: Spam Emails\n\n## Load the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2023, week = 33)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-08-15 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `spam.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nspam <- tuesdata$spam\n```\n:::\n\n\nAll the variables are complete. This is a subset of the data submitted to the [UCI Machine Learning Repository](https://archive.ics.uci.edu/dataset/94/spambase). Looking at [the data dictionary](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-08-15/readme.md#data-dictionary), we might expect all the variable to be positively correlated with spam.\n\n| variable | class     | description                                                              |\n|----------|-----------|--------------------------------------------------------------------------|\n| crl.tot  | double    | Total length of uninterrupted sequences of capitals                      |\n| dollar   | double    | Occurrences of the dollar sign, as percent of total number of characters |\n| bang     | double    | Occurrences of '!', as percent of total number of characters             |\n| money    | double    | Occurrences of 'money', as percent of total number of characters         |\n| n000     | double    | Occurrences of the string '000', as percent of total number of words     |\n| make     | double    | Occurrences of 'make', as a percent of total number of words             |\n| yesno    | character | Outcome variable, a factor with levels 'n' not spam, 'y' spam            |\n\nI'm using skim to examine the data. I've discussed it before [here](https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/#skimr-to-understand-your-data); it is a great tool that gives more information than summary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(spam)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |spam |\n|Number of rows           |4601 |\n|Number of columns        |7    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |1    |\n|numeric                  |6    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|yesno         |         0|             1|   1|   1|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|     sd| p0| p25| p50|    p75|     p100|hist  |\n|:-------------|---------:|-------------:|------:|------:|--:|---:|---:|------:|--------:|:-----|\n|crl.tot       |         0|             1| 283.29| 606.35|  1|  35|  95| 266.00| 15841.00|▇▁▁▁▁ |\n|dollar        |         0|             1|   0.08|   0.25|  0|   0|   0|   0.05|     6.00|▇▁▁▁▁ |\n|bang          |         0|             1|   0.27|   0.82|  0|   0|   0|   0.32|    32.48|▇▁▁▁▁ |\n|money         |         0|             1|   0.09|   0.44|  0|   0|   0|   0.00|    12.50|▇▁▁▁▁ |\n|n000          |         0|             1|   0.10|   0.35|  0|   0|   0|   0.00|     5.45|▇▁▁▁▁ |\n|make          |         0|             1|   0.10|   0.31|  0|   0|   0|   0.00|     4.54|▇▁▁▁▁ |\n:::\n:::\n\n\n## Is this an imbalanced data set?\n\nOften classification data sets have much more normal data than abnormal data. Are there reasonable numbers of spam entries in this collection?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(spam, aes(yesno)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThat's not too bad. I'm going to calculate the percentage of spam messages by converting this to a numerical variable and taking the mean. I need a number anyway for my correlation plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspam <- spam %>%\n  mutate(yesno_num = ifelse(yesno== 'y', 1, 0))\n\nmean(spam$yesno_num)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3940448\n```\n:::\n:::\n\n\n## Correlation plot\n\nOne of my all time favorite packages is [corrplot](https://CRAN.R-project.org/package=corrplot). Correlations can suggest what variables are likely to be important to the outcome and they can also flag potential issues that could arise from multicollinearity among the predictors. I'm normally default to a table over a viz, but corrplot presents the data so beautifully that I just can't resist using it.\n\nA correlation plot is pretty technical, so I probably would not use it in most circumstances. I use it in my own EDA but I wouldn't include it in a communication to a general audience. If I were sharing this, I'd clean up the variable names to be clearer.\n\nCorrelations need to be calculated between numeric variables, so I am removing the categorical yesno and keeping my numerical one.\n\nCorrplot has [so many different customizations](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html). I've annotated my code to reflect what the different parameters do, but there are [dozens of others](https://cran.r-project.org/web/packages/corrplot/corrplot.pdf) that can be used for more customization. I like to include the actual numerical values (addCoef.col), omit the diagonal since it will be all ones (diag) and only show one half of the matrix ( type = 'lower' or 'upper'). I also like to have the magnitude (abs value ) reflected by the size of the circle and the value (including sign reflected by the color). The features in this data set are all positively correlated with each other and\n\nSometimes labels get cropped. This might need to be fixed via the [margin parameter (mar)](https://stefaneng.github.io/corrplot-title-cut-off/) within the call to corrplot or via the [par statement](https://stackoverflow.com/questions/41679136/r-corrplot-crops-bottom-axis-label) before the call.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(xpd = TRUE) # allows corrplot labels into the margin. fixes clipping\n\nspam %>% select(-yesno) %>%\n  cor %>%\n  {.[order(abs(.[, 7]), decreasing = TRUE),\n      order(abs(.[, 7]), decreasing = TRUE)]} %>%\n  corrplot(\n    method = 'circle', #circle is default and I think it is the best anyway\n    type = 'lower', # upper, lower, or full\n    tl.col = 'black', #color of text label\n    addCoef.col = 'black',#color of the coefficients\n    cl.ratio = 0.2, #size of the color bar legend\n    tl.srt = 15, # this sets the angle of the text\n    col = COL2('PuOr', 10),   #this sets the color palette, COL2 is diverging\n    diag = FALSE, # don't show diag\n    mar = c(1, 1, 4, 1), \n    title = \"What features are correlated with Spam?\",\n  )\n    title(sub= \"Data from UCI Machine Learning Repository via Rdatasets\")\n```\n\n::: {.cell-output-display}\n![](tidytuesday-twofer_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nAll of them have some positive correlation. None of the predictors look strongly correlated with each other either.\n\n## What would I do next if I were going to model this data set?\n\nI've written about classification problems before and I'd probably start with the fitting methods I used [there](https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/#skimr-to-understand-your-data).\n\nAll of the numerical variables had pretty skewed distributions based on the skim output. Lots of models require more normally distributed data. I'd transform the data and scale and normalize it as well. There is a [great table](https://www.tmwr.org/pre-proc-table.html) in the [Tidy Modeling with R](https://www.tmwr.org/) which goes over which preprocessing steps are required or beneficial for different types of fitting.\n",
    "supporting": [
      "tidytuesday-twofer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}