{
  "hash": "37f9c0e483666d19cc87767265ae49f6",
  "result": {
    "markdown": "---\ntitle: \"Leaflet_tester\"\ndate: 06-30-2023\ncategories: [Data-Viz, openxlsx, stringr, fuzzyjoin, mapview, sf] # self-defined categories\ndraft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nThis is a draft of a project for my father. I want to make sure the photo files structure renders properly online. This will be revised and reposted later as a tutorial. It will also be deleted once I get his input.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # who doesn't want to be tidy?\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes) # more themes for ggplot\nlibrary(gt) # For nice tables\nlibrary(ggrepel) # to help position labels in ggplot graphs\nlibrary(openxlsx) # importing excel files from a URL\nlibrary(fuzzyjoin) # for joining on inexact matches\nlibrary(sf) # for handling geo data\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(mapview) # quick interactive mapping\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n```\n:::\n\n```{.r .cell-code}\nlibrary(leaflet) # more mapping\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/drsin/OneDrive/Documents/R Projects/lsinks.github.io\n```\n:::\n\n```{.r .cell-code}\nlibrary(magick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to ImageMagick 6.9.12.3\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11\n```\n:::\n:::\n\n\nReading in his spreadsheet\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblog_folder <- \"posts/2023-06-30-leaflet2\"\nphoto_folder <- \"Photos\"\narchive_folder <- \"Archive\"\nproblem_folder <- \"Problem\"\ndata_file <- \"Tombstone_Data_small.xlsx\"\n#data_file <- \"Tombstone Data.xlsx\"\n# read in excel sheet\ntombstones <-\n  read.xlsx(here(blog_folder, data_file),\n    sheet = 1\n  )\n```\n:::\n\n\nCleaning it up.\n\n1.  Change NAs in middle name variable to \"\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntombstones <- tombstones %>%\nmutate(Middle.Name = ifelse(is.na(Middle.Name), \"\", Middle.Name)) %>%\n  mutate(Cemetery = ifelse(is.na(Cemetery), \"\", Cemetery))\n```\n:::\n\n\n2.  Latitude and longitude data contains some stray degree and minute symbols. The degree symbol appears both as a straight and curved apostrophe and the degree symbols appear both as o and O. This cleaning needs to be done on both N and W columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntombstones <- tombstones %>%\nmutate(N = str_replace_all(N, pattern = \"’\", \" \")) %>%\nmutate(N = str_replace_all(N, pattern = \"O\", \" \"))  %>%\nmutate(N = str_replace_all(N, pattern = \"o\", \" \"))  %>%\nmutate(N = str_replace_all(N, pattern = \"'\", \" \"))  %>% \nmutate(W = str_replace_all(W, pattern = \"’\", \" \")) %>%\nmutate(W = str_replace_all(W, pattern = \"O\", \" \"))  %>% \nmutate(W = str_replace_all(W, pattern = \"o\", \" \")) %>%\nmutate(W = str_replace_all(W, pattern = \"'\", \" \"))  \n```\n:::\n\n\nNext, I'm converting the N and W data to decimal latitude and longitude. S/W should be \"-\" and N/E should be \"+\". I split the degree/minute/second data into parts and then do the conversion. I delete the intermediate components when done.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting to decimal latitude\ntombstones <- tombstones %>%\n  mutate(part1N = str_split_fixed(N, pattern = \" \", n = 2) ) %>%\n  mutate(N_degree = as.numeric(part1N[,1])) %>%\n  mutate(part2N = str_split_fixed(part1N[,2], pattern = '\\\\.', n = 2)) %>%\n  mutate(N_minute = as.numeric(part2N[,1])) %>%\n  mutate(N_second = as.numeric(part2N[,2])) %>%\n  mutate(lat = N_degree + N_minute/60 + N_second/3600)\n\n#converting to decimal longitude  \ntombstones <- tombstones %>%\n  mutate(part1W = str_split_fixed(W, pattern = \" \", n = 2) ) %>%\n  mutate(W_degree = as.numeric(part1W[,1])) %>%\n  mutate(part2W = str_split_fixed(part1W[,2], pattern = '\\\\.', n = 2)) %>%\n  mutate(W_minute = as.numeric(part2W[,1])) %>%\n  mutate(W_second = as.numeric(part2W[,2])) %>%\n  mutate(long = -(W_degree + W_minute/60 + W_second/3600)) \n\ntombstones <- tombstones %>%\n  select(-contains(\"part\"))\n```\n:::\n\n\nMy father's photo naming convention is \"last name first name middle initial\". I'm going to construct a variable full_name from the spreadsheet data and use that to match. Initially, I'm leaving out middle name, because that column is problematic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntombstones <- tombstones %>%\n  mutate(full_name = paste(Surname, First.Name, sep = \" \"))\n```\n:::\n\n\nNow, I'm generating a list of all the photo names and converting it to a dataframe. I'm going to match against this list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphoto_names = list.files(here(blog_folder, photo_folder))\nphoto_df = as.data.frame(photo_names)\n```\n:::\n\n\nDoing a fuzzy join on the two dataframes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntombstones_merged <- fuzzy_right_join(photo_df, tombstones, \n                             by = c(\"photo_names\" = \"full_name\"),\n                             match_fun = str_detect)\n```\n:::\n\n\nSeeing what photos weren't matched. I'm actually going to move them somewhere else.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnot_matched <- anti_join(photo_df, tombstones_merged)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(photo_names)`\n```\n:::\n\n```{.r .cell-code}\nindex <- 1\nfor (index in seq(1:nrow(not_matched))) {\n  file.rename(from = here(blog_folder, photo_folder, not_matched$photo_names[index]),\n                         to = here(blog_folder, problem_folder, not_matched$photo_names[index] ))\n}\n```\n:::\n\n\nI'm dropping all the NAs in the photo_names column. I'm creating an image tag, because I'd ideally like to use that for the photos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# turn photo tag\ntombstones_merged <- tombstones_merged %>%\n  drop_na(photo_names) %>%\n  mutate(tag = paste0(\"<img src=\", here(blog_folder, photo_folder, photo_names),\">\"))\n```\n:::\n\n\nHow many people have multiple photos?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiples <- tombstones_merged %>% group_by(full_name) %>% count(sort = TRUE) %>% filter(n > 1)\n```\n:::\n\n\nLook at these multiples more closely\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_temp <- tombstones_merged %>%\n  filter(full_name == multiples$full_name[1]) \ndf_temp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] photo_names  Surname      First.Name   Middle.Name  Maiden/Title\n [6] Cemetery     City         State        DOB          DOD         \n[11] Age          N            W            X13          X14         \n[16] X15          N_degree     N_minute     N_second     lat         \n[21] W_degree     W_minute     W_second     long         full_name   \n[26] tag         \n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n\nWrite a function to handle making panel figures. Not a function yet\n\nhttps://stackoverflow.com/questions/61196196/image-append-on-dynamic-number-of-variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#testing\nif (nrow(multiples) > 0 ) {\nindex <- 1\n\nfor (index in seq(1:nrow(multiples))) {\n  df_temp <- tombstones_merged %>%\n    filter(full_name == multiples$full_name[index])\n  df_temp\n  these <-\n    as.list(here(blog_folder, photo_folder, df_temp$photo_names))\n  photo_panel <-\n    image_append(do.call(\"c\", lapply(these, image_read)))\n  image_write(\n    photo_panel,\n    path =  here(\n      blog_folder,\n      photo_folder,\n      paste0(df_temp$full_name[1], \"_panel.png\")\n    ),\n    format = \"png\"\n  )\n  index2 <- 1\n  for (index2 in seq(1:nrow(df_temp))) {\n    file.rename(\n      from = here(blog_folder, photo_folder, df_temp$photo_names[index2]),\n      to = here(blog_folder, archive_folder, df_temp$photo_names[index2])\n    )\n  }\n}\n}\n```\n:::\n\n\nNow I need to redo everything so it will only match on the panel figures and not the ones I moved.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphoto_names2 = list.files(here(blog_folder, photo_folder))\nphoto_df_final = as.data.frame(photo_names2)\ntombstones_final <- fuzzy_right_join(photo_df_final, tombstones, \n                             by = c(\"photo_names2\" = \"full_name\"),\n                             match_fun = str_detect)\n```\n:::\n\n\nDropping any NAs in lat/long. Converting it to a SF geo object. I'm adding some jitter to the coordinates; tombstones that are very close to each other have the same coordinates and show up as overlapping on the map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntombstones_final <- tombstones_final %>% drop_na(lat) %>% drop_na(long)\n\n\ntombstones_geo <- st_as_sf(tombstones_merged, coords = c(\"long\", \"lat\"), crs = 4326)\ntombstones_geo <- st_jitter(tombstones_geo, factor = 0.001)\n```\n:::\n\n\nFinal map.\n\n\n::: {.cell .column-page}\n\n```{.r .cell-code}\nimage_list <- tombstones_geo$photo_names\n\nlabels <- sprintf(\n  \"<strong>tombstones_geo$full_name</strong> <br/>,\n  tombstones_geo$Cemetery\" ) %>% lapply(htmltools::HTML)\n\nleaflet() %>%\n  addTiles() %>%\n  #addProviderTiles(providers$CartoDB.Positron) %>%\n  addCircleMarkers(\n    data = tombstones_geo,\n    label = ~ (paste( First.Name, Surname, \"-\", Cemetery, \"Cemetery\", sep = \" \")), \n   # label = ~labels,\n   # popup = leafpop::popupImage(paste0(here(blog_folder, photo_folder),\"/\", image_list)),\n    clusterOptions = markerClusterOptions(),\n    opacity = 1,\n    radius = 5,\n    color = \"black\",\n    stroke = NA,\n    group = \"group1\"\n  )  %>%\n\n# popup = ~tag,\n\n\n   leafpop::addPopupImages(\n    image = paste0(here(blog_folder, photo_folder),\"/\", image_list),\n     src = local,\n     group = \"group1\", width = 600,\n    maxHeight = 300, maxWidth = 600\n   )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-a8d8106d8a83499feb63\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a8d8106d8a83499feb63\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[38.09888266002856,38.10412122119909,38.10877359338279,38.09754851048918,38.1117857955773,40.87452769387292,37.9884724927768,37.98298879196261,38.12195658435321,38.1139183403186,37.87341799825179],[-88.70307329522004,-88.70554736537571,-88.69868647591835,-88.69652398302222,-88.70207268805089,-75.70267266279126,-88.86396776102676,-88.85985111892562,-88.68833364777613,-88.7101437158011,-89.04737107239193],5,null,\"group1\",{\"interactive\":true,\"className\":\"\",\"stroke\":null,\"color\":\"black\",\"weight\":5,\"opacity\":1,\"fill\":true,\"fillColor\":\"black\",\"fillOpacity\":0.2},{\"showCoverageOnHover\":true,\"zoomToBoundsOnClick\":true,\"spiderfyOnMaxZoom\":true,\"removeOutsideVisibleBounds\":true,\"spiderLegPolylineOptions\":{\"weight\":1.5,\"color\":\"#222\",\"opacity\":0.5},\"freezeAtZoom\":false},null,null,null,[\"Albert Anderson - Lebanon Cumberland Presbyterian Church Cemetery\",\"Adesia Anderson - Lebanon Cumberland Presbyterian Church Cemetery\",\"E Anderson - Lebanon Cumberland Presbyterian Church Cemetery\",\"William Anderson - Lebanon Cumberland Presbyterian Church Cemetery\",\"Nancy Anderson - Lebanon Cumberland Presbyterian Church Cemetery\",\"Elizabeth  Brown -  Cemetery\",\"Nancy Bundy - Liberty Meth Cem Cemetery\",\"W Bundy - Liberty Meth Cem Cemetery\",\"Thomas Bundy - Lebanon Cumberland Presbyterian Church Cemetery\",\"George Bundy - Lebanon Cumberland Presbyterian Church Cemetery\",\"W Burgess - Johnston City Cem Cemetery\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"imagePopup\",\"args\":[[\"Anderson Albert A.JPG\",\"Anderson Adesia.JPG\",\"Anderson E Francis.JPG\",\"Anderson William G.JPG\",\"Anderson Nancy A.JPG\",\"Brown Elizabeth Minnich.jpg\",\"Bundy Nancy chalk.jpg\",\"Bundy WM chalk.jpg\",\"Bundy Thomas.JPG\",\"Bundy George and Lora L.JPG\",\"Burgess WJ.JPG\"],\"group1\",[600,600,600,600,600,600,600,600,600,600,600],[800,800,800,800,800,450,800,800,800,450,450],[\"l\",\"l\",\"l\",\"l\",\"l\",\"l\",\"l\",\"l\",\"l\",\"l\",\"l\"],[\"Anderson Albert A\",\"Anderson Adesia\",\"Anderson E Francis\",\"Anderson William G\",\"Anderson Nancy A\",\"Brown Elizabeth Minnich\",\"Bundy Nancy chalk\",\"Bundy WM chalk\",\"Bundy Thomas\",\"Bundy George and Lora L\",\"Burgess WJ\"],false,{\"maxWidth\":600,\"src\":[\"function (expr, envir = new.env()) \",\"eval.parent(substitute(eval(quote(expr), envir)))\"],\"maxHeight\":300}]}],\"limits\":{\"lat\":[37.87341799825179,40.87452769387292],\"lng\":[-89.04737107239193,-75.70267266279126]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/jquery-1.12.4/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\r\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\r\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\r\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-binding-2.1.2/leaflet.js\"></script>\r\n<link href=\"../../site_libs/leaflet-markercluster-1.0.5/MarkerCluster.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/leaflet-markercluster-1.0.5/MarkerCluster.Default.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.js\"></script>\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.freezable.js\"></script>\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.layersupport.js\"></script>\r\n<script src=\"../../site_libs/popup-0.0.1/popup.js\"></script>\r\n<link id=\"image-group1-Anderson Albert A-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Anderson Albert A.JPG\"/>\r\n<link id=\"image-group1-Anderson Adesia-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Anderson Adesia.JPG\"/>\r\n<link id=\"image-group1-Anderson E Francis-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Anderson E Francis.JPG\"/>\r\n<link id=\"image-group1-Anderson William G-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Anderson William G.JPG\"/>\r\n<link id=\"image-group1-Anderson Nancy A-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Anderson Nancy A.JPG\"/>\r\n<link id=\"image-group1-Brown Elizabeth Minnich-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Brown Elizabeth Minnich.jpg\"/>\r\n<link id=\"image-group1-Bundy Nancy chalk-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Bundy Nancy chalk.jpg\"/>\r\n<link id=\"image-group1-Bundy WM chalk-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Bundy WM chalk.jpg\"/>\r\n<link id=\"image-group1-Bundy Thomas-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Bundy Thomas.JPG\"/>\r\n<link id=\"image-group1-Bundy George and Lora L-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Bundy George and Lora L.JPG\"/>\r\n<link id=\"image-group1-Burgess WJ-attachment\" rel=\"attachment\" href=\"../../site_libs/image-group1-0.0.1/Burgess WJ.JPG\"/>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}