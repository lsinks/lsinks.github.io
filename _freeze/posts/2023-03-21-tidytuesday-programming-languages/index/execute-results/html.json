{
  "hash": "ae0caf06b7310e410f7d2365030b2d73",
  "result": {
    "markdown": "---\ntitle: \"TidyTuesday Week 12: Programming Languages\"\ndescription: \"TidyTuesday: How to comment in Various Programming Languages\"\nauthor:\n  - name: Louise E. Sinks\n    url: https://lsinks.github.io/\n    date: 03-21-2023\ncategories: [R, TidyTuesday, R-code, Code-Along] # self-defined categories\ncitation:\n  url: https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/ \nimage: pop-lang-by-token.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nThis is my first attempt at Tidy Tuesday. The dataset today is about Programming Languages. The [sample visualizations are about the comment codes](https://pldb.com/posts/does-every-programming-language-support-line-comments.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(ggthemes)\nlibrary(gt)\nlibrary(ggrepel)\n```\n:::\n\n\nLoad the data first. There has been some cleaning done as outlined on the [TidyTuesday github page](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-21/readme.md).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the Data\n\n# Read in with tidytuesdayR package \n# This loads the readme and all the datasets for the week of interest\n\n# Either ISO-8601 date or year/week works!\n\ntuesdata <- tidytuesdayR::tt_load('2023-03-21')\ntuesdata <- tidytuesdayR::tt_load(2023, week = 12)\n\nlanguages <- tuesdata$languages\n```\n:::\n\n\nFirst, let's look at how complete the data is. The skimr package produces nice summary information about the variables and their completeness.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(languages)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |languages |\n|Number of rows           |4303      |\n|Number of columns        |49        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|character                |21        |\n|logical                  |4         |\n|numeric                  |24        |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: character**\n\n|skim_variable                   | n_missing| complete_rate| min|  max| empty| n_unique| whitespace|\n|:-------------------------------|---------:|-------------:|---:|----:|-----:|--------:|----------:|\n|pldb_id                         |         0|          1.00|   1|   52|     0|     4303|          0|\n|title                           |         0|          1.00|   1|   56|     0|     4267|          0|\n|description                     |      3480|          0.19|   4| 2273|     0|      811|          0|\n|type                            |         0|          1.00|   2|   27|     0|       40|          0|\n|creators                        |      3203|          0.26|   2|  253|     0|      985|          0|\n|website                         |      2928|          0.32|  13|  131|     0|     1368|          0|\n|domain_name                     |      3588|          0.17|   6|   32|     0|      700|          0|\n|reference                       |      2314|          0.46|  15|  251|     0|     1955|          0|\n|github_repo                     |      3402|          0.21|  25|   73|     0|      897|          0|\n|github_repo_description         |      3438|          0.20|   4|  419|     0|      853|          0|\n|github_language                 |      3829|          0.11|   1|   30|     0|      474|          0|\n|github_language_tm_scope        |      3837|          0.11|   4|   34|     0|      361|          0|\n|github_language_type            |      3837|          0.11|   4|   11|     0|        4|          0|\n|github_language_ace_mode        |      3838|          0.11|   1|   16|     0|       96|          0|\n|github_language_file_extensions |      3833|          0.11|   1|  606|     0|      466|          0|\n|wikipedia                       |      2731|          0.37|  32|  104|     0|     1566|          0|\n|wikipedia_summary               |      2884|          0.33|  17| 6741|     0|     1407|          0|\n|wikipedia_related               |      3145|          0.27|   1| 1761|     0|     1059|          0|\n|line_comment_token              |      3831|          0.11|   1|    7|     0|       23|          0|\n|origin_community                |      1190|          0.72|   3|  305|     0|     2232|          0|\n|file_type                       |      3213|          0.25|   2|    6|     0|        4|          0|\n\n\n**Variable type: logical**\n\n|skim_variable                     | n_missing| complete_rate| mean|count             |\n|:---------------------------------|---------:|-------------:|----:|:-----------------|\n|features_has_comments             |      3683|          0.14| 1.00|TRU: 617, FAL: 3  |\n|features_has_semantic_indentation |      3722|          0.14| 0.11|FAL: 516, TRU: 65 |\n|features_has_line_comments        |      3765|          0.13| 0.96|TRU: 517, FAL: 21 |\n|is_open_source                    |      3792|          0.12| 0.89|TRU: 453, FAL: 58 |\n\n\n**Variable type: numeric**\n\n|skim_variable                    | n_missing| complete_rate|       mean|          sd|    p0|       p25|       p50|         p75|     p100|hist  |\n|:--------------------------------|---------:|-------------:|----------:|-----------:|-----:|---------:|---------:|-----------:|--------:|:-----|\n|appeared                         |         0|          1.00|    1991.11|      111.44| -2000|   1984.00|    1997.0|     2012.00|     2023|▁▁▁▁▇ |\n|domain_name_registered           |      3801|          0.12|    2011.33|        7.02|  1990|   2007.00|    2013.0|     2017.00|     2023|▁▃▃▇▆ |\n|isbndb                           |      3217|          0.25|       7.71|       33.16|     0|      0.00|       0.0|        2.00|      400|▇▁▁▁▁ |\n|book_count                       |         0|          1.00|       2.08|       17.34|     0|      0.00|       0.0|        0.00|      401|▇▁▁▁▁ |\n|semantic_scholar                 |      3545|          0.18|       3.79|        8.32|     0|      0.00|       0.0|        3.00|       52|▇▁▁▁▁ |\n|language_rank                    |         0|          1.00|    2151.00|     1242.31|     0|   1075.50|    2151.0|     3226.50|     4302|▇▇▇▇▇ |\n|github_repo_stars                |      3414|          0.21|    2127.40|     7554.02|     0|     29.00|     194.0|     1071.00|    88526|▇▁▁▁▁ |\n|github_repo_forks                |      3417|          0.21|     261.29|     1203.00|     0|      2.25|      16.0|       91.50|    23732|▇▁▁▁▁ |\n|github_repo_updated              |      3418|          0.21|    2021.39|        1.76|  2012|   2022.00|    2022.0|     2022.00|     2023|▁▁▁▁▇ |\n|github_repo_subscribers          |      3418|          0.21|      62.34|      200.88|     0|      4.00|      13.0|       44.00|     2910|▇▁▁▁▁ |\n|github_repo_created              |      3425|          0.20|    2015.84|        3.48|  2006|   2013.00|    2016.0|     2019.00|     2022|▁▅▇▇▇ |\n|github_repo_issues               |      3518|          0.18|     123.03|      546.26|     0|      1.00|       9.0|       61.00|     9522|▇▁▁▁▁ |\n|github_repo_first_commit         |      3567|          0.17|    2014.74|        4.99|  1987|   2012.00|    2015.0|     2018.00|     2022|▁▁▁▆▇ |\n|github_language_repos            |      3833|          0.11|  197134.67|  1226900.57|     0|     91.25|     725.5|     7900.25| 16046489|▇▁▁▁▁ |\n|wikipedia_daily_page_views       |      2837|          0.34|     227.13|      783.55|    -1|      9.00|      24.0|       99.00|    13394|▇▁▁▁▁ |\n|wikipedia_backlinks_count        |      2877|          0.33|     318.55|     1635.29|     1|     13.00|      39.0|      126.00|    34348|▇▁▁▁▁ |\n|wikipedia_page_id                |      2893|          0.33| 9167847.21| 13506832.90|   928| 375153.75| 2114700.5| 12321223.00| 63063548|▇▁▁▁▁ |\n|wikipedia_appeared               |      2958|          0.31|    1991.14|       17.03|  1830|   1980.00|    1994.0|     2005.00|     2019|▁▁▁▃▇ |\n|wikipedia_created                |      3040|          0.29|    2005.75|        3.77|  2001|   2003.00|    2005.0|     2007.00|     2020|▇▇▂▁▁ |\n|wikipedia_revision_count         |      3130|          0.27|     330.43|      813.26|     1|     35.00|      84.0|      242.00|    10104|▇▁▁▁▁ |\n|last_activity                    |         0|          1.00|    2000.62|       84.60|  -900|   1992.00|    2006.0|     2021.00|     2023|▁▁▁▁▇ |\n|number_of_users                  |         0|          1.00|   13771.26|   227712.95|     0|      0.00|      20.0|      230.00|  7179119|▇▁▁▁▁ |\n|number_of_jobs                   |         0|          1.00|     422.18|    12572.99|     0|      0.00|       0.0|        0.00|   771996|▇▁▁▁▁ |\n|central_package_repository_count |      1482|          0.66|       0.00|        0.00|     0|      0.00|       0.0|        0.00|        0|▁▁▇▁▁ |\n:::\n:::\n\n\nThe data is pretty incomplete. Only 9 of the 49 variables are fully complete. The line comment token is only 0.110 complete and the has comments is only 0.144 complete. This variable has only 3 false values; it is likely that the missing data is skewed towards false. It is more likely that you'd complete this entry if there were a comment, than if there weren't. It is also possible that the cleaning and prep done to prepare the #TidyTuesday dataset removed some entries which did have FALSE values for the comments.\n\nThere are some funny entries that appeared in the skim report, like -2000 as the year the earliest language appeared. It turns out this is Babylonian numerals, so it probably correct. This does show there is a lot more than computer languages in this dataset though.\n\nLooking through the variables, I see there is a \"type\" in the data dictionary, and it appears that \"pl\" means programming language. So let's filter for that. (I couldn't find an explanation of this variable on https://pldb.com/) It is used on various pages, but I couldn't find the definition of the types.\n\nAlso, rank starts at 0, and I'd like it to start at 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang <- languages %>%\n  filter(type == 'pl') %>%\n  select(-starts_with(\"github\"), -starts_with(\"wikipedia\"),\n         -description, -creators, -(website:semantic_scholar)) %>%\n  mutate(language_rank = language_rank + 1)\n\nskim(programming_lang)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |                 |\n|:------------------------|:----------------|\n|Name                     |programming_lang |\n|Number of rows           |3368             |\n|Number of columns        |16               |\n|_______________________  |                 |\n|Column type frequency:   |                 |\n|character                |6                |\n|logical                  |4                |\n|numeric                  |6                |\n|________________________ |                 |\n|Group variables          |None             |\n\n\n**Variable type: character**\n\n|skim_variable      | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|pldb_id            |         0|          1.00|   1|  52|     0|     3368|          0|\n|title              |         0|          1.00|   1|  54|     0|     3347|          0|\n|type               |         0|          1.00|   2|   2|     0|        1|          0|\n|line_comment_token |      3002|          0.11|   1|   3|     0|       18|          0|\n|origin_community   |       883|          0.74|   3| 176|     0|     1825|          0|\n|file_type          |      2609|          0.23|   4|   4|     0|        1|          0|\n\n\n**Variable type: logical**\n\n|skim_variable                     | n_missing| complete_rate| mean|count             |\n|:---------------------------------|---------:|-------------:|----:|:-----------------|\n|features_has_comments             |      2886|          0.14| 1.00|TRU: 482          |\n|features_has_semantic_indentation |      2917|          0.13| 0.09|FAL: 410, TRU: 41 |\n|features_has_line_comments        |      2954|          0.12| 0.97|TRU: 401, FAL: 13 |\n|is_open_source                    |      2984|          0.11| 0.85|TRU: 328, FAL: 56 |\n\n\n**Variable type: numeric**\n\n|skim_variable                    | n_missing| complete_rate|     mean|        sd|   p0|    p25|    p50|    p75|    p100|hist  |\n|:--------------------------------|---------:|-------------:|--------:|---------:|----:|------:|------:|------:|-------:|:-----|\n|appeared                         |         0|          1.00|  1994.16|     17.34| 1948| 1982.0| 1994.0| 2010.0|    2022|▁▅▇▇▇ |\n|language_rank                    |         0|          1.00|  2296.75|   1249.08|    1| 1243.5| 2334.5| 3423.5|    4303|▆▆▆▆▇ |\n|last_activity                    |         0|          1.00|  2002.04|     17.91| 1951| 1989.0| 2005.0| 2019.0|    2023|▁▂▃▆▇ |\n|number_of_users                  |         0|          1.00| 10793.85| 190197.19|    0|    0.0|   15.0|  165.0| 5962666|▇▁▁▁▁ |\n|number_of_jobs                   |         0|          1.00|   160.22|   2692.65|    0|    0.0|    0.0|    0.0|   85206|▇▁▁▁▁ |\n|central_package_repository_count |       939|          0.72|     0.00|      0.00|    0|    0.0|    0.0|    0.0|       0|▁▁▇▁▁ |\n:::\n:::\n\n\nThis now produces a dataset with 0.143 completeness for features_has_comments. All non-missing entries are TRUE, which again suggests that FALSE is over represented in the missing data.\n\nLet's only look at the programming languages that have data for comments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang <- programming_lang %>%\n  filter(features_has_comments == TRUE)\n\nskim(programming_lang)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |                 |\n|:------------------------|:----------------|\n|Name                     |programming_lang |\n|Number of rows           |482              |\n|Number of columns        |16               |\n|_______________________  |                 |\n|Column type frequency:   |                 |\n|character                |6                |\n|logical                  |4                |\n|numeric                  |6                |\n|________________________ |                 |\n|Group variables          |None             |\n\n\n**Variable type: character**\n\n|skim_variable      | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|pldb_id            |         0|          1.00|   1|  35|     0|      482|          0|\n|title              |         0|          1.00|   1|  45|     0|      481|          0|\n|type               |         0|          1.00|   2|   2|     0|        1|          0|\n|line_comment_token |       120|          0.75|   1|   3|     0|       18|          0|\n|origin_community   |       112|          0.77|   3| 105|     0|      311|          0|\n|file_type          |       146|          0.70|   4|   4|     0|        1|          0|\n\n\n**Variable type: logical**\n\n|skim_variable                     | n_missing| complete_rate| mean|count             |\n|:---------------------------------|---------:|-------------:|----:|:-----------------|\n|features_has_comments             |         0|          1.00| 1.00|TRU: 482          |\n|features_has_semantic_indentation |        57|          0.88| 0.05|FAL: 405, TRU: 20 |\n|features_has_line_comments        |        71|          0.85| 0.97|TRU: 400, FAL: 11 |\n|is_open_source                    |       305|          0.37| 0.91|TRU: 161, FAL: 16 |\n\n\n**Variable type: numeric**\n\n|skim_variable                    | n_missing| complete_rate|     mean|        sd|   p0|     p25|    p50|     p75|    p100|hist  |\n|:--------------------------------|---------:|-------------:|--------:|---------:|----:|-------:|------:|-------:|-------:|:-----|\n|appeared                         |         0|          1.00|  2000.17|     14.07| 1957| 1991.00| 2003.0| 2011.00|    2022|▁▂▆▇▇ |\n|language_rank                    |         0|          1.00|   656.10|    559.75|    1|  201.25|  515.5|  997.25|    2994|▇▃▂▁▁ |\n|last_activity                    |         0|          1.00|  2016.20|      8.27| 1967| 2011.00| 2022.0| 2022.00|    2023|▁▁▁▂▇ |\n|number_of_users                  |         0|          1.00| 62892.08| 462314.18|    0|  112.00|  437.5| 1615.25| 5962666|▇▁▁▁▁ |\n|number_of_jobs                   |         0|          1.00|   971.30|   6489.83|    0|    0.00|    0.0|    0.00|   85206|▇▁▁▁▁ |\n|central_package_repository_count |       136|          0.72|     0.00|      0.00|    0|    0.00|    0.0|    0.00|       0|▁▁▇▁▁ |\n:::\n:::\n\n\nThis subset is still moderately incomplete for information about comments. Only 75% of the data has the type of comment entered (#, //, etc). 86% of the entries are completed for \"feature_has_line_comments\" which indicates if comments must occupy a single line or if they can be made inline.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang %>% filter(is.na(line_comment_token) == FALSE) %>%\n  group_by(line_comment_token) %>%\n  count(line_comment_token) %>%\n  ggplot(aes(fct_rev(fct_reorder(line_comment_token, n)), n)) +\n  geom_col(fill = \"dodgerblue2\") +\n  ylab(\"Count\") +\n  xlab(\"Comment Token\") +\n  ggtitle(\"Popularity of different comment tokens\") +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45,  vjust = 0.25, hjust = 0.25))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/most-popular-comment-token-1.png){width=672}\n:::\n:::\n\n\nLet's make a nice table of the popular comment types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# | label: table-tokens\nprogramming_lang2 <- programming_lang %>%\n  filter(is.na(line_comment_token) == FALSE) %>%\n  count(line_comment_token, sort = TRUE) \n\nprogramming_lang2 %>%\ngt() %>%\ntab_header(title = \"Most Common Comment Tokens\") %>%\ncols_label(line_comment_token = \"Token\", n = \"# of Languages that use token\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"ywsykolfty\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#ywsykolfty .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ywsykolfty .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ywsykolfty .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ywsykolfty .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ywsykolfty .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ywsykolfty .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ywsykolfty .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ywsykolfty .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ywsykolfty .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ywsykolfty .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ywsykolfty .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ywsykolfty .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ywsykolfty .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ywsykolfty .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ywsykolfty .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ywsykolfty .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ywsykolfty .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ywsykolfty .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ywsykolfty .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ywsykolfty .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ywsykolfty .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ywsykolfty .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ywsykolfty .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ywsykolfty .gt_left {\n  text-align: left;\n}\n\n#ywsykolfty .gt_center {\n  text-align: center;\n}\n\n#ywsykolfty .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ywsykolfty .gt_font_normal {\n  font-weight: normal;\n}\n\n#ywsykolfty .gt_font_bold {\n  font-weight: bold;\n}\n\n#ywsykolfty .gt_font_italic {\n  font-style: italic;\n}\n\n#ywsykolfty .gt_super {\n  font-size: 65%;\n}\n\n#ywsykolfty .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#ywsykolfty .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ywsykolfty .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ywsykolfty .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ywsykolfty .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ywsykolfty .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ywsykolfty .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  <thead class=\"gt_header\">\n    <tr>\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Most Common Comment Tokens</td>\n    </tr>\n    \n  </thead>\n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Token\">Token</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"# of Languages that use token\"># of Languages that use token</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">//</td>\n<td headers=\"n\" class=\"gt_row gt_right\">161</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">#</td>\n<td headers=\"n\" class=\"gt_row gt_right\">70</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">;</td>\n<td headers=\"n\" class=\"gt_row gt_right\">49</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">--</td>\n<td headers=\"n\" class=\"gt_row gt_right\">31</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">'</td>\n<td headers=\"n\" class=\"gt_row gt_right\">16</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">%</td>\n<td headers=\"n\" class=\"gt_row gt_right\">12</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">!</td>\n<td headers=\"n\" class=\"gt_row gt_right\">7</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">*</td>\n<td headers=\"n\" class=\"gt_row gt_right\">5</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">REM</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">*&gt;</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">---</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">/</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">NB.</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">\\</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">\\*</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">__</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">~</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n    <tr><td headers=\"line_comment_token\" class=\"gt_row gt_left\">⍝</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nThere is a language rank, which measures the popularity of the language based on signals such as number of users and number of jobs. Let's see the average rank of languages for each token.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang %>% filter(is.na(line_comment_token) == FALSE) %>%\n  group_by(line_comment_token) %>%\n  summarize(avg_rank = mean(language_rank)) %>%\n  ggplot(aes((fct_reorder(line_comment_token, avg_rank)), avg_rank)) +\n  geom_col(fill = \"dodgerblue2\") +\n  ylab(\"Average Rank of Language\") +\n  xlab(\"Comment Token\") +\n  ggtitle(\"Average rank of languages using different comment tokens\") +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45,  vjust = 0.25, hjust = 0.25))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/avg-rank-by-token-1.png){width=672}\n:::\n:::\n\n\nThe highest (average) ranked token is \"\\*\\>\". What languages use this?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang %>% filter(line_comment_token == \"*>\") %>%\n  select(title, language_rank, line_comment_token)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  title language_rank line_comment_token\n  <chr>         <dbl> <chr>             \n1 COBOL            19 *>                \n```\n:::\n:::\n\n\nOnly COBOL does, so the rank of this token isn't diluted by many less popular languages. We can view the distribution of the language ranks for all the tokens.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang %>%\n  filter(is.na(line_comment_token) == FALSE) %>%\n  ggplot(aes(line_comment_token, language_rank)) +\n  geom_boxplot(color = \"dodgerblue2\") +\n  ggtitle(\"The rank of languages by token.\") +\n  xlab(\"Token\") +\n  ylab (\"Language Rank\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/boxplot-ranks-1.png){width=672}\n:::\n:::\n\n\nOkay, let's clean this up. I'd like it sorted by the median rank. Remeber rank is in reverse numerical order- a low number means a higher rank.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang %>%\n  filter(is.na(line_comment_token) == FALSE) %>%\n  ggplot(aes(fct_reorder(line_comment_token, language_rank,\n                         .fun = median, .desc = FALSE), language_rank)) +\n  geom_boxplot(color = \"dodgerblue2\") +\n  ggtitle(\"The rank of languages by token\") +\n  xlab(\"Token\") +\n  ylab(\"Language Rank\") +\n    theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/sorted-rank-boxplot-1.png){width=672}\n:::\n:::\n\n\nLet's see the most popular language for each symbol. There might be a way to do this all at once, but I'm going to pull it out with joins to previous tables I've created.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogramming_lang3 <- programming_lang %>%\n  filter(is.na(line_comment_token) == FALSE) %>%\n  group_by(line_comment_token) %>%\n  summarize(highest_rank = min(language_rank)) \n\njoin_madness <- programming_lang2 %>%\n  left_join(programming_lang3, by = \"line_comment_token\") %>% \n  left_join(programming_lang, \n            by = c(\"highest_rank\" = \"language_rank\",\n                   \"line_comment_token\" = \"line_comment_token\")) \n\njoin_madness <- join_madness %>%\n  select(line_comment_token, n, highest_rank, title, appeared, number_of_users,\n         number_of_jobs)\n```\n:::\n\n\nSo now we have a bunch of summarized data in a single dataframe. Here's a graph. It is saying something, but I'm not sure what. When you can't come up with a concise title, then you probably don't know what you are trying to say...\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoin_madness %>%\n  ggplot(aes(highest_rank, n, size = log(number_of_users), \n             color = log(number_of_users), label = line_comment_token)) +\n  scale_y_log10() +\n  scale_x_log10() +\n  geom_text_repel(show.legend = FALSE) +\n  ggtitle(\"Popularity of tokens by language rank and usage\") +\n  xlab(\"Highest Rank of language using Token\") +\n  ylab(\"Number of Languages using token\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/tokens-pop-1.png){width=672}\n:::\n:::\n\n\nThis is a visualization of the highest ranked languages for each token. The number of users of the dominant language is also encoded in the size and color of the label. Having it ordered makes it difficult to tell if Java or Python is the most popular/ highest ranked language.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoin_madness %>%\n  ggplot(aes(fct_rev(fct_reorder(line_comment_token, highest_rank)), n,\n             size = log(number_of_users), color = log(number_of_users),\n             label = title)) +\n # geom_point() +\n  scale_y_log10() +\n  geom_text_repel(show.legend = FALSE) +\n   ggtitle(\"The Most Popular Language for Each Comment Token\") +\n  xlab(\"Token\") +\n  ylab(\"Number of languages using token\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lang-token-graph-1.png){width=672}\n:::\n:::\n\n\nHere is the same graph just ordered \"alphabetically\" by token.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoin_madness %>%\n  ggplot(aes(line_comment_token, n, size = log(number_of_users), \n             color = log(number_of_users), label = title)) +\n # geom_point() +\n  scale_y_log10() +\n  geom_text_repel(show.legend = FALSE) +\n   ggtitle(\"The Most Popular Language for Each Comment Token\") +\n  xlab(\"Token\") +\n  ylab(\"Number of languages using token\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lang-token-graph-undordered-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}