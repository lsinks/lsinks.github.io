<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Louise E. Sinks</title>
<link>https://lsinks.github.io/posts.html</link>
<atom:link href="https://lsinks.github.io/posts.xml" rel="self" type="application/rss+xml"/>
<description>Data Science Blog and Portfolio of Louise Sinks</description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Sun, 02 Apr 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>30 Day Chart Challenge -Arlington Parks</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks.html</link>
  <description><![CDATA[ 



<p>When I looked at Twitter this morning, my feed was filled with amazing charts. Apparently, April is month for the #30DayChartChallenge. More info can be found at the <a href="https://github.com/30DayChartChallenge/Edition2023">challenge’s Github page</a>. Each day, the challenge specifies a type of chart, but not a dataset. Today’s challenge is to create a waffle chart. I’d never heard of a waffle chart, but luckily, R has a <a href="https://cran.r-project.org/web/packages/waffle/">package</a> for that!</p>
<p>Keeping it simple and just using tidyverse and waffle packages today. (Spoiler, I had incredible difficulties with this package.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(waffle)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span></code></pre></div>
</div>
<p>A waffle chart is similar to a pie chart, but since it is constructed from squares, instead of wedges, it is a bit easier to correctly judge the relative areas.</p>
<p>I discovered that Arlington County has a website with a bunch of <a href="https://data.arlingtonva.us/">open source data</a>, so I poked around there to find a dataset for today’s challenge. I decided to use the dataset on <a href="https://data.arlingtonva.us/dataset/213">parks and acreage</a>. In addition to having local and federally owned parks, Arlington is park of a consortium of Northern Virginia jurisdictions that also operate <a href="https://www.novaparks.com/">regional parks</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">parks <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"parks.csv"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Rows: 10 Columns: 6
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (6): Profile Year, County Owned Parkland (Acreage), NOVA Parks (Acreage)...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<p>The dataset contains 3 years worth of data (2019-2021) and the total number of acres owned by the county, NOVA parks, and the National Park Service. It also includes the number of parks own by NOVA parks and the county, but not the number of NPS parks. I did try to find the number of NPS parks and the answer isn’t easily obtainable. The NPS owns one park in Arlington (Arlington House), but there are a couple of multi-state trails that might go through the county, but I wasn’t interested in pulling up maps to check.</p>
<p>The dataset comes as an excel sheet and the column names aren’t nice. I’ve been working with so many datasets designed for R or SQL that it was a shock to see long column names with spaces and punctuation. I had to look up how to handle that! The answer is backticks, as below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">parks_2021 <span class="ot" style="color: #003B4F;">&lt;-</span> parks <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Profile Year</span><span class="st" style="color: #20794D;">`</span> <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">2021</span>)</span></code></pre></div>
</div>
<p>I’m going to rename the columns and in this filtered dataset. There isn’t much year to year change in this dataset (there is one extra park in 2020), so I’m not going to do anything with the entire dataset. If I were, I’d rename the parent dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">parks_2021 <span class="ot" style="color: #003B4F;">&lt;-</span> parks_2021 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">transmute</span>(<span class="at" style="color: #657422;">year =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Profile Year</span><span class="st" style="color: #20794D;">`</span>,</span>
<span id="cb5-3">         <span class="at" style="color: #657422;">county_acres =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">County Owned Parkland (Acreage)</span><span class="st" style="color: #20794D;">`</span>,</span>
<span id="cb5-4">         <span class="at" style="color: #657422;">NOVA_acres =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">NOVA Parks (Acreage)</span><span class="st" style="color: #20794D;">`</span>,</span>
<span id="cb5-5">         <span class="at" style="color: #657422;">NPS_acres =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">National Parks Service (Acreage)</span><span class="st" style="color: #20794D;">`</span>) </span>
<span id="cb5-6"></span>
<span id="cb5-7">parks_2021 <span class="ot" style="color: #003B4F;">&lt;-</span> parks_2021 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>year)</span></code></pre></div>
</div>
<p>Now let’s get waffling!</p>
<p>Allegedly, you can both <a href="https://rud.is/rpubs/building-waffle-charts.html">pass waffle dataframes or use the provided geom_waffle</a>, but neither was successful for me. With respect to the geom_waffle, I found a suggestion to <a href="https://github.com/hrbrmstr/waffle/issues/76">install waffle from the github repo and restart R Studio</a>, but that didn’t work for me. Others stated that re-installing R Studio fixed the problem, but my commitment to waffle charts is not that great.</p>
<p>As to passing it dataframes, waffle constantly complained about <code>'list' object cannot be coerced to type 'double'</code> even when using code from other folk’s tutorial. Passing waffle a simple vector did work.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Vector</span></span>
<span id="cb6-2">x <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">30</span>, <span class="dv" style="color: #AD0000;">25</span>, <span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;"># Waffle chart</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;">waffle</span>(x, <span class="at" style="color: #657422;">rows =</span> <span class="dv" style="color: #AD0000;">8</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/test-vector-waffle-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So, I converted my dataframe to a vector. First, I reshaped it to long rather than wide. (Neither the long nor the wide df waffled.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">parks_2021_long <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pivot_longer</span>(parks_2021, <span class="at" style="color: #657422;">cols =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"owner"</span>, <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"acreage"</span>)</span></code></pre></div>
</div>
<p>Then I converted it to a vector. This should be a named vector of numbers.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">parks_2021_vec <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">deframe</span>(parks_2021_long)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">class</span>(parks_2021_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "numeric"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">print</span>(parks_2021_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>county_acres   NOVA_acres    NPS_acres 
         924          136          417 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">str</span>(parks_2021_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Named num [1:3] 924 136 417
 - attr(*, "names")= chr [1:3] "county_acres" "NOVA_acres" "NPS_acres"</code></pre>
</div>
</div>
<p>Let’s waffle it. When I first waffled it, I got 4 categories instead of 3. I found an example that said you needed to <a href="https://imuhovic.com/posts/waffle-plots-square-pies-ggplot/">explicitly pass it 3 colors</a> or else it would fill in the blank space with a 4th color. Then you get the correct labels, but no chart!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;">#This waffles, it seems like nonsense to me</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;">waffle</span>(parks_2021_vec, <span class="at" style="color: #657422;">colors =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#FFC0CB"</span>, <span class="st" style="color: #20794D;">"#FFC0AB"</span>, <span class="st" style="color: #20794D;">"green"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/nonsense-waffle-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So now we reached the sad state of affairs where I type in the values to make this work. And that also does not work.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">x <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="at" style="color: #657422;">county =</span> <span class="dv" style="color: #AD0000;">924</span>, <span class="at" style="color: #657422;">nova =</span> <span class="dv" style="color: #AD0000;">136</span>, <span class="at" style="color: #657422;">nps =</span> <span class="dv" style="color: #AD0000;">417</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;"># Waffle chart</span></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;">waffle</span>(x , <span class="at" style="color: #657422;">rows =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/typing_vector-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Small numbers work</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">y <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="at" style="color: #657422;">county =</span> <span class="fl" style="color: #AD0000;">9.24</span>, <span class="at" style="color: #657422;">nova =</span> <span class="fl" style="color: #AD0000;">1.36</span>, <span class="at" style="color: #657422;">nps =</span> <span class="fl" style="color: #AD0000;">4.17</span>)</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;"># Waffle chart</span></span>
<span id="cb16-4"><span class="fu" style="color: #4758AB;">waffle</span>(y ,  <span class="at" style="color: #657422;">rows =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/trying-random-things-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>If I convert everything to percentages…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">total <span class="ot" style="color: #003B4F;">=</span> <span class="dv" style="color: #AD0000;">924</span> <span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">136</span> <span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">417</span></span>
<span id="cb17-2">y <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="at" style="color: #657422;">county =</span> (<span class="dv" style="color: #AD0000;">924</span><span class="sc" style="color: #5E5E5E;">/</span>total)<span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">100</span>, <span class="at" style="color: #657422;">nova =</span> (<span class="dv" style="color: #AD0000;">136</span><span class="sc" style="color: #5E5E5E;">/</span>total)<span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">100</span>, <span class="at" style="color: #657422;">nps =</span> (<span class="dv" style="color: #AD0000;">417</span><span class="sc" style="color: #5E5E5E;">/</span>total)<span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;"># Waffle chart</span></span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;">waffle</span>(y ,  <span class="at" style="color: #657422;">rows =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/trying-percents-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I don’t find any documentation about the size of the numbers. It is not a requirement that the totals must add up to 100 (100%); small numbers adding up to anything works. Waffle charts are not only for proportional data, but can also be used to track progress. There is nothing in the documentation on CRAN that gives a clue about this, nor did I see anything in the tutorials I looked at.</p>
<p>I’m going to pretty up the chart and call it a day. I thought this would take me about 20 minutes to make a nice chart and instead I’ve spent several hours and I don’t even understand what went wrong. Also, the named vector does work when I adjust the size of the numbers to “smaller” values. I picked nice forest colors since we are talking about parks.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">parks_2021_percent <span class="ot" style="color: #003B4F;">=</span> (parks_2021_vec <span class="sc" style="color: #5E5E5E;">/</span> total) <span class="sc" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb18-2"></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;">waffle</span>(parks_2021_percent, <span class="at" style="color: #657422;">colors =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"darkgreen"</span>, <span class="st" style="color: #20794D;">"darkseagreen"</span>, <span class="st" style="color: #20794D;">"darkolivegreen"</span>), <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Who owns the parks in Arlington, Virginia?"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks_files/figure-html/final-waffle-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I don’t really understand the waffle package. I don’t find the graphic particularly understandable. I’d like there to be some sort of indication about what each square represents. And I find it very annoying that there are not 100 squares. I know this is a rounding issue, but given that the dataset, by the nature of how it was created, should equal 100%, the chart is just confusing. And for what it is worth, I had to repeatedly restart RStudio, because code chunks would just fail to do anything. They’d run, but there would be no output, not even warnings or errors.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {30 {Day} {Chart} {Challenge} {-Arlington} {Parks}},
  date = {2023-04-02},
  url = {https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“30 Day Chart Challenge -Arlington
Parks.”</span> April 2, 2023. <a href="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks">https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>R-code</category>
  <category>Code-Along</category>
  <category>Waffle</category>
  <category>30DayChartChallenge</category>
  <guid>https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/parks.html</guid>
  <pubDate>Sun, 02 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-04-02-chart-challenge-2/thumbnail.png" medium="image" type="image/png" height="131" width="144"/>
</item>
<item>
  <title>Self-Guided Learning through a Wordle Guess Generator: Part 1</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/Wordle.html</link>
  <description><![CDATA[ 



<section id="self-guided-learning-the-ever-evolving-wordle-guess-generator" class="level2">
<h2 class="anchored" data-anchor-id="self-guided-learning-the-ever-evolving-wordle-guess-generator">Self-Guided Learning: The Ever Evolving Wordle Guess Generator</h2>
<p>The best way to learn a programming language is to code. Obvious, but sometimes it can be daunting to start a project when you are a novice. Influenced by my time at a start-up, I’ve found the best approach is to create a minimum viable product. This is the smallest working part of the project. By continuing to revise and iterate the code, you can rapidly detect weaknesses in your knowledge and take active steps to fix them.</p>
<p>My learning project was a Wordle Guess Generator. I will show you how I used this project to create a self-guided learning plan. Motivated partly by my desire to have good guesses for Septle (a seven-letter guessing game), this project has been a crucial part of my journey to learn R. Practicing and learning coding skills were more important to me than devising the optimal strategy; if you are interested in “the best” Wordle strategy, then you will probably find much better answers by Googling.</p>
<p>For those who don’t know, Wordle is a word-guessing gamer that gives you five guesses to identify a 5-letter word. Correct letters are shown in green or yellow with each guess, depending on whether they are appropriately placed or not. Incorrect letters are shown in gray.</p>
<p>I wasn’t interested in coming up with the global “best” answer. I wanted to come up with some guesses that fit my gameplay style. I guess three words in a row without trying to solve the game. Then, with a fair number of letters known, I attempt to solve the word.</p>
<p>The code has undergone several significant overhauls as I’ve needed to learn new things and used this project as the test bed. And here it is again, as a vehicle to learn quarto/ markdown. Here I will show you the very first ugly code and how I critiqued and revised it over several months. I’ve put it all on <a href="https://github.com/lsinks/wordle">GitHub</a>. The project is unstructured, the code is ugly, and all the versioning was by filename.</p>
</section>
<section id="brainstorming-the-project." class="level2">
<h2 class="anchored" data-anchor-id="brainstorming-the-project.">1. Brainstorming the project.</h2>
<p>Brainstorm what you want this project to do. Try to have a very clear statement about the project’s goal at the top. If you can think of self-contained modules, mark that. If you can sketch out the scaffold of the code- great! If you have some ideas about the results, even better. Put everything you can think of down. I had been thinking about this project for a while, so this brainstorming sheet is neat. Neatness and organization are not important at this point; getting stuff written down is.</p>
<p>My goal was “I want 3 initial guesses for Septle. Ideally, I’ll maximize the number of unique letters, and I want to preferentially pick from the most frequently used letters.”</p>
<p>I decided my scoring would be based on the frequency letters occur in English; more common letters get a higher score than uncommon letters. To generate the score for the word, I proposed the following process:</p>
<ol type="1">
<li>Read in letter frequencies</li>
<li>Scoring [the letters, originally I thought it would be based on rank, with the most common letter getting a 26 and the least common getting a 1. That is what the confusing little sketch is attempting to convey. A is not the most common letter, nor is Z the least common.]</li>
<li>Read in the list of words</li>
<li>Calculate the scores [of the words]</li>
<li>Pick the best word as a first guess [best meaning highest scoring]</li>
</ol>
<p>I also talk about how the frequency distribution of letters will likely differ between five and seven-letter words. I suggested looking at the frequency of letters in modern text instead of just frequency lists from linguists. I noted that certain letters are more likely to be in a specific position, and it could be valuable to constrain the guess to typical positions. An example is that “y” is almost always at the end of a word in English, so “sadly” might be a better guess than “yacht” for that reason. You are likelier to lock down a letter with a positionally accurate guess. I also said that I wanted a 4th Wordle guess. There are a lot of ideas here! That’s okay because I winnow them down in the next step.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/images/brainstorming_both.jpg" class="img-fluid figure-img" alt="Two handwritten pages entitled &quot;Programming Project 1&quot;"></p>
<p></p><figcaption class="figure-caption">The initial brainstorming session</figcaption><p></p>
</figure>
</div>
</section>
<section id="minimum-viable-product-what-is-the-smallest-program-that-works" class="level2">
<h2 class="anchored" data-anchor-id="minimum-viable-product-what-is-the-smallest-program-that-works">2. Minimum Viable Product: What is the smallest program that works?</h2>
<p>Pull out the minimum viable product from your brainstorming. What is the smallest result that would satisfy your goals? Is there a way to make things a bit smaller? I would size it so you can get working code to accomplish the goal in a few hours.</p>
<p>I chose to generate four guesses for Wordle. I also decided to generate my frequency table from the word list itself. I found a five-letter word list that I could download and read in, but all the letter frequency tables I found were on blogs or in articles, and the only way I could see to get them into my program was to type them in and I was too lazy to do that. I decided to implement the process I outlined in the brainstorming session and calculate four guesses.</p>
</section>
<section id="write-some-bad-code." class="level2">
<h2 class="anchored" data-anchor-id="write-some-bad-code.">3. Write some bad code.</h2>
<p>Write some code that does that thing. It will be ugly. If you can’t figure something out, do it the wrong way. Just get something running.</p>
<p>This first attempt took me 3-4 hours to write.</p>
<p>I googled how to calculate the frequency of letters in words (in R) and found this <a href="https://www.r-bloggers.com/2018/12/rrrrs-in-r-letter-frequency-in-r-package-names/">helpful tutorial</a>.</p>
<section id="the-minimal-viable-product-running-code" class="level3">
<h3 class="anchored" data-anchor-id="the-minimal-viable-product-running-code">The Minimal Viable Product: Running Code</h3>
<p>I cleaned up the commenting/formatting of the initial code just for this post. I also added library(tidyverse)- apparently, I was just loading libraries through the gui back then. If you want to see the true initial version, it is on <a href="https://github.com/lsinks/wordle/blob/main/frequency_072222.R">GitHub</a>.</p>
<p>Here’s what my MVP does:</p>
<ol type="1">
<li><p>I found a <a href="https://www-cs-faculty.stanford.edu/~knuth/sgb-words.txt">list of five letter words</a> online and imported it.</p></li>
<li><p>I calculated how often each letter occurred over the word list.<br>
(This, or the scaled version, was the score assigned to each letter.)</p></li>
<li><p>I looped through the word list and calculated two scores for each word, one using all letters and one using only the unique letters.</p></li>
<li><p>I picked the highest-scoring word as my first guess.</p></li>
<li><p>I then went through the word list and calculated a second score for the words minus the letters already guessed in the first guess (and ignoring duplicated letters).</p></li>
<li><p>I picked the highest-scoring word as my second guess.</p></li>
<li><p>I repeated steps 5 &amp; 6 to pick a third guess.</p></li>
</ol>
<p>Okay, so let’s look at some bad code. I will flag a few things as we go through, but I’m certain you can find much more that is not optimal.</p>
<p>Here’s loading the data and writing two scoring functions. I first wrote these in the code but had time to convert them to functions in this initial work session. It was an opportunity to practice function writing, but it was not critical to the minimum viable product.</p>
<p>I have lots of print statements commented out; this is a very simple way to debug and see how you are proceeding through the code. There are more sophisticated tools in R Studio, but I didn’t want to figure out how to use them at this moment. I use the global variable char_frequencies for the value of each letter. I create this variable in the next code chunk.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">sgb.words <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;">read.delim</span>(<span class="st" style="color: #20794D;">"C:/Users/drsin/OneDrive/Documents/R Projects/wordle/sgb-words.txt"</span>,</span>
<span id="cb1-5">             <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;">#probably want this instead because it assumes no headers</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;">#test6 &lt;- read.table(file.choose())</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">Scoring_Word <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word){</span>
<span id="cb1-11">  <span class="co" style="color: #5E5E5E;">#i'm not handling duplicate letters at all right now</span></span>
<span id="cb1-12">  letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb1-13">  value <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-14">  <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span>) {</span>
<span id="cb1-15">    position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb1-16">    value[i] <span class="ot" style="color: #003B4F;">&lt;-</span> y[position]</span>
<span id="cb1-17">   <span class="co" style="color: #5E5E5E;"># print(i)</span></span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;">if</span> (i <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">5</span>) {</span>
<span id="cb1-19">     <span class="co" style="color: #5E5E5E;"># print("I am here")</span></span>
<span id="cb1-20">     <span class="co" style="color: #5E5E5E;"># print(sum(value))</span></span>
<span id="cb1-21">      <span class="fu" style="color: #4758AB;">return</span>(total <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-22">      }</span>
<span id="cb1-23">    </span>
<span id="cb1-24">  }</span>
<span id="cb1-25">} </span>
<span id="cb1-26"></span>
<span id="cb1-27"></span>
<span id="cb1-28">Scoring_Word_Unique <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word){</span>
<span id="cb1-29"></span>
<span id="cb1-30"> <span class="co" style="color: #5E5E5E;"># print(word)</span></span>
<span id="cb1-31">  letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb1-32">  unique_letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unique</span>(letter_vec)</span>
<span id="cb1-33">  <span class="co" style="color: #5E5E5E;">#print(unique_letter_vec)</span></span>
<span id="cb1-34">  <span class="co" style="color: #5E5E5E;">#print(length(unique_letter_vec))</span></span>
<span id="cb1-35">  </span>
<span id="cb1-36">  value <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-37">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec) <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>) {</span>
<span id="cb1-38">    <span class="fu" style="color: #4758AB;">return</span>(value)</span>
<span id="cb1-39">  } <span class="cf" style="color: #003B4F;">else</span>{</span>
<span id="cb1-40">      <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec)) {</span>
<span id="cb1-41">      position <span class="ot" style="color: #003B4F;">&lt;-</span> unique_letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb1-42">      value[i] <span class="ot" style="color: #003B4F;">&lt;-</span> y[position]</span>
<span id="cb1-43">    <span class="co" style="color: #5E5E5E;"># print(i)</span></span>
<span id="cb1-44">    <span class="co" style="color: #5E5E5E;"># print(value)</span></span>
<span id="cb1-45">    <span class="cf" style="color: #003B4F;">if</span> (i <span class="sc" style="color: #5E5E5E;">==</span> <span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec)) {</span>
<span id="cb1-46">      <span class="co" style="color: #5E5E5E;"># print("I am here")</span></span>
<span id="cb1-47">      <span class="co" style="color: #5E5E5E;"># print(sum(value))</span></span>
<span id="cb1-48">      <span class="fu" style="color: #4758AB;">return</span>(total <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-49">    }</span>
<span id="cb1-50">    </span>
<span id="cb1-51">  }</span>
<span id="cb1-52">  }</span>
<span id="cb1-53">}</span></code></pre></div>
</div>
<p>I did run through most of the code with five words initially, and then later the whole word list, when I was more confident that things worked.</p>
<p>I calculate how often each letter appears in the list and create the scaled version. I created two incredibly ugly graphs: one of the raw counts for each letter and one of the scaled frequencies. This is also a moment to do a quick reality check on the results- are the most and least common letters what you’d expect?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">start_time <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Sys.time</span>()</span>
<span id="cb2-2"></span>
<span id="cb2-3">letters <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(sgb.words[,<span class="dv" style="color: #AD0000;">1</span>], <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb2-4">char_frequencies <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(<span class="fu" style="color: #4758AB;">table</span>(letters))</span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;">#char_frequencies</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;">ggplot</span>(char_frequencies, </span>
<span id="cb2-8">        <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(char_frequencies[,<span class="dv" style="color: #AD0000;">1</span>], char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb2-9">                              , char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>] )) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-10">   <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-11">   <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/Wordle_files/figure-html/letter_frequency-calc-graphs-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">common <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">max</span>(char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb3-2">y <span class="ot" style="color: #003B4F;">=</span> (char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>]<span class="sc" style="color: #5E5E5E;">/</span>common)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;">ggplot</span>(char_frequencies, </span>
<span id="cb3-5">       <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span>  <span class="fu" style="color: #4758AB;">fct_reorder</span>(char_frequencies[,<span class="dv" style="color: #AD0000;">1</span>], char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>]), y )) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/Wordle_files/figure-html/letter_frequency-calc-graphs-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now I calculate the scores for the (hand-picked) words I’ve been playing with. I also hand-calculated these scores using the values from char_frequencies to ensure my scoring functions did what I thought they were.</p>
<p>I initialized an object to store the words, scores, and guesses. You can also tell that I had no idea what data types my objects were since I called them a list. small_list is a matrix/array of characters, and none of my zeros are numbers. I wanted a dataframe, but I didn’t know how to do that. I didn’t have a strong reason to prefer a dataframe other than it was widely used in the courses I was taking at Datacamp.</p>
<p>This chunk also pulls out a single word and sends it to score to check that it works before I loop through the entire object and calculate all the scores.</p>
<p>You can also see I hard-coded the number of words (again… I did this in the prior code chunk too.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;">#calculate the score for crone</span></span>
<span id="cb4-2">crone_score <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Scoring_Word</span>(<span class="st" style="color: #20794D;">"crone"</span>)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">#might_score &lt;- Scoring_Word ("might")</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;">#sadly_score &lt;- Scoring_Word ("sadly")</span></span>
<span id="cb4-5">num_words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">5756</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;">#num_words &lt;- 5</span></span>
<span id="cb4-7">small_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">cbind</span>(<span class="at" style="color: #657422;">word_name =</span> sgb.words[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words,<span class="dv" style="color: #AD0000;">1</span>], </span>
<span id="cb4-8">                    <span class="at" style="color: #657422;">score =</span><span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words), </span>
<span id="cb4-9">                    <span class="at" style="color: #657422;">unique_score =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb4-10">                    <span class="at" style="color: #657422;">post_word_one_unique =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb4-11">                    <span class="at" style="color: #657422;">post_word_two_unique =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb4-12">                    <span class="at" style="color: #657422;">post_word_three_unique =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words)</span>
<span id="cb4-13">                                                )</span>
<span id="cb4-14">word <span class="ot" style="color: #003B4F;">&lt;-</span> small_list[[<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>]]</span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;">Scoring_Word</span>(word)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3.40422</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">ind2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="cf" style="color: #003B4F;">for</span> (ind2 <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words){</span>
<span id="cb6-4">  <span class="co" style="color: #5E5E5E;">#print(small_list[[ind2,1]])</span></span>
<span id="cb6-5">  score_ind2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Scoring_Word</span>(small_list[[ind2,<span class="dv" style="color: #AD0000;">1</span>]])</span>
<span id="cb6-6">  small_list[[ind2,<span class="dv" style="color: #AD0000;">2</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> score_ind2</span>
<span id="cb6-7">}</span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;">#u_crone_score &lt;- Scoring_Word_Unique("crone")</span></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;">#u_there_core &lt;- Scoring_Word_Unique ("there")</span></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;">#sadly_score &lt;- Scoring_Word ("sadly")</span></span>
<span id="cb6-12"></span>
<span id="cb6-13">ind2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb6-14"><span class="cf" style="color: #003B4F;">for</span> (ind2 <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words){</span>
<span id="cb6-15"> <span class="co" style="color: #5E5E5E;"># print(small_list[[ind2,1]])</span></span>
<span id="cb6-16">  score_ind2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(small_list[[ind2,<span class="dv" style="color: #AD0000;">1</span>]])</span>
<span id="cb6-17"> <span class="co" style="color: #5E5E5E;"># print(score_ind2)</span></span>
<span id="cb6-18">  small_list[[ind2,<span class="dv" style="color: #AD0000;">3</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> score_ind2</span>
<span id="cb6-19">}</span></code></pre></div>
</div>
<p>In my attempt to sort the word scores and pick out the highest-scoring works, I created an unnecessary number of temporary variables. I forced one of these objects to be a dataframe, but I didn’t check the types of the individual components. Note that all my numbers are still characters. It is funny that things worked even though they were the wrong type.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">small_list1 <span class="ot" style="color: #003B4F;">&lt;-</span> small_list</span>
<span id="cb7-2">small_df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(small_list1)</span>
<span id="cb7-3">top_words <span class="ot" style="color: #003B4F;">&lt;-</span> small_df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-4"> <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(unique_score))</span>
<span id="cb7-5"></span>
<span id="cb7-6">word_1 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
</div>
<p>Now I calculate the second and third guesses. I wanted to penalize duplicate letters, so I used the unique letter scoring function and removed the letters from the first guess. I couldn’t figure out how to do that automatically, so I hardcoded to remove the letters “a”, “r”, “o”, “s”, and “e” from the words before I sent them to be scored. This is precisely the kind of situation where you can get bogged down doing things “properly” and end up stuck. I quickly attempted to figure it out and then did it incorrectly. You can also see that I have a bunch of stuff commented out that didn’t work and a bunch of print statements for debugging. This is not pretty code.</p>
<p>Then I loop through the list again and repeat for the last guess. Again, hardcoded in the letters to remove from the first and second guesses.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;">#now we need a function that sees if a word has the letters of the word_1</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;">#and removes them and then calculates the word score</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;">#top word is arose</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;"># Word 1= arose -----</span></span>
<span id="cb8-5">ind3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-6"><span class="cf" style="color: #003B4F;">for</span> (ind3 <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words) {</span>
<span id="cb8-7"> <span class="co" style="color: #5E5E5E;"># print(top_words$word_name[ind3])</span></span>
<span id="cb8-8">  test <span class="ot" style="color: #003B4F;">&lt;-</span> small_list[[ind3,<span class="dv" style="color: #AD0000;">1</span>]]</span>
<span id="cb8-9">  lvec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"[a r o s e]"</span>, <span class="st" style="color: #20794D;">""</span>, test)  <span class="co" style="color: #5E5E5E;">#this actually works.  How do I use the string?</span></span>
<span id="cb8-10">  <span class="co" style="color: #5E5E5E;">#lvec &lt;-  unlist(strsplit(word_1, split = ""))</span></span>
<span id="cb8-11">  <span class="co" style="color: #5E5E5E;">#lvec&lt;- "t|h|e|i|r" #how do I contruct this automatically</span></span>
<span id="cb8-12"></span>
<span id="cb8-13">  <span class="co" style="color: #5E5E5E;">#new_let &lt;- str_remove_all(pattern= lvec, string= test)</span></span>
<span id="cb8-14"> <span class="co" style="color: #5E5E5E;"># print(lvec)</span></span>
<span id="cb8-15">  score_ind3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(lvec)</span>
<span id="cb8-16"> <span class="co" style="color: #5E5E5E;"># print("writing score")</span></span>
<span id="cb8-17"> <span class="co" style="color: #5E5E5E;"># print(c(ind3, " ", score_ind3, "for the word ", test, "sent as ", lvec))</span></span>
<span id="cb8-18">  </span>
<span id="cb8-19">  small_list[[ind3,<span class="dv" style="color: #AD0000;">4</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> score_ind3</span>
<span id="cb8-20">  <span class="co" style="color: #5E5E5E;">#print (c("output of small list ", top_words[[ind3,4]]))</span></span>
<span id="cb8-21">}</span>
<span id="cb8-22"></span>
<span id="cb8-23">small_df2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(small_list)</span>
<span id="cb8-24">top_words2 <span class="ot" style="color: #003B4F;">&lt;-</span> small_df2 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-25">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(post_word_one_unique))</span>
<span id="cb8-26"></span>
<span id="cb8-27"></span>
<span id="cb8-28">word_2 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words2<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb8-29"></span>
<span id="cb8-30"><span class="co" style="color: #5E5E5E;"># top word 2 is until</span></span>
<span id="cb8-31"></span>
<span id="cb8-32">ind4 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-33"><span class="cf" style="color: #003B4F;">for</span> (ind4 <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words) {</span>
<span id="cb8-34">  <span class="co" style="color: #5E5E5E;"># print(top_words$word_name[ind3])</span></span>
<span id="cb8-35">  test <span class="ot" style="color: #003B4F;">&lt;-</span> small_list[[ind4,<span class="dv" style="color: #AD0000;">1</span>]]</span>
<span id="cb8-36">  lvec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"[u n t i l a r o s e]"</span>, <span class="st" style="color: #20794D;">""</span>, test)  <span class="co" style="color: #5E5E5E;">#this actually works.  How do I use the string?</span></span>
<span id="cb8-37">  <span class="co" style="color: #5E5E5E;">#lvec &lt;-  unlist(strsplit(word_1, split = ""))</span></span>
<span id="cb8-38">  <span class="co" style="color: #5E5E5E;">#lvec&lt;- "t|h|e|i|r" #how do I contruct this automatically</span></span>
<span id="cb8-39">  </span>
<span id="cb8-40">  <span class="co" style="color: #5E5E5E;">#new_let &lt;- str_remove_all(pattern= lvec, string= test)</span></span>
<span id="cb8-41">  <span class="co" style="color: #5E5E5E;"># print(lvec)</span></span>
<span id="cb8-42">  score_ind4 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(lvec)</span>
<span id="cb8-43">  <span class="co" style="color: #5E5E5E;"># print("writing score")</span></span>
<span id="cb8-44">  <span class="co" style="color: #5E5E5E;"># print(c(ind3, " ", score_ind3, "for the word ", test, "sent as ", lvec))</span></span>
<span id="cb8-45">  </span>
<span id="cb8-46">  end_time <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Sys.time</span>()</span>
<span id="cb8-47">  end_time <span class="sc" style="color: #5E5E5E;">-</span> start_time</span>
<span id="cb8-48">  </span>
<span id="cb8-49">  small_list[[ind4,<span class="dv" style="color: #AD0000;">5</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> score_ind4</span>
<span id="cb8-50">  <span class="co" style="color: #5E5E5E;">#print (c("output of small list ", top_words[[ind3,4]]))</span></span>
<span id="cb8-51">}</span>
<span id="cb8-52"></span>
<span id="cb8-53">small_df3<span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(small_list)</span>
<span id="cb8-54">top_words2 <span class="ot" style="color: #003B4F;">&lt;-</span> small_df3 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-55">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(post_word_two_unique))</span>
<span id="cb8-56"></span>
<span id="cb8-57"></span>
<span id="cb8-58">word_3 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words2<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
</div>
<p>Lastly, I calculated the total score of these three words compared to my hand-picked words.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">a <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"arose"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"until"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"dumpy"</span>)</span>
<span id="cb9-4">a</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8.013518</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">b <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"crone"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"mighty"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"sadly"</span>)</span>
<span id="cb11-4">b</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8.081767</code></pre>
</div>
</div>
<p>Note that there is an error here too. By calling Scoring_Words_Unique on individual words, I did not penalize duplicate letters. Thus “u” appears in two words. The correct scoring call should have been:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">c <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">Scoring_Word_Unique</span>(<span class="st" style="color: #20794D;">"aroseuntildumpy"</span>)</span>
<span id="cb13-2">c</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 7.654468</code></pre>
</div>
</div>
<p>But the program works! It generated three reasonable guesses for Wordle that use common letters. (Note that by my scoring rules, the manually chosen set of words is a better choice.)</p>
</section>
</section>
<section id="critique-the-code" class="level2">
<h2 class="anchored" data-anchor-id="critique-the-code">4. Critique the code</h2>
<p>This step is the critical step to accelerate your learning. You need to review your code and list everything you know is not done properly and everything confusing you. This should be done at the end of every session or at the start of the next. Be honest with yourself. If you don’t understand something, put it on your list, even if your code works. The point of this exercise is to increase your coding proficiency.</p>
<p>This is my list from that code we just reviewed. I created this the next day before I started work. Note my versioning by file name.</p>
<ol type="1">
<li>Save current code as frequency_072222 and work on a new copy. This was functional code last night, so I want to keep it.</li>
<li>Import is wrong because it takes the first word as a header.</li>
<li>I need more concise variable names. Also, I create a bunch of temp variables that aren’t needed.</li>
<li>I manually subtract out (hard-coded) words picked in previous cycles. I need that done on the fly.</li>
<li>Once 4 is done, I’d like to write a function to generate however many guesses you ask for.</li>
<li>I’d like to look at the histogram of the scores as you cycle through the guesses.</li>
<li>I’m very unclear on when I need lists, dataframes, tibbles, etc., for the different functions.</li>
<li>Give credit to the website where I took the string split code from.</li>
<li>Some functions from the other code are out of date, so I should update them. [I got warnings in R Studio about this, which I didn’t understand.]</li>
<li>Update scoring_word to have flexible word length.</li>
</ol>
<p>Again, there is a lot more wrong with this code, but this is the list of things I could identify with the knowledge I had at the time.</p>
<p>The next day, I created a chart of all my variables, their sizes, and their types. I also proposed new, clearer names for them, though this wasn’t implemented until a few days later. I mostly played around with how long it took to calculate the initial score and unique score using separate or combined loops. I used sys.time() to benchmark, which didn’t seem terribly consistent in its output. However, there didn’t seem to be a huge difference between the methods, so I returned it to two loops for clarity. At the end of this day, I had four items on my task list after critiquing and reviewing. The last one was, “I need to figure out git_hub or come up with a better way of versioning than the date.”</p>
<p>Proving that point, I put the wrong date in all the file names the next time I worked on the code. In that session, I devoted most of the time to figuring out item 4 on my task list. I wrote a function called remove_letters, which could be used instead of hard coding. I also played around with reshaping the data using pivot_longer from tidyr. I created a histogram of word scores as letters are removed from consideration, which required the reshaped data. Reshaping data can be tricky, so this was a good opportunity to work through that process. (Again, versioning by name, this was called “frequency_072422_tidyr”, in case I really messed up.)</p>
</section>
<section id="current-status" class="level1">
<h1>Current Status</h1>
<p>When I set-up git/ GitHub, I created a new project using the structure for folders and subfolders that I learned in a class at Datacamp. This project is also a work in progress, so it is also messy. I’ve run through it <a href="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle.html">here</a> as a blog post and the code is available on <a href="https://github.com/lsinks/Word-Games">GitHub</a>.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {Self-Guided {Learning} Through a {Wordle} {Guess}
    {Generator:} {Part} 1},
  date = {2023-04-01},
  url = {https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“Self-Guided Learning Through a Wordle
Guess Generator: Part 1.”</span> April 1, 2023. <a href="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1">https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>R-code</category>
  <guid>https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/Wordle.html</guid>
  <pubDate>Sat, 01 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/thumbnail.png" medium="image" type="image/png" height="155" width="144"/>
</item>
<item>
  <title>Self-Guided Learning through a Wordle Guess Generator: Part 2</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle.html</link>
  <description><![CDATA[ 



<p>This is the current version of the word game guesser. I discussed how I used this project to hone my coding skills in the <a href="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-1/Wordle.html">companion blog post</a> to this one.</p>
<p>I’m not going to walk through this in much detail, but I’m going to point out some of the major lessons I learned as I revised the code. Again, both the <a href="https://github.com/lsinks/wordle">initial version</a> and <a href="https://github.com/lsinks/Word-Games">this version</a> are on GitHub in all their messiness.</p>
<p>I learned how to put functions in a separate file and call them from my many script. This can make long code much easier to read. Here, I’ve included the helper functions in-line and commented out the <code>source("code/helper-functions.R")</code> in the main code. I’ve also set up switchable troubleshooting help with <code>verbose</code> and <code>debug_detail</code> parameters in my functions. Setting them to <code>TRUE</code> provide more info as the functions are executed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#|label: helper-functions</span></span>
<span id="cb1-2">Construct_Freq_Table <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word_list) {</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;">#scoring code uses the counting code from</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;">#https://www.r-bloggers.com/2018/12/rrrrs-in-r-letter-frequency-in-r-package-names/  </span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># making the frequency table ----</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">letters <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word_list[,<span class="dv" style="color: #AD0000;">1</span>], <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb1-10">char_frequencies <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(<span class="fu" style="color: #4758AB;">table</span>(letters))</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;">#normalized</span></span>
<span id="cb1-13">common <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">max</span>(char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb1-14">y <span class="ot" style="color: #003B4F;">=</span> (char_frequencies[,<span class="dv" style="color: #AD0000;">2</span>]<span class="sc" style="color: #5E5E5E;">/</span>common)</span>
<span id="cb1-15">char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>normalized <span class="ot" style="color: #003B4F;">&lt;-</span> y</span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;">return</span>(char_frequencies)</span>
<span id="cb1-17">}</span>
<span id="cb1-18"></span>
<span id="cb1-19">Scoring_Word <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word, <span class="at" style="color: #657422;">freqs =</span> char_frequencies,</span>
<span id="cb1-20">                         <span class="at" style="color: #657422;">verbose =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">debug_detail =</span> <span class="cn" style="color: #8f5902;">FALSE</span>){</span>
<span id="cb1-21">  letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb1-22">    <span class="cf" style="color: #003B4F;">if</span> (verbose <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-23">    {<span class="fu" style="color: #4758AB;">message</span>(<span class="st" style="color: #20794D;">"I'm in Scoring_words message and scoring: "</span>, word)}</span>
<span id="cb1-24">  </span>
<span id="cb1-25">  value <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-26">  <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb1-27">    position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i]<span class="sc" style="color: #5E5E5E;">==</span> freqs<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb1-28">    value[i] <span class="ot" style="color: #003B4F;">&lt;-</span> freqs<span class="sc" style="color: #5E5E5E;">$</span>normalized[position]</span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;">if</span> (debug_detail <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-30">    {</span>
<span id="cb1-31">      <span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"I am in the scoring loop calculating value: "</span>)</span>
<span id="cb1-32">      <span class="fu" style="color: #4758AB;">print</span>(i)</span>
<span id="cb1-33">      <span class="fu" style="color: #4758AB;">print</span>(<span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-34">      </span>
<span id="cb1-35">    }</span>
<span id="cb1-36">    </span>
<span id="cb1-37">    <span class="cf" style="color: #003B4F;">if</span> (i <span class="sc" style="color: #5E5E5E;">==</span> <span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb1-38">      </span>
<span id="cb1-39">      <span class="fu" style="color: #4758AB;">return</span>(total <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-40">    }</span>
<span id="cb1-41">    </span>
<span id="cb1-42">  }</span>
<span id="cb1-43">  }</span>
<span id="cb1-44">  </span>
<span id="cb1-45"></span>
<span id="cb1-46">Scoring_Word_Unique <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word, <span class="at" style="color: #657422;">freqs =</span> char_frequencies, </span>
<span id="cb1-47">                                <span class="at" style="color: #657422;">verbose =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">debug_detail =</span> <span class="cn" style="color: #8f5902;">FALSE</span>){</span>
<span id="cb1-48">  <span class="co" style="color: #5E5E5E;"># This does only score on unique letters</span></span>
<span id="cb1-49">  letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb1-50">  unique_letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unique</span>(letter_vec)</span>
<span id="cb1-51">  <span class="co" style="color: #5E5E5E;">#unique_letter_vec &lt;- letter_vec</span></span>
<span id="cb1-52">  <span class="cf" style="color: #003B4F;">if</span> (verbose <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-53">  {<span class="fu" style="color: #4758AB;">message</span>(<span class="st" style="color: #20794D;">"I'm in Scoring_words_Unique and scoring: "</span>, word)}</span>
<span id="cb1-54">  </span>
<span id="cb1-55">  value <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-56">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec) <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>) {</span>
<span id="cb1-57">    <span class="fu" style="color: #4758AB;">return</span>(value)</span>
<span id="cb1-58">  } <span class="cf" style="color: #003B4F;">else</span>{</span>
<span id="cb1-59">    <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec)) {</span>
<span id="cb1-60">           position <span class="ot" style="color: #003B4F;">&lt;-</span> unique_letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> freqs<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb1-61">          value[i] <span class="ot" style="color: #003B4F;">&lt;-</span> freqs<span class="sc" style="color: #5E5E5E;">$</span>normalized[position]</span>
<span id="cb1-62">      <span class="cf" style="color: #003B4F;">if</span> (debug_detail <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-63">      {</span>
<span id="cb1-64">        <span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"I am in the unique scoring loop calculating value: "</span>)</span>
<span id="cb1-65">        <span class="fu" style="color: #4758AB;">print</span>(i)</span>
<span id="cb1-66">        <span class="fu" style="color: #4758AB;">print</span>(<span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-67">      }</span>
<span id="cb1-68">      </span>
<span id="cb1-69">      <span class="cf" style="color: #003B4F;">if</span> (i <span class="sc" style="color: #5E5E5E;">==</span> <span class="fu" style="color: #4758AB;">length</span>(unique_letter_vec)) {</span>
<span id="cb1-70">        </span>
<span id="cb1-71">        <span class="fu" style="color: #4758AB;">return</span>(total <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sum</span>(value))</span>
<span id="cb1-72">      }</span>
<span id="cb1-73">      </span>
<span id="cb1-74">    }</span>
<span id="cb1-75">  }</span>
<span id="cb1-76">}</span>
<span id="cb1-77"></span>
<span id="cb1-78">Removing_Letters <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(word, chosen_word, </span>
<span id="cb1-79">                              <span class="at" style="color: #657422;">verbose =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">debug_detail =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) {</span>
<span id="cb1-80">  lvec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"["</span>, chosen_word, <span class="st" style="color: #20794D;">"]"</span>), <span class="st" style="color: #20794D;">""</span>, word)  </span>
<span id="cb1-81">  <span class="fu" style="color: #4758AB;">return</span>(lvec)}</span></code></pre></div>
</div>
<p>I finally did figure out how to make variables the types I wanted. I also replaced several loops with map functions from <a href="https://purrr.tidyverse.org/">purrr</a>. I also made a reshaped version of my dataframe using <code>pivot_longer</code> from <a href="https://tidyr.tidyverse.org/articles/pivot.html">tidyr</a>. Reshaping data is a really useful skill, but might be a bit confusing at first. So I certainly wanted to make sure I could do it correctly. The reshaped data is used to make a nice density plot later.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Loading libraries and data ----</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"tidyverse"</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;">#from https://www-cs-faculty.stanford.edu/~knuth/sgb-words.txt</span></span>
<span id="cb2-6">word_list <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">read.table</span>(<span class="st" style="color: #20794D;">"C:/Users/drsin/OneDrive/Documents/R Projects/Word-Games/input/sgb-words.txt"</span>) </span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;"># Functions ----</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;">#source("code/helper-functions.R")</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;"># calculate letter frequencies from word list</span></span>
<span id="cb2-13">char_frequencies <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">Construct_Freq_Table</span>(word_list)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;"># Initialize the word_scores dataframe ----</span></span>
<span id="cb2-16">num_words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">nrow</span>(word_list)</span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;">#num_words &lt;- 5</span></span>
<span id="cb2-18">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">word_name =</span> word_list[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>num_words,<span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-19">                    <span class="at" style="color: #657422;">word_length =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-20">                    <span class="at" style="color: #657422;">word_guess1 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-21">                    <span class="at" style="color: #657422;">word_guess2 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-22">                    <span class="at" style="color: #657422;">word_guess3 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-23">                    <span class="at" style="color: #657422;">word_guess4 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-24">                    <span class="at" style="color: #657422;">score =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words), </span>
<span id="cb2-25">                    <span class="at" style="color: #657422;">score_guess1 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-26">                    <span class="at" style="color: #657422;">score_guess2 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-27">                    <span class="at" style="color: #657422;">score_guess3 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words),</span>
<span id="cb2-28">                    <span class="at" style="color: #657422;">score_guess4 =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">times =</span> num_words)</span>
<span id="cb2-29">                                                )</span>
<span id="cb2-30"><span class="co" style="color: #5E5E5E;">#fill in word lengths.  This is so code can be expended to longer words</span></span>
<span id="cb2-31">word_scores<span class="sc" style="color: #5E5E5E;">$</span>word_length <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">str_length</span>(word_scores<span class="sc" style="color: #5E5E5E;">$</span>word_name)</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;"># Calculates the initial scores for all words -----</span></span>
<span id="cb2-34"></span>
<span id="cb2-35">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-36">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score =</span> <span class="fu" style="color: #4758AB;">map_dbl</span>(word_name, Scoring_Word))</span>
<span id="cb2-37"></span>
<span id="cb2-38">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-39">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score_guess1 =</span> <span class="fu" style="color: #4758AB;">map_dbl</span>(word_name, Scoring_Word_Unique))</span>
<span id="cb2-40"></span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="co" style="color: #5E5E5E;"># Finding the best first word</span></span>
<span id="cb2-43">top_words <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-44"> <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(score_guess1))</span>
<span id="cb2-45">word_1 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb2-46"></span>
<span id="cb2-47"><span class="co" style="color: #5E5E5E;"># Scoring for second guess</span></span>
<span id="cb2-48">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-49">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">word_guess2 =</span> </span>
<span id="cb2-50">           <span class="fu" style="color: #4758AB;">map_chr</span>(word_name, Removing_Letters, <span class="at" style="color: #657422;">chosen_word =</span> word_1))</span>
<span id="cb2-51">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-52">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score_guess2 =</span> <span class="fu" style="color: #4758AB;">map_dbl</span>(word_guess2, Scoring_Word_Unique))</span>
<span id="cb2-53"></span>
<span id="cb2-54">top_words <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-55">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(score_guess2))</span>
<span id="cb2-56"></span>
<span id="cb2-57">word_2 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb2-58"></span>
<span id="cb2-59"><span class="co" style="color: #5E5E5E;"># Scoring for third guess</span></span>
<span id="cb2-60">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-61">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">word_guess3 =</span></span>
<span id="cb2-62">           <span class="fu" style="color: #4758AB;">map_chr</span>(word_guess2, Removing_Letters, <span class="at" style="color: #657422;">chosen_word =</span> word_2))</span>
<span id="cb2-63">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-64">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score_guess3 =</span> <span class="fu" style="color: #4758AB;">map_dbl</span>(word_guess3, Scoring_Word_Unique))</span>
<span id="cb2-65"></span>
<span id="cb2-66"></span>
<span id="cb2-67">top_words <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-68">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(score_guess3))</span>
<span id="cb2-69">word_3 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb2-70"></span>
<span id="cb2-71"><span class="co" style="color: #5E5E5E;"># Scoring for fourth guess</span></span>
<span id="cb2-72">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-73">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">word_guess4 =</span> </span>
<span id="cb2-74">           <span class="fu" style="color: #4758AB;">map_chr</span>(word_guess3, Removing_Letters, <span class="at" style="color: #657422;">chosen_word =</span> word_3))</span>
<span id="cb2-75">word_scores <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-76">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">score_guess4 =</span> <span class="fu" style="color: #4758AB;">map_dbl</span>(word_guess4, Scoring_Word_Unique))</span>
<span id="cb2-77"></span>
<span id="cb2-78"></span>
<span id="cb2-79">top_words <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-80">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(score_guess4))</span>
<span id="cb2-81"></span>
<span id="cb2-82">word_4 <span class="ot" style="color: #003B4F;">&lt;-</span> top_words<span class="sc" style="color: #5E5E5E;">$</span>word_name[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb2-83"></span>
<span id="cb2-84"><span class="co" style="color: #5E5E5E;"># subsetting this dataframe and reshaping it.</span></span>
<span id="cb2-85"><span class="co" style="color: #5E5E5E;"># This is used to make a density plot later.</span></span>
<span id="cb2-86">word_scores2 <span class="ot" style="color: #003B4F;">&lt;-</span> word_scores <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-87">   <span class="fu" style="color: #4758AB;">select</span>(word_name, score_guess1, score_guess2, score_guess3, score_guess4)</span>
<span id="cb2-88">word_scores_reshaped <span class="ot" style="color: #003B4F;">&lt;-</span> </span>
<span id="cb2-89">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(word_scores2, <span class="at" style="color: #657422;">cols =</span> <span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span>, </span>
<span id="cb2-90">               <span class="at" style="color: #657422;">names_to =</span> <span class="st" style="color: #20794D;">"score_type"</span>, <span class="at" style="color: #657422;">values_to =</span> <span class="st" style="color: #20794D;">"score"</span>)</span></code></pre></div>
</div>
<p>Nice visualizations were definitely not part of the initial code. In the next chunk, I make some prettier visualizations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="do" style="color: #5E5E5E;
font-style: italic;">### This is now just visualizing what we've done. ------</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;">#plotting the frequency of the letters in our word_set</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;">ggplot</span>(char_frequencies, </span>
<span id="cb3-5">       <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">fct_rev</span>(<span class="fu" style="color: #4758AB;">fct_reorder</span>(letters,  normalized)), <span class="at" style="color: #657422;">y =</span> normalized )) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Frequencies of Letters"</span>, <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"from 5 letter words"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">plot.title =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">hjust =</span> <span class="fl" style="color: #AD0000;">0.5</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Letter"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Frequency"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-13">    <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="do" style="color: #5E5E5E;
font-style: italic;">## This looks at the distribution of scores as guessing occurs.  Initially, you have a</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">word_scores_reshaped<span class="sc" style="color: #5E5E5E;">$</span>score_type <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.factor</span>(word_scores_reshaped<span class="sc" style="color: #5E5E5E;">$</span>score_type)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;">ggplot</span>(word_scores_reshaped, <span class="fu" style="color: #4758AB;">aes</span>(score, <span class="at" style="color: #657422;">fill =</span> score_type)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.5</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Evolution of Word Scores as Guessing Progresses"</span>,</span>
<span id="cb4-9">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"for 5 letter words"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Score"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Density"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">""</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.7</span>, <span class="fl" style="color: #AD0000;">0.8</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>( <span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>( <span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>)) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Now we are visualizing what letters are picked in each guess</span></span>
<span id="cb5-2">guess <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"not guessed"</span>, <span class="at" style="color: #657422;">times =</span> <span class="dv" style="color: #AD0000;">26</span>)</span>
<span id="cb5-3">char_frequencies <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">cbind</span>(char_frequencies, guess)</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;"># this is done in reverse order because some letters are guessed in more than</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;"># one word and I'd like them marked at the earliest guess.</span></span>
<span id="cb5-7">letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word_4, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;">print</span>(letter_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "w" "h" "a" "c" "k"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb7-2">  position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb7-3">  char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>guess[position] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"Guess 4"</span></span>
<span id="cb7-4">}</span>
<span id="cb7-5"></span>
<span id="cb7-6">letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word_3, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;">print</span>(letter_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "d" "u" "m" "p" "y"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb9-2">  position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb9-3">  char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>guess[position] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"Guess 3"</span></span>
<span id="cb9-4">}</span>
<span id="cb9-5"></span>
<span id="cb9-6">letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word_2, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb9-7"><span class="fu" style="color: #4758AB;">print</span>(letter_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "u" "n" "t" "i" "l"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb11-2">  position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb11-3">  char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>guess[position] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"Guess 2"</span></span>
<span id="cb11-4">}</span>
<span id="cb11-5"></span>
<span id="cb11-6"></span>
<span id="cb11-7">letter_vec <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(word_1, <span class="at" style="color: #657422;">split =</span> <span class="st" style="color: #20794D;">""</span>))</span>
<span id="cb11-8"><span class="fu" style="color: #4758AB;">print</span>(letter_vec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a" "r" "o" "s" "e"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(letter_vec)) {</span>
<span id="cb13-2">  position <span class="ot" style="color: #003B4F;">&lt;-</span> letter_vec[i] <span class="sc" style="color: #5E5E5E;">==</span> char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>letters</span>
<span id="cb13-3">  char_frequencies<span class="sc" style="color: #5E5E5E;">$</span>guess[position] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"Guess 1"</span></span>
<span id="cb13-4">}</span>
<span id="cb13-5"></span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;">ggplot</span>(char_frequencies, <span class="fu" style="color: #4758AB;">aes</span>(</span>
<span id="cb13-8">  <span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">fct_rev</span>(<span class="fu" style="color: #4758AB;">fct_reorder</span>(letters,  normalized)),</span>
<span id="cb13-9">  <span class="at" style="color: #657422;">y =</span> normalized,</span>
<span id="cb13-10">  <span class="at" style="color: #657422;">fill =</span> guess)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"When Letters are Guessed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Normalized Counts"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Letter"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.6</span>, <span class="fl" style="color: #AD0000;">0.6</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">expand =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle_files/figure-html/unnamed-chunk-3-3.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So that’s the current state of this project. This was a really useful project for me and it really strengthened by R and Tidyverse skills.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {Self-Guided {Learning} Through a {Wordle} {Guess}
    {Generator:} {Part} 2},
  date = {2023-04-01},
  url = {https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“Self-Guided Learning Through a Wordle
Guess Generator: Part 2.”</span> April 1, 2023. <a href="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2">https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>R-code</category>
  <guid>https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/current_wordle.html</guid>
  <pubDate>Sat, 01 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-04-01-self-guided-learning-wordle-guesser-part-2/thumbnail.png" medium="image" type="image/png" height="89" width="144"/>
</item>
<item>
  <title>One Class SVM</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-30-One-Class-SVM/one-class-svm.html</link>
  <description><![CDATA[ 



<p>I’ve recently been playing around with classification models, specifically on data sets with a skewed class distribution. In imbalanced classification problems, one class occurs infrequently. The minority class is often the class of interest (think fraudulent transaction, positive disease diagnosis, or intruder detection). Sometimes these applications are framed as a two-class classification problem, but other times they are called anomaly, outlier, or novelty detection.</p>
<p>Imbalanced classification problems are tricky for a couple of reasons. Models can achieve high accuracy by classifying everything as the dominant class. You can somewhat mitigate this problem by choosing models based on other metrics, such as sensitivity. You can also downsample the data to balance the classes (which throws out a lot of data) or upsample the infrequent class using a technique like SMOTE or ROSE to create synthetic data points.</p>
<p>Collecting enough labeled data can also be expensive in highly imbalanced classes. Techniques like SMOTE won’t help if you only have 2 of a class in the dataset; the model needs “sufficient” data to learn from.</p>
<p>Another way to handle a minority class is to use a one-class classifier. One-class classifiers are one of the most widely used methods in anomaly detection because it does not require extensive labeled data for training. This method can either be semi-supervised, where only the normal (major) class is used for training, or unsupervised, where the method can handle anomalies in the training class. The one-class SVM is a popular implementation of one-class classifiers.</p>
<p>Here I’m going to use a <a href="https://app.datacamp.com/learn/courses/introduction-to-anomaly-detection-in-r">toy dataset from Datacamp</a>. They have told me that all datasets used in their courses can be used outside Datacamp.</p>
<p>I’m using some specialty packages here, specifically e1071 and caret for the machine learning.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(skimr) <span class="co" style="color: #5E5E5E;"># for EDA</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(corrplot) <span class="co" style="color: #5E5E5E;"># for cool correlation graph</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(gt) <span class="co" style="color: #5E5E5E;"># for tables</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(e1071) <span class="co" style="color: #5E5E5E;"># for svm</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(caret) <span class="co" style="color: #5E5E5E;"># for data split</span></span>
<span id="cb1-7">thyroid <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.csv</span>(<span class="st" style="color: #20794D;">"~/R Projects/SVM/thyroid.csv"</span>, <span class="at" style="color: #657422;">header =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<section id="exploratory-data-analysis" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="exploratory-data-analysis">Exploratory Data Analysis</h2>
<p>The dataset explores thyroid disease as a function of thyroid hormone levels. I’m using a custom skim function to tailor the output. More info on that can be found <a href="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/">here</a>.</p>
<div class="cell page-columns page-full">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">my_skim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">skim_with</span>(<span class="at" style="color: #657422;">numeric =</span> <span class="fu" style="color: #4758AB;">sfl</span>(<span class="at" style="color: #657422;">p25 =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">p50 =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">p75 =</span> <span class="cn" style="color: #8f5902;">NULL</span>)) </span>
<span id="cb2-2">thyroid_skim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">my_skim</span>(thyroid)</span>
<span id="cb2-3"></span>
<span id="cb2-4">thyroid_skim <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>skim_type)   <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">gt</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">cols_label</span>(<span class="at" style="color: #657422;">n_missing =</span> <span class="st" style="color: #20794D;">"# Missing"</span>, <span class="at" style="color: #657422;">complete_rate =</span> <span class="st" style="color: #20794D;">"Completeness"</span>, </span>
<span id="cb2-8">             <span class="at" style="color: #657422;">numeric.mean =</span> <span class="st" style="color: #20794D;">"Mean"</span>, <span class="at" style="color: #657422;">numeric.sd =</span> <span class="st" style="color: #20794D;">"Standard Deviation"</span>,</span>
<span id="cb2-9">             <span class="at" style="color: #657422;">numeric.p0 =</span> <span class="st" style="color: #20794D;">"Min"</span>, <span class="at" style="color: #657422;">numeric.p100 =</span> <span class="st" style="color: #20794D;">"Max"</span>,</span>
<span id="cb2-10">             <span class="at" style="color: #657422;">numeric.hist =</span> <span class="st" style="color: #20794D;">"Histogram"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;">opt_stylize</span>(<span class="at" style="color: #657422;">style =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">add_row_striping =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;">tab_header</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Summary of Variables in Thyroid"</span>) </span></code></pre></div>
<div class="cell-output-display column-page">

<div id="rzfmbicyxh" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#rzfmbicyxh) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#rzfmbicyxh) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#rzfmbicyxh) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#rzfmbicyxh) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#rzfmbicyxh) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#rzfmbicyxh) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#rzfmbicyxh) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#rzfmbicyxh) .gt_col_heading {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#rzfmbicyxh) .gt_column_spanner_outer {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#rzfmbicyxh) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#rzfmbicyxh) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#rzfmbicyxh) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#rzfmbicyxh) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#rzfmbicyxh) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: middle;
}

:where(#rzfmbicyxh) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#rzfmbicyxh) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#rzfmbicyxh) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: none;
  border-top-width: 1px;
  border-top-color: #D5D5D5;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D5D5D5;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D5D5D5;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#rzfmbicyxh) .gt_stub {
  color: #333333;
  background-color: #89D3FE;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D5D5D5;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#rzfmbicyxh) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#rzfmbicyxh) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#rzfmbicyxh) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#rzfmbicyxh) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #5F5F5F;
}

:where(#rzfmbicyxh) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#rzfmbicyxh) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#rzfmbicyxh) .gt_grand_summary_row {
  color: #333333;
  background-color: #D5D5D5;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#rzfmbicyxh) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #5F5F5F;
}

:where(#rzfmbicyxh) .gt_striped {
  background-color: #EDF7FC;
}

:where(#rzfmbicyxh) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#rzfmbicyxh) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#rzfmbicyxh) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#rzfmbicyxh) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#rzfmbicyxh) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#rzfmbicyxh) .gt_left {
  text-align: left;
}

:where(#rzfmbicyxh) .gt_center {
  text-align: center;
}

:where(#rzfmbicyxh) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#rzfmbicyxh) .gt_font_normal {
  font-weight: normal;
}

:where(#rzfmbicyxh) .gt_font_bold {
  font-weight: bold;
}

:where(#rzfmbicyxh) .gt_font_italic {
  font-style: italic;
}

:where(#rzfmbicyxh) .gt_super {
  font-size: 65%;
}

:where(#rzfmbicyxh) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#rzfmbicyxh) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#rzfmbicyxh) .gt_indent_1 {
  text-indent: 5px;
}

:where(#rzfmbicyxh) .gt_indent_2 {
  text-indent: 10px;
}

:where(#rzfmbicyxh) .gt_indent_3 {
  text-indent: 15px;
}

:where(#rzfmbicyxh) .gt_indent_4 {
  text-indent: 20px;
}

:where(#rzfmbicyxh) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="8" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Summary of Variables in Thyroid</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="skim_variable">skim_variable</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="# Missing"># Missing</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Completeness">Completeness</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Mean">Mean</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Standard Deviation">Standard Deviation</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Min">Min</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Max">Max</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Histogram">Histogram</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="skim_variable" class="gt_row gt_left">label</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1</td>
<td headers="numeric.mean" class="gt_row gt_right">0.0220000</td>
<td headers="numeric.sd" class="gt_row gt_right">0.1467567</td>
<td headers="numeric.p0" class="gt_row gt_right">0.000000</td>
<td headers="numeric.p100" class="gt_row gt_right">1.00000000</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">TSH</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">-0.6881938</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">0.4455654</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">-4.532599</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">-0.02173999</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▁▁▃▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">T3</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1</td>
<td headers="numeric.mean" class="gt_row gt_right">-6.5046015</td>
<td headers="numeric.sd" class="gt_row gt_right">1.3994315</td>
<td headers="numeric.p0" class="gt_row gt_right">-9.268609</td>
<td headers="numeric.p100" class="gt_row gt_right">-1.43659510</td>
<td headers="numeric.hist" class="gt_row gt_left">▅▇▇▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">TT4</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">-1.7235631</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">0.4421667</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">-5.350910</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">-0.37417607</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▁▁▇▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">T4U</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1</td>
<td headers="numeric.mean" class="gt_row gt_right">-1.4666057</td>
<td headers="numeric.sd" class="gt_row gt_right">0.4495771</td>
<td headers="numeric.p0" class="gt_row gt_right">-6.164484</td>
<td headers="numeric.p100" class="gt_row gt_right">0.00000000</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▇▂</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">FTI</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">-1.0093125</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">0.2522809</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">-3.569533</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">-0.17950862</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▁▁▇▂</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">TBG</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1</td>
<td headers="numeric.mean" class="gt_row gt_right">-1.7932517</td>
<td headers="numeric.sd" class="gt_row gt_right">0.4318577</td>
<td headers="numeric.p0" class="gt_row gt_right">-6.636603</td>
<td headers="numeric.p100" class="gt_row gt_right">0.00000000</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▇▁</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>We see that the dataset is complete with no missing values. All data types are numeric. About 2% of the patients are diagnosed with thyroid disease.</p>
<p>I like to look at a correlation plot to get an overview of how the predictors relate to each other and the outcome. The correlation plot created by <code>corrplot()</code> has the title truncated in a lot of notebook/ markdown environments. The solution, which I found <a href="https://stefaneng.github.io/corrplot-title-cut-off/">here</a>, is to add a margin.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># examining correlation between variables categories</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;"># moving the outcome to the first column to start</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># will be sorted by decreasing correlation with outcome</span></span>
<span id="cb3-4">thyroid <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-5">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(label, <span class="fu" style="color: #4758AB;">everything</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-6">    cor <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-7">        {.[<span class="fu" style="color: #4758AB;">order</span>(<span class="fu" style="color: #4758AB;">abs</span>(.[, <span class="dv" style="color: #AD0000;">1</span>]), <span class="at" style="color: #657422;">decreasing =</span> <span class="cn" style="color: #8f5902;">TRUE</span>), </span>
<span id="cb3-8">       <span class="fu" style="color: #4758AB;">order</span>(<span class="fu" style="color: #4758AB;">abs</span>(.[, <span class="dv" style="color: #AD0000;">1</span>]), <span class="at" style="color: #657422;">decreasing =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)]} <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-9">    <span class="fu" style="color: #4758AB;">corrplot</span>( <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">'lower'</span>, <span class="at" style="color: #657422;">tl.col =</span> <span class="st" style="color: #20794D;">'black'</span>, </span>
<span id="cb3-10">            <span class="at" style="color: #657422;">addCoef.col =</span> <span class="st" style="color: #20794D;">'black'</span>, <span class="at" style="color: #657422;">cl.ratio =</span> <span class="fl" style="color: #AD0000;">0.2</span>, <span class="at" style="color: #657422;">tl.srt =</span> <span class="dv" style="color: #AD0000;">45</span>, </span>
<span id="cb3-11">            <span class="at" style="color: #657422;">col =</span> <span class="fu" style="color: #4758AB;">COL2</span>(<span class="st" style="color: #20794D;">'PuOr'</span>, <span class="dv" style="color: #AD0000;">10</span>), <span class="at" style="color: #657422;">diag =</span> <span class="cn" style="color: #8f5902;">FALSE</span> , <span class="at" style="color: #657422;">mar =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">0</span>),</span>
<span id="cb3-12">            <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">" Correlations between Thyroid Disease and hormone levels"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-30-One-Class-SVM/one-class-svm_files/figure-html/corr-plot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Many of the features are strongly correlated with the outcome. So, we can expect to get reasonably decent results from our model.</p>
</section>
<section id="setting-up-for-ml-with-caret" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-for-ml-with-caret">Setting up for ML with caret</h2>
<p>I’m using the <a href="https://cran.r-project.org/web/packages/e1071/index.html">e1071 package</a> for SVM, which is not supported by tidymodels, so I will use <a href="https://topepo.github.io/caret/index.html">caret</a> as the wrapper for a lot of the machine modeling workflow. First, I’m going to make a train and test split. createDataPartition will stratify the sampling over the two classes if you pass it the vector of labels. Stratification is usually critical with an imbalanced dataset; you don’t want a scenario where the train or test dataset has most of the minority class observations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># Relabel the classes to TRUE if it is normal data and FALSE if it is</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;"># an anomaly.  (That is, it is false that the outlier data is normal).  </span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;"># makes it easier to compare with the output of the SVM model.  </span></span>
<span id="cb4-4">thyroid <span class="ot" style="color: #003B4F;">&lt;-</span> thyroid <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">label =</span> <span class="fu" style="color: #4758AB;">ifelse</span>(label <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="cn" style="color: #8f5902;">FALSE</span>))</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;"># create data split for test and training</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;"># will be split among strata</span></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">2346</span>)</span>
<span id="cb4-10">inTrain <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">createDataPartition</span>(thyroid<span class="sc" style="color: #5E5E5E;">$</span>label, <span class="at" style="color: #657422;">p =</span> <span class="fl" style="color: #AD0000;">0.6</span>, <span class="at" style="color: #657422;">list =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) </span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;"># formatting the data as required for svm()</span></span>
<span id="cb4-13">train_predictors <span class="ot" style="color: #003B4F;">&lt;-</span> thyroid[inTrain, <span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb4-14">train_labels <span class="ot" style="color: #003B4F;">&lt;-</span> thyroid[inTrain, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;"># Creating the test set</span></span>
<span id="cb4-17">test <span class="ot" style="color: #003B4F;">&lt;-</span> thyroid[<span class="sc" style="color: #5E5E5E;">-</span>inTrain,]</span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;"># formatting the data as required for svm()</span></span>
<span id="cb4-20">test_predictors <span class="ot" style="color: #003B4F;">&lt;-</span> test[,<span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb4-21">test_labels <span class="ot" style="color: #003B4F;">&lt;-</span> test[,<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;">#double checking that the test and train sets do contain ~2% disease</span></span>
<span id="cb4-24"><span class="co" style="color: #5E5E5E;"># or rather 98% normal.</span></span>
<span id="cb4-25"><span class="fu" style="color: #4758AB;">mean</span>(train_labels)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9767055</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">mean</span>(test_labels)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9799499</code></pre>
</div>
</div>
</section>
<section id="two-class-svm" class="level2">
<h2 class="anchored" data-anchor-id="two-class-svm">Two-class SVM</h2>
<p>First, I’m going to fit the data with a traditional 2 class classifier. I’m using SVM for the classification. The option <code>type ='C-classification'</code> performs normal classification. I’m not going to get into the details of SVM here, but for more information check out <a href="https://www.r-bloggers.com/2017/04/machine-learning-using-support-vector-machines/">this tutorial</a>. I’m also not going to tune any hyper-parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># fitting SVM on training data </span></span>
<span id="cb8-2">two_class_svm_model <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">svm</span>(train_predictors, <span class="at" style="color: #657422;">y =</span> train_labels,</span>
<span id="cb8-3">               <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">'C-classification'</span>,</span>
<span id="cb8-4">               <span class="at" style="color: #657422;">scale =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb8-5">               <span class="at" style="color: #657422;">kernel =</span> <span class="st" style="color: #20794D;">"radial"</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;"># now predicting both classes on train and test data</span></span>
<span id="cb8-8">two_class_svm_predtrain <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(two_class_svm_model,train_predictors)</span>
<span id="cb8-9">two_class_svm_predtest <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(two_class_svm_model,test_predictors)</span>
<span id="cb8-10"></span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;"># code below here will be provided</span></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;"># seeing how well the model did</span></span>
<span id="cb8-14">two_class_confTrain <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">table</span>(<span class="at" style="color: #657422;">Predicted =</span> two_class_svm_predtrain, <span class="at" style="color: #657422;">Reference =</span> train_labels)</span>
<span id="cb8-15">two_class_confTest <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">table</span>(<span class="at" style="color: #657422;">Predicted =</span> two_class_svm_predtest, <span class="at" style="color: #657422;">Reference =</span> test_labels)</span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;"># printing out the results</span></span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"These are the predictions on the training data:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "These are the predictions on the training data:"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">print</span>(two_class_confTrain)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         Reference
Predicted FALSE TRUE
    FALSE    12    0
    TRUE      2  587</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"These are the predictions on the test data:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "These are the predictions on the test data:"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">print</span>(two_class_confTest)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         Reference
Predicted FALSE TRUE
    FALSE     6    0
    TRUE      2  391</code></pre>
</div>
</div>
<p>We see that the two-class classifier does very well! In the test data set, it correctly predicts 397/ 399 data points. However, it misidentified a quarter of the disease patients as having normal thyroid. This is as I mentioned above- models can generally achieve good accuracy, but by over predicting the majority class. This result could potentially be unacceptable for a healthcare application.</p>
</section>
<section id="one-class-svm" class="level2">
<h2 class="anchored" data-anchor-id="one-class-svm">One-class SVM</h2>
<p>Now, let’s compare this to the one-class classifier. I will use the one-class classifier in supervised mode; that is, I will pass it labeled data, but only for the normal class. Then I will predict and calculate metrics based on both classes. There are a few different ways we can prepare this data. For ease of comparison with the regular classifier, I will use the same splits but filter out the anomalies from the training data. You might instead filter out all the outliers from the training set and add them to the test set, so you can get a better idea of how the model works for outlier detection. However, I want an apples-to-apples comparison, so I’m not doing that here. The regular and one class SVM will be predicting on the same test data set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;"># subset the labeled data into the two classes</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;"># the normal class should be called "train_normal" and the anomaly</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;"># class should be called "test_outlier"</span></span>
<span id="cb16-4"></span>
<span id="cb16-5">train_normal_class <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">subset</span>(thyroid[inTrain, ], label <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb16-6"></span>
<span id="cb16-7"></span>
<span id="cb16-8">train_normal_class_pred <span class="ot" style="color: #003B4F;">&lt;-</span> train_normal_class[,<span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb16-9">train_normal_class_label <span class="ot" style="color: #003B4F;">&lt;-</span> train_normal_class[,<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb16-10"></span>
<span id="cb16-11"></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;"># fitting one class SVM on training data- no labels needed! </span></span>
<span id="cb16-13">one_class_svm_model <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">svm</span>(train_normal_class_pred, <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb16-14">               <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">'one-classification'</span>,</span>
<span id="cb16-15">               <span class="at" style="color: #657422;">nu =</span> <span class="fl" style="color: #AD0000;">0.10</span>,</span>
<span id="cb16-16">               <span class="at" style="color: #657422;">scale =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb16-17">               <span class="at" style="color: #657422;">kernel =</span> <span class="st" style="color: #20794D;">"radial"</span>)</span>
<span id="cb16-18"></span>
<span id="cb16-19"><span class="co" style="color: #5E5E5E;"># now predicting both classes on train and test data</span></span>
<span id="cb16-20">one_class_svm_predtrain <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(one_class_svm_model,train_normal_class_pred)</span>
<span id="cb16-21">one_class_svm_predtest <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(one_class_svm_model,test_predictors)</span>
<span id="cb16-22"></span>
<span id="cb16-23"></span>
<span id="cb16-24"><span class="co" style="color: #5E5E5E;"># code below here will be provided</span></span>
<span id="cb16-25"><span class="co" style="color: #5E5E5E;"># seeing how well the model did</span></span>
<span id="cb16-26">one_class_confTrain <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">table</span>(<span class="at" style="color: #657422;">Predicted =</span> one_class_svm_predtrain,</span>
<span id="cb16-27">                             <span class="at" style="color: #657422;">Reference =</span> train_normal_class_label)</span>
<span id="cb16-28">one_class_confTest <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">table</span>(<span class="at" style="color: #657422;">Predicted =</span> one_class_svm_predtest,</span>
<span id="cb16-29">                            <span class="at" style="color: #657422;">Reference =</span> test_labels)</span>
<span id="cb16-30"></span>
<span id="cb16-31"><span class="co" style="color: #5E5E5E;"># printing out the results</span></span>
<span id="cb16-32"><span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"These are the predictions on the normal class training data only:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "These are the predictions on the normal class training data only:"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">print</span>(one_class_confTrain)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         Reference
Predicted TRUE
    FALSE   61
    TRUE   526</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">print</span>(<span class="st" style="color: #20794D;">"These are the predictions on the test data with both classes:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "These are the predictions on the test data with both classes:"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;">print</span>(one_class_confTest)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         Reference
Predicted FALSE TRUE
    FALSE     8   40
    TRUE      0  351</code></pre>
</div>
</div>
<p>This model doesn’t do quite as well, but it is pretty impressive given that it only learned on normal data. It correctly predicted 359/399 data points in the test set. It incorrectly classified 44 cases as abnormal when they were normal, but correctly found all 8 disease cases.</p>
<p>So now I’ve showed you how to use a one-class SVM to predict outliers. This is an incredible useful tool to keep in mind for classification tasks.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {One {Class} {SVM}},
  date = {2023-03-30},
  url = {https://lsinks.github.io/posts/2023-03-30-One-Class-SVM},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“One Class SVM.”</span> March 30, 2023. <a href="https://lsinks.github.io/posts/2023-03-30-One-Class-SVM">https://lsinks.github.io/posts/2023-03-30-One-Class-SVM</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>R-code</category>
  <category>Code-Along</category>
  <category>Machine Learning</category>
  <category>caret</category>
  <category>SVM</category>
  <category>Classifiers</category>
  <guid>https://lsinks.github.io/posts/2023-03-30-One-Class-SVM/one-class-svm.html</guid>
  <pubDate>Thu, 30 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-30-One-Class-SVM/thumbnail.png" medium="image" type="image/png" height="89" width="144"/>
</item>
<item>
  <title>Tidy Tuesday: Daylight Savings Time</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/tidytuesday-timezones.html</link>
  <description><![CDATA[ 



<p><a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-28/readme.md">This week’s TidyTuesday</a> is about the timezone data from <a href="https://data.iana.org/time-zones/tz-link.html">IANA timezone database</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidytuesdayR)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(skimr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(ggthemes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(gt)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(lubridate)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">library</span>(skimr)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">library</span>(lutz)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">library</span>(maps)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;">library</span>(scales)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;">library</span>(sf)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;">library</span>(ggimage)</span></code></pre></div>
</div>
<p>The history of this database is fascinating. It is used by many computer systems to determine the correct time based on location. To learn more, I recommend reading <a href="https://onezero.medium.com/the-largely-untold-story-of-how-one-guy-in-california-keeps-the-worlds-computers-on-the-right-time-a97a5493bf73">Daniel Rosehill’s article on the topic</a>. For a drier history, check out the <a href="https://en.wikipedia.org/wiki/Tz_database">wikipedia article</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Get the Data</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;"># Read in with tidytuesdayR package </span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># This loads the readme and all the datasets for the week of interest</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;"># Either ISO-8601 date or year/week works!</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#tuesdata &lt;- tidytuesdayR::tt_load('2023-03-21')</span></span>
<span id="cb2-9">tuesdata <span class="ot" style="color: #003B4F;">&lt;-</span> tidytuesdayR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tt_load</span>(<span class="dv" style="color: #AD0000;">2023</span>, <span class="at" style="color: #657422;">week =</span> <span class="dv" style="color: #AD0000;">13</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11">transitions <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>transitions</span>
<span id="cb2-12">timezones <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>timezones</span>
<span id="cb2-13">timezone_countries <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>timezone_countries</span>
<span id="cb2-14">countries <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>countries</span></code></pre></div>
</div>
<p>It is suggested that we change the begin and end variables in transitions to datetimes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">transitions <span class="ot" style="color: #003B4F;">&lt;-</span> transitions <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">begin =</span> <span class="fu" style="color: #4758AB;">as_datetime</span>(begin), <span class="at" style="color: #657422;">end =</span> <span class="fu" style="color: #4758AB;">as_datetime</span>(end))</span></code></pre></div>
</div>
<p>I was interested in how many countries had multiple times zones. I know the US has 4 time zones in the continental US.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">num_zones <span class="ot" style="color: #003B4F;">&lt;-</span> timezone_countries <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">count</span>(country_code, <span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4">num_zones <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">filter</span>(n <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">left_join</span>(countries) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">select</span>(place_name, n) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;">filter</span>(place_name <span class="sc" style="color: #5E5E5E;">!=</span> <span class="st" style="color: #20794D;">"NA"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;">gt</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;">cols_label</span>(<span class="at" style="color: #657422;">place_name =</span> <span class="st" style="color: #20794D;">"Country"</span>, <span class="at" style="color: #657422;">n =</span> <span class="st" style="color: #20794D;">"Number of TZs"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;">opt_stylize</span>(<span class="at" style="color: #657422;">style =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">add_row_striping =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">tab_header</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Countries with Multiple TZs"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="eorjdmefof" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#eorjdmefof) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#eorjdmefof) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#eorjdmefof) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#eorjdmefof) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#eorjdmefof) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#eorjdmefof) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#eorjdmefof) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#eorjdmefof) .gt_col_heading {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#eorjdmefof) .gt_column_spanner_outer {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#eorjdmefof) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#eorjdmefof) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#eorjdmefof) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#eorjdmefof) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#eorjdmefof) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: middle;
}

:where(#eorjdmefof) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#eorjdmefof) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#eorjdmefof) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: none;
  border-top-width: 1px;
  border-top-color: #D5D5D5;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D5D5D5;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D5D5D5;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#eorjdmefof) .gt_stub {
  color: #333333;
  background-color: #89D3FE;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D5D5D5;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#eorjdmefof) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#eorjdmefof) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#eorjdmefof) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#eorjdmefof) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #5F5F5F;
}

:where(#eorjdmefof) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#eorjdmefof) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#eorjdmefof) .gt_grand_summary_row {
  color: #333333;
  background-color: #D5D5D5;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#eorjdmefof) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #5F5F5F;
}

:where(#eorjdmefof) .gt_striped {
  background-color: #EDF7FC;
}

:where(#eorjdmefof) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#eorjdmefof) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#eorjdmefof) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#eorjdmefof) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#eorjdmefof) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#eorjdmefof) .gt_left {
  text-align: left;
}

:where(#eorjdmefof) .gt_center {
  text-align: center;
}

:where(#eorjdmefof) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#eorjdmefof) .gt_font_normal {
  font-weight: normal;
}

:where(#eorjdmefof) .gt_font_bold {
  font-weight: bold;
}

:where(#eorjdmefof) .gt_font_italic {
  font-style: italic;
}

:where(#eorjdmefof) .gt_super {
  font-size: 65%;
}

:where(#eorjdmefof) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#eorjdmefof) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#eorjdmefof) .gt_indent_1 {
  text-indent: 5px;
}

:where(#eorjdmefof) .gt_indent_2 {
  text-indent: 10px;
}

:where(#eorjdmefof) .gt_indent_3 {
  text-indent: 15px;
}

:where(#eorjdmefof) .gt_indent_4 {
  text-indent: 20px;
}

:where(#eorjdmefof) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="2" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Countries with Multiple TZs</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Country">Country</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Number of TZs">Number of TZs</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="place_name" class="gt_row gt_left">United States</td>
<td headers="n" class="gt_row gt_right">29</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Canada</td>
<td headers="n" class="gt_row gt_right gt_striped">28</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Russia</td>
<td headers="n" class="gt_row gt_right">27</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Brazil</td>
<td headers="n" class="gt_row gt_right gt_striped">16</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Argentina</td>
<td headers="n" class="gt_row gt_right">12</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Australia</td>
<td headers="n" class="gt_row gt_right gt_striped">12</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Mexico</td>
<td headers="n" class="gt_row gt_right">11</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Kazakhstan</td>
<td headers="n" class="gt_row gt_right gt_striped">7</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Greenland</td>
<td headers="n" class="gt_row gt_right">4</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Indonesia</td>
<td headers="n" class="gt_row gt_right gt_striped">4</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Ukraine</td>
<td headers="n" class="gt_row gt_right">4</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Chile</td>
<td headers="n" class="gt_row gt_right gt_striped">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Spain</td>
<td headers="n" class="gt_row gt_right">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Micronesia</td>
<td headers="n" class="gt_row gt_right gt_striped">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Kiribati</td>
<td headers="n" class="gt_row gt_right">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Mongolia</td>
<td headers="n" class="gt_row gt_right gt_striped">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Malaysia</td>
<td headers="n" class="gt_row gt_right">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">French Polynesia</td>
<td headers="n" class="gt_row gt_right gt_striped">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Portugal</td>
<td headers="n" class="gt_row gt_right">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">US minor outlying islands</td>
<td headers="n" class="gt_row gt_right gt_striped">3</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Congo (Dem. Rep.)</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">China</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Cyprus</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Germany</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Ecuador</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Marshall Islands</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">New Zealand</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Papua New Guinea</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Palestine</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">French Southern &amp; Antarctic Lands</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left">Uzbekistan</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="place_name" class="gt_row gt_left gt_striped">Vietnam</td>
<td headers="n" class="gt_row gt_right gt_striped">2</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>And we find that the United States has 29!! time zones in the database. This was unexpected, so say the least. I thought maybe there were some times zones for territories and perhaps military bases that I did not know about. I also thought there might be some extra time zones arising from some states using daylight savings time, while others in the same area might not. I wanted to visualize where these times zones were.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">US_tz <span class="ot" style="color: #003B4F;">&lt;-</span> timezone_countries <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">filter</span>(country_code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"US"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">left_join</span>(timezones)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Joining with `by = join_by(zone)`</code></pre>
</div>
</div>
<p>I found the <a href="https://cran.r-project.org/web/packages/lutz/">lutz package</a> created nice pictograms about when a timezone shifts from DST and back. (This package uses the same underlying database that we are using here to determine when the shifts occur.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"> <span class="fu" style="color: #4758AB;">tz_plot</span>(US_tz<span class="sc" style="color: #5E5E5E;">$</span>zone[<span class="dv" style="color: #AD0000;">21</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/tidytuesday-timezones_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I created the plots and saved them as images. I modified a function I found on <a href="https://stackoverflow.com/questions/66324232/how-to-save-files-with-different-names-using-for-loops-in-r">stack overflow to create the file names</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">wd <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">getwd</span>()</span>
<span id="cb8-2">filepath <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">file.path</span>(wd)</span>
<span id="cb8-3"></span>
<span id="cb8-4"></span>
<span id="cb8-5">make_filename <span class="ot" style="color: #003B4F;">=</span> <span class="cf" style="color: #003B4F;">function</span>(number){</span>
<span id="cb8-6">  <span class="co" style="color: #5E5E5E;"># doing this, putting it all on a single line or using pipe %&gt;%</span></span>
<span id="cb8-7">  <span class="co" style="color: #5E5E5E;"># is just matter of style</span></span>
<span id="cb8-8">  filename <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"tzplot"</span>, number, <span class="at" style="color: #657422;">sep=</span><span class="st" style="color: #20794D;">"_"</span>)</span>
<span id="cb8-9">  filename <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">paste0</span>(filename, <span class="st" style="color: #20794D;">".png"</span>)</span>
<span id="cb8-10">  filename <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">file.path</span>(filepath, filename)</span>
<span id="cb8-11">  </span>
<span id="cb8-12">  filename</span>
<span id="cb8-13">}</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;">#creating a variable to store the files name</span></span>
<span id="cb8-16">US_tz <span class="ot" style="color: #003B4F;">&lt;-</span> US_tz <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">image_name =</span> <span class="st" style="color: #20794D;">"tbd"</span>)</span>
<span id="cb8-18"></span>
<span id="cb8-19">index <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-20"><span class="cf" style="color: #003B4F;">for</span> (index <span class="cf" style="color: #003B4F;">in</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="fu" style="color: #4758AB;">nrow</span>(US_tz))) {</span>
<span id="cb8-21">  filename <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">make_filename</span>(index)</span>
<span id="cb8-22">  US_tz[index , <span class="st" style="color: #20794D;">"image_name"</span>] <span class="ot" style="color: #003B4F;">&lt;-</span> filename</span>
<span id="cb8-23">  <span class="co" style="color: #5E5E5E;"># 1. Open jpeg file</span></span>
<span id="cb8-24">  <span class="fu" style="color: #4758AB;">png</span>(filename, <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">350</span>, <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">350</span>, <span class="at" style="color: #657422;">bg =</span> <span class="st" style="color: #20794D;">"transparent"</span>)</span>
<span id="cb8-25">  <span class="co" style="color: #5E5E5E;"># 2. Create the plot</span></span>
<span id="cb8-26">  <span class="co" style="color: #5E5E5E;"># you need to print the plot if you call it inside a loop</span></span>
<span id="cb8-27">  <span class="fu" style="color: #4758AB;">print</span>(<span class="fu" style="color: #4758AB;">tz_plot</span>(US_tz<span class="sc" style="color: #5E5E5E;">$</span>zone[index]))</span>
<span id="cb8-28">  <span class="co" style="color: #5E5E5E;"># 3. Close the file</span></span>
<span id="cb8-29">  <span class="fu" style="color: #4758AB;">dev.off</span>()</span>
<span id="cb8-30">  index <span class="ot" style="color: #003B4F;">=</span> index <span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-31">}</span></code></pre></div>
</div>
<p>Next I created a world map, inspired by the one from</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
</p><p>My submission for <a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a>, Week 13 on time zones. I plot time zones in the world map.<br><br>Code: <a href="https://t.co/y5Cm4tuaVk">https://t.co/y5Cm4tuaVk</a> <a href="https://t.co/BZC3anC5Oa">pic.twitter.com/BZC3anC5Oa</a></p>
<p></p>
<p>— Mitsuo Shiota (<span class="citation" data-cites="mitsuoxv">@mitsuoxv</span>) <a href="https://twitter.com/mitsuoxv/status/1640514380600332290?ref_src=twsrc%5Etfw">March 28, 2023</a></p>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>I hadn’t previously used the <a href="https://cran.r-project.org/web/packages/maps/">maps package</a>, so I appreciate being introduced to it. The maps package only has a mainland US map, so I used the world map. (Plus, as I mentioned, I thought some of these time zones would be in other parts of the world.) I followed a tutorial on <a href="https://themockup.blog/posts/2020-10-11-embedding-images-in-ggplot/">Plotting Points as Images in ggplot</a> and used the hints about aspect ratio to make my tz_plot circles remain circular. However, that did stretch the world a bit.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">aspect_ratio <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fl" style="color: #AD0000;">1.618</span>  </span>
<span id="cb9-2"></span>
<span id="cb9-3">us_tz_map <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">map_data</span>(<span class="st" style="color: #20794D;">"world"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(long, lat)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">geom_polygon</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">group =</span> group), <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, </span>
<span id="cb9-6">               <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"gray30"</span>, <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.9</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">geom_image</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> longitude, latitude, <span class="at" style="color: #657422;">image =</span> image_name), </span>
<span id="cb9-8">             <span class="at" style="color: #657422;">data =</span> US_tz, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">0.025</span>, <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"width"</span>,</span>
<span id="cb9-9">             <span class="at" style="color: #657422;">asp =</span> aspect_ratio) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;">coord_sf</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"The United States has 29 Timezone- Mostly Redunant"</span>,</span>
<span id="cb9-12">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Data from: https://data.iana.org/time-zones/tz-link.html"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;">theme_void</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">/</span>aspect_ratio,</span>
<span id="cb9-15">    <span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"bottom"</span>,</span>
<span id="cb9-16">    <span class="at" style="color: #657422;">plot.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>)</span>
<span id="cb9-17">    )</span>
<span id="cb9-18"></span>
<span id="cb9-19"><span class="fu" style="color: #4758AB;">ggsave</span>(<span class="st" style="color: #20794D;">"thumbnail.png"</span>, us_tz_map, <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">5</span> <span class="sc" style="color: #5E5E5E;">*</span> aspect_ratio, <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb9-20">us_tz_map</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/tidytuesday-timezones_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And what we see is there are a bunch of redundant times zone specification, especially in the Midwest.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">US_tz <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">select</span>(zone, latitude, longitude) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">arrange</span>(longitude) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">gt</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;">opt_stylize</span>(<span class="at" style="color: #657422;">style =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">add_row_striping =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;">tab_header</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Countries with Multiple TZs"</span>) </span></code></pre></div>
<div class="cell-output-display">

<div id="lrwakucyxm" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#lrwakucyxm) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#lrwakucyxm) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#lrwakucyxm) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#lrwakucyxm) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#lrwakucyxm) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#lrwakucyxm) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#lrwakucyxm) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#lrwakucyxm) .gt_col_heading {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#lrwakucyxm) .gt_column_spanner_outer {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#lrwakucyxm) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#lrwakucyxm) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#lrwakucyxm) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#lrwakucyxm) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#lrwakucyxm) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: middle;
}

:where(#lrwakucyxm) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#lrwakucyxm) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#lrwakucyxm) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: none;
  border-top-width: 1px;
  border-top-color: #D5D5D5;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D5D5D5;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D5D5D5;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#lrwakucyxm) .gt_stub {
  color: #333333;
  background-color: #89D3FE;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D5D5D5;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#lrwakucyxm) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#lrwakucyxm) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#lrwakucyxm) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#lrwakucyxm) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #5F5F5F;
}

:where(#lrwakucyxm) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#lrwakucyxm) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#lrwakucyxm) .gt_grand_summary_row {
  color: #333333;
  background-color: #D5D5D5;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#lrwakucyxm) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #5F5F5F;
}

:where(#lrwakucyxm) .gt_striped {
  background-color: #EDF7FC;
}

:where(#lrwakucyxm) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#lrwakucyxm) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#lrwakucyxm) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#lrwakucyxm) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#lrwakucyxm) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#lrwakucyxm) .gt_left {
  text-align: left;
}

:where(#lrwakucyxm) .gt_center {
  text-align: center;
}

:where(#lrwakucyxm) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#lrwakucyxm) .gt_font_normal {
  font-weight: normal;
}

:where(#lrwakucyxm) .gt_font_bold {
  font-weight: bold;
}

:where(#lrwakucyxm) .gt_font_italic {
  font-style: italic;
}

:where(#lrwakucyxm) .gt_super {
  font-size: 65%;
}

:where(#lrwakucyxm) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#lrwakucyxm) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#lrwakucyxm) .gt_indent_1 {
  text-indent: 5px;
}

:where(#lrwakucyxm) .gt_indent_2 {
  text-indent: 10px;
}

:where(#lrwakucyxm) .gt_indent_3 {
  text-indent: 15px;
}

:where(#lrwakucyxm) .gt_indent_4 {
  text-indent: 20px;
}

:where(#lrwakucyxm) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="3" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Countries with Multiple TZs</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="zone">zone</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="latitude">latitude</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="longitude">longitude</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="zone" class="gt_row gt_left">America/Adak</td>
<td headers="latitude" class="gt_row gt_right">52.66667</td>
<td headers="longitude" class="gt_row gt_right">-177.13333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Nome</td>
<td headers="latitude" class="gt_row gt_right gt_striped">64.56667</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-165.78333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">Pacific/Honolulu</td>
<td headers="latitude" class="gt_row gt_right">21.71667</td>
<td headers="longitude" class="gt_row gt_right">-158.35000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Anchorage</td>
<td headers="latitude" class="gt_row gt_right gt_striped">61.30000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-149.91667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Yakutat</td>
<td headers="latitude" class="gt_row gt_right">60.35000</td>
<td headers="longitude" class="gt_row gt_right">-140.35000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Sitka</td>
<td headers="latitude" class="gt_row gt_right gt_striped">57.75000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-135.41667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Juneau</td>
<td headers="latitude" class="gt_row gt_right">58.41667</td>
<td headers="longitude" class="gt_row gt_right">-134.60000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Metlakatla</td>
<td headers="latitude" class="gt_row gt_right gt_striped">55.73333</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-132.15000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Los_Angeles</td>
<td headers="latitude" class="gt_row gt_right">34.18333</td>
<td headers="longitude" class="gt_row gt_right">-118.80000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Boise</td>
<td headers="latitude" class="gt_row gt_right gt_striped">44.41667</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-116.35000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Phoenix</td>
<td headers="latitude" class="gt_row gt_right">34.33333</td>
<td headers="longitude" class="gt_row gt_right">-112.46667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Denver</td>
<td headers="latitude" class="gt_row gt_right gt_striped">40.08333</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-105.03333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/North_Dakota/Beulah</td>
<td headers="latitude" class="gt_row gt_right">48.10000</td>
<td headers="longitude" class="gt_row gt_right">-102.43333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/North_Dakota/Center</td>
<td headers="latitude" class="gt_row gt_right gt_striped">48.08333</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-102.23333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/North_Dakota/New_Salem</td>
<td headers="latitude" class="gt_row gt_right">47.53333</td>
<td headers="longitude" class="gt_row gt_right">-102.05000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Menominee</td>
<td headers="latitude" class="gt_row gt_right gt_striped">45.56667</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-88.45000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Indiana/Vincennes</td>
<td headers="latitude" class="gt_row gt_right">39.30000</td>
<td headers="longitude" class="gt_row gt_right">-88.23333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Indiana/Petersburg</td>
<td headers="latitude" class="gt_row gt_right gt_striped">39.00000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-87.98333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Chicago</td>
<td headers="latitude" class="gt_row gt_right">41.85000</td>
<td headers="longitude" class="gt_row gt_right">-87.65000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Indiana/Tell_City</td>
<td headers="latitude" class="gt_row gt_right gt_striped">38.13333</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-87.43333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Indiana/Knox</td>
<td headers="latitude" class="gt_row gt_right">42.03333</td>
<td headers="longitude" class="gt_row gt_right">-87.11667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Indiana/Marengo</td>
<td headers="latitude" class="gt_row gt_right gt_striped">38.90000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-87.01667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Indiana/Winamac</td>
<td headers="latitude" class="gt_row gt_right">41.13333</td>
<td headers="longitude" class="gt_row gt_right">-86.78333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Indiana/Indianapolis</td>
<td headers="latitude" class="gt_row gt_right gt_striped">39.86667</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-86.63333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Kentucky/Louisville</td>
<td headers="latitude" class="gt_row gt_right">38.50000</td>
<td headers="longitude" class="gt_row gt_right">-86.31667</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Kentucky/Monticello</td>
<td headers="latitude" class="gt_row gt_right gt_striped">37.60000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-85.78333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/Indiana/Vevay</td>
<td headers="latitude" class="gt_row gt_right">39.60000</td>
<td headers="longitude" class="gt_row gt_right">-85.10000</td></tr>
    <tr><td headers="zone" class="gt_row gt_left gt_striped">America/Detroit</td>
<td headers="latitude" class="gt_row gt_right gt_striped">43.20000</td>
<td headers="longitude" class="gt_row gt_right gt_striped">-83.78333</td></tr>
    <tr><td headers="zone" class="gt_row gt_left">America/New_York</td>
<td headers="latitude" class="gt_row gt_right">41.55000</td>
<td headers="longitude" class="gt_row gt_right">-74.38333</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {Tidy {Tuesday:} {Daylight} {Savings} {Time}},
  date = {2023-03-28},
  url = {https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“Tidy Tuesday: Daylight Savings
Time.”</span> March 28, 2023. <a href="https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/">https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>TidyTuesday</category>
  <category>R-code</category>
  <category>Code-Along</category>
  <category>Data-Viz</category>
  <category>ggimage</category>
  <category>maps</category>
  <guid>https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/tidytuesday-timezones.html</guid>
  <pubDate>Tue, 28 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-28-tidytuesday-timezones/thumbnail.png" medium="image" type="image/png" height="89" width="144"/>
</item>
<item>
  <title>TidyTuesday Week 12: Programming Languages Revisited</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/index.html</link>
  <description><![CDATA[ 



<p>This week, <a href="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/">I participated</a> in my first #TidyTuesday challenge. My goal was to get something out on the day of the challenge rather than perfection. I did notice that the skimr output wasn’t formatted nicely on the webpage. Today, I’m going to delve into the <a href="https://cran.r-project.org/web/packages/skimr/index.html">skimr</a> and <a href="https://quarto.org/docs/output-formats/page-layout.html">Quarto</a> documentation and make a nicer version of the output. Secondly, I’m going to fix up my final figure, which is the one I shared on social media:</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
</p><p>My first try at a <a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a> challenge. We were given a dataset about what characters are used to comment computer code. This viz shows the most “highly ranked” language for each type of commenting token. The size of the word reflects the # of users of that language. <a href="https://twitter.com/hashtag/RStats?src=hash&amp;ref_src=twsrc%5Etfw">#RStats</a> <a href="https://t.co/oGhqaYHD5U">pic.twitter.com/oGhqaYHD5U</a></p>
<p></p>
<p>— Louise Sinks (<span class="citation" data-cites="LouiseSinks">@LouiseSinks</span>) <a href="https://twitter.com/LouiseSinks/status/1638281716614811664?ref_src=twsrc%5Etfw">March 21, 2023</a></p>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<section id="skimr-to-understand-your-data" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="skimr-to-understand-your-data">Skimr to understand your data</h2>
<p>Skimr is a package that provides statistical summaries of the variables in your dataframe. It also provides information about the missingness of each variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidytuesdayR)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(skimr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(ggthemes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(gt)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(ggrepel)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">library</span>(visdat) <span class="co" style="color: #5E5E5E;"># visualizing missing data in dataframe</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Get the Data</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;"># Read in with tidytuesdayR package </span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># This loads the readme and all the datasets for the week of interest</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;"># Either ISO-8601 date or year/week works!</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#tuesdata &lt;- tidytuesdayR::tt_load('2023-03-21')</span></span>
<span id="cb2-9">tuesdata <span class="ot" style="color: #003B4F;">&lt;-</span> tidytuesdayR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tt_load</span>(<span class="dv" style="color: #AD0000;">2023</span>, <span class="at" style="color: #657422;">week =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11">languages <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>languages</span></code></pre></div>
</div>
<section id="customizing-the-skim-output" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="customizing-the-skim-output">Customizing the skim Output</h3>
<p>My main objection is that the numerical summary is too wide and has a scroll bar. I especially want the histogram to be viewable on the first screen. I also don’t particularly care about all the quartile information; min and max are enough. If I want to delve more into the stats of a variable, I will do it another way, not with skimr.</p>
<p>First, quarto lets you expand the output of the code chunk to fill the page via the option “#| column: page”, so I’ll do that. Next, I’ll create a custom skim function that drops the p25, p50, and p75 output from the summary of the numerical variables.</p>
<div class="cell page-columns page-full">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">my_skim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">skim_with</span>(<span class="at" style="color: #657422;">numeric =</span> <span class="fu" style="color: #4758AB;">sfl</span>(<span class="at" style="color: #657422;">p25 =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">p50 =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">p75 =</span> <span class="cn" style="color: #8f5902;">NULL</span>)) </span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">my_skim</span>(languages)</span></code></pre></div>
<div class="cell-output-display column-page">
<table class="table table-sm table-striped">
<caption>Data summary</caption>
<tbody>
<tr class="odd">
<td style="text-align: left;">Name</td>
<td style="text-align: left;">languages</td>
</tr>
<tr class="even">
<td style="text-align: left;">Number of rows</td>
<td style="text-align: left;">4303</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Number of columns</td>
<td style="text-align: left;">49</td>
</tr>
<tr class="even">
<td style="text-align: left;">_______________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Column type frequency:</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">character</td>
<td style="text-align: left;">21</td>
</tr>
<tr class="odd">
<td style="text-align: left;">logical</td>
<td style="text-align: left;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">numeric</td>
<td style="text-align: left;">24</td>
</tr>
<tr class="odd">
<td style="text-align: left;">________________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">Group variables</td>
<td style="text-align: left;">None</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: character</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 35%">
<col style="width: 10%">
<col style="width: 15%">
<col style="width: 4%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 9%">
<col style="width: 12%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">empty</th>
<th style="text-align: right;">n_unique</th>
<th style="text-align: right;">whitespace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">pldb_id</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">52</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4303</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">title</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">56</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4267</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">description</td>
<td style="text-align: right;">3480</td>
<td style="text-align: right;">0.19</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">2273</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">811</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">type</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">27</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">40</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">creators</td>
<td style="text-align: right;">3203</td>
<td style="text-align: right;">0.26</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">253</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">985</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">website</td>
<td style="text-align: right;">2928</td>
<td style="text-align: right;">0.32</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">131</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1368</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">domain_name</td>
<td style="text-align: right;">3588</td>
<td style="text-align: right;">0.17</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">700</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">reference</td>
<td style="text-align: right;">2314</td>
<td style="text-align: right;">0.46</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">251</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1955</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo</td>
<td style="text-align: right;">3402</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">25</td>
<td style="text-align: right;">73</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">897</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_description</td>
<td style="text-align: right;">3438</td>
<td style="text-align: right;">0.20</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">419</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">853</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language</td>
<td style="text-align: right;">3829</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">30</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">474</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_tm_scope</td>
<td style="text-align: right;">3837</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">34</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">361</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language_type</td>
<td style="text-align: right;">3837</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_ace_mode</td>
<td style="text-align: right;">3838</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">96</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language_file_extensions</td>
<td style="text-align: right;">3833</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">606</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">466</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia</td>
<td style="text-align: right;">2731</td>
<td style="text-align: right;">0.37</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">104</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1566</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_summary</td>
<td style="text-align: right;">2884</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">17</td>
<td style="text-align: right;">6741</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1407</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_related</td>
<td style="text-align: right;">3145</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1761</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1059</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">line_comment_token</td>
<td style="text-align: right;">3831</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">origin_community</td>
<td style="text-align: right;">1190</td>
<td style="text-align: right;">0.72</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">305</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2232</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">file_type</td>
<td style="text-align: right;">3213</td>
<td style="text-align: right;">0.25</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: logical</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 41%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 6%">
<col style="width: 22%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: left;">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">features_has_comments</td>
<td style="text-align: right;">3683</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">TRU: 617, FAL: 3</td>
</tr>
<tr class="even">
<td style="text-align: left;">features_has_semantic_indentation</td>
<td style="text-align: right;">3722</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">FAL: 516, TRU: 65</td>
</tr>
<tr class="odd">
<td style="text-align: left;">features_has_line_comments</td>
<td style="text-align: right;">3765</td>
<td style="text-align: right;">0.13</td>
<td style="text-align: right;">0.96</td>
<td style="text-align: left;">TRU: 517, FAL: 21</td>
</tr>
<tr class="even">
<td style="text-align: left;">is_open_source</td>
<td style="text-align: right;">3792</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0.89</td>
<td style="text-align: left;">TRU: 453, FAL: 58</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: numeric</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 32%">
<col style="width: 9%">
<col style="width: 13%">
<col style="width: 10%">
<col style="width: 11%">
<col style="width: 5%">
<col style="width: 8%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">p0</th>
<th style="text-align: right;">p100</th>
<th style="text-align: left;">hist</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">appeared</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1991.11</td>
<td style="text-align: right;">111.44</td>
<td style="text-align: right;">-2000</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">domain_name_registered</td>
<td style="text-align: right;">3801</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">2011.33</td>
<td style="text-align: right;">7.02</td>
<td style="text-align: right;">1990</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▃▃▇▆</td>
</tr>
<tr class="odd">
<td style="text-align: left;">isbndb</td>
<td style="text-align: right;">3217</td>
<td style="text-align: right;">0.25</td>
<td style="text-align: right;">7.71</td>
<td style="text-align: right;">33.16</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">400</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">book_count</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2.08</td>
<td style="text-align: right;">17.34</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">401</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">semantic_scholar</td>
<td style="text-align: right;">3545</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">3.79</td>
<td style="text-align: right;">8.32</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">52</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">language_rank</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2151.00</td>
<td style="text-align: right;">1242.31</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4302</td>
<td style="text-align: left;">▇▇▇▇▇</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_stars</td>
<td style="text-align: right;">3414</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">2127.40</td>
<td style="text-align: right;">7554.02</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">88526</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_forks</td>
<td style="text-align: right;">3417</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">261.29</td>
<td style="text-align: right;">1203.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">23732</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_updated</td>
<td style="text-align: right;">3418</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">2021.39</td>
<td style="text-align: right;">1.76</td>
<td style="text-align: right;">2012</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_subscribers</td>
<td style="text-align: right;">3418</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">62.34</td>
<td style="text-align: right;">200.88</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2910</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_created</td>
<td style="text-align: right;">3425</td>
<td style="text-align: right;">0.20</td>
<td style="text-align: right;">2015.84</td>
<td style="text-align: right;">3.48</td>
<td style="text-align: right;">2006</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▅▇▇▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_issues</td>
<td style="text-align: right;">3518</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">123.03</td>
<td style="text-align: right;">546.26</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">9522</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_first_commit</td>
<td style="text-align: right;">3567</td>
<td style="text-align: right;">0.17</td>
<td style="text-align: right;">2014.74</td>
<td style="text-align: right;">4.99</td>
<td style="text-align: right;">1987</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▁▁▆▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_repos</td>
<td style="text-align: right;">3833</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">197134.67</td>
<td style="text-align: right;">1226900.57</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">16046489</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_daily_page_views</td>
<td style="text-align: right;">2837</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">227.13</td>
<td style="text-align: right;">783.55</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">13394</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_backlinks_count</td>
<td style="text-align: right;">2877</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">318.55</td>
<td style="text-align: right;">1635.29</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">34348</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_page_id</td>
<td style="text-align: right;">2893</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">9167847.21</td>
<td style="text-align: right;">13506832.90</td>
<td style="text-align: right;">928</td>
<td style="text-align: right;">63063548</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_appeared</td>
<td style="text-align: right;">2958</td>
<td style="text-align: right;">0.31</td>
<td style="text-align: right;">1991.14</td>
<td style="text-align: right;">17.03</td>
<td style="text-align: right;">1830</td>
<td style="text-align: right;">2019</td>
<td style="text-align: left;">▁▁▁▃▇</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_created</td>
<td style="text-align: right;">3040</td>
<td style="text-align: right;">0.29</td>
<td style="text-align: right;">2005.75</td>
<td style="text-align: right;">3.77</td>
<td style="text-align: right;">2001</td>
<td style="text-align: right;">2020</td>
<td style="text-align: left;">▇▇▂▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_revision_count</td>
<td style="text-align: right;">3130</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">330.43</td>
<td style="text-align: right;">813.26</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">10104</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">last_activity</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2000.62</td>
<td style="text-align: right;">84.60</td>
<td style="text-align: right;">-900</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">number_of_users</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">13771.26</td>
<td style="text-align: right;">227712.95</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">7179119</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">number_of_jobs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">422.18</td>
<td style="text-align: right;">12572.99</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">771996</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">central_package_repository_count</td>
<td style="text-align: right;">1482</td>
<td style="text-align: right;">0.66</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">▁▁▇▁▁</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>This output is much nicer. It is a bit wall of text though. I wouldn’t recommend using this in reports, but it is a useful tool when doing your initial dataset analysis. (As a side note, I have noticed skimr doesn’t work well on Kaggle. It performs as expected if you are in interactive mode, but it fails when you try to save the notebook or run non-interactively.)</p>
</section>
<section id="styling-skim-output-with-gt" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="styling-skim-output-with-gt">Styling skim output with gt</h3>
<p>If, for some reason, you did need to include output/ visualizations about missingness in a report, I’d probably recreate visualizations or tables by class of variable, especially if you have many variables, as I do here.</p>
<p>Here’s an example for numeric variables, of which there are 24 in the dataset. First, we will skim the data and then use the <a href="https://gt.rstudio.com/">gt package</a> to style the resulting dataframe as a table. I used a built-in style, but each table element can be individually customized.</p>
<div class="cell page-columns page-full">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">languages_numeric <span class="ot" style="color: #003B4F;">&lt;-</span> languages <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">select_if</span>(is.numeric)</span>
<span id="cb4-3"></span>
<span id="cb4-4">lang_numeric_skim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">my_skim</span>(languages_numeric)</span>
<span id="cb4-5"></span>
<span id="cb4-6">lang_numeric_skim <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>skim_type)   <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;">gt</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;">cols_label</span>(<span class="at" style="color: #657422;">n_missing =</span> <span class="st" style="color: #20794D;">"# Missing"</span>, <span class="at" style="color: #657422;">complete_rate =</span> <span class="st" style="color: #20794D;">"Completeness"</span>, </span>
<span id="cb4-10">             <span class="at" style="color: #657422;">numeric.mean =</span> <span class="st" style="color: #20794D;">"Mean"</span>, <span class="at" style="color: #657422;">numeric.sd =</span> <span class="st" style="color: #20794D;">"Standard Deviation"</span>,</span>
<span id="cb4-11">             <span class="at" style="color: #657422;">numeric.p0 =</span> <span class="st" style="color: #20794D;">"Min"</span>, <span class="at" style="color: #657422;">numeric.p100 =</span> <span class="st" style="color: #20794D;">"Max"</span>,</span>
<span id="cb4-12">             <span class="at" style="color: #657422;">numeric.hist =</span> <span class="st" style="color: #20794D;">"Histogram"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">opt_stylize</span>(<span class="at" style="color: #657422;">style =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">add_row_striping =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;">tab_header</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Summary of Numerical Variables in Languages"</span>) </span></code></pre></div>
<div class="cell-output-display column-page">

<div id="dyzfswubdi" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#dyzfswubdi) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#dyzfswubdi) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#dyzfswubdi) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#dyzfswubdi) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#dyzfswubdi) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#dyzfswubdi) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#dyzfswubdi) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#dyzfswubdi) .gt_col_heading {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#dyzfswubdi) .gt_column_spanner_outer {
  color: #FFFFFF;
  background-color: #0076BA;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#dyzfswubdi) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#dyzfswubdi) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#dyzfswubdi) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#dyzfswubdi) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#dyzfswubdi) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
  vertical-align: middle;
}

:where(#dyzfswubdi) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#dyzfswubdi) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#dyzfswubdi) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: none;
  border-top-width: 1px;
  border-top-color: #D5D5D5;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D5D5D5;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D5D5D5;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#dyzfswubdi) .gt_stub {
  color: #333333;
  background-color: #89D3FE;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D5D5D5;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#dyzfswubdi) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#dyzfswubdi) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#dyzfswubdi) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#dyzfswubdi) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #5F5F5F;
}

:where(#dyzfswubdi) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#dyzfswubdi) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#dyzfswubdi) .gt_grand_summary_row {
  color: #333333;
  background-color: #D5D5D5;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#dyzfswubdi) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #5F5F5F;
}

:where(#dyzfswubdi) .gt_striped {
  background-color: #EDF7FC;
}

:where(#dyzfswubdi) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #5F5F5F;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #5F5F5F;
}

:where(#dyzfswubdi) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#dyzfswubdi) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#dyzfswubdi) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#dyzfswubdi) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#dyzfswubdi) .gt_left {
  text-align: left;
}

:where(#dyzfswubdi) .gt_center {
  text-align: center;
}

:where(#dyzfswubdi) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#dyzfswubdi) .gt_font_normal {
  font-weight: normal;
}

:where(#dyzfswubdi) .gt_font_bold {
  font-weight: bold;
}

:where(#dyzfswubdi) .gt_font_italic {
  font-style: italic;
}

:where(#dyzfswubdi) .gt_super {
  font-size: 65%;
}

:where(#dyzfswubdi) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#dyzfswubdi) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#dyzfswubdi) .gt_indent_1 {
  text-indent: 5px;
}

:where(#dyzfswubdi) .gt_indent_2 {
  text-indent: 10px;
}

:where(#dyzfswubdi) .gt_indent_3 {
  text-indent: 15px;
}

:where(#dyzfswubdi) .gt_indent_4 {
  text-indent: 20px;
}

:where(#dyzfswubdi) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="8" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Summary of Numerical Variables in Languages</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="skim_variable">skim_variable</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="# Missing"># Missing</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Completeness">Completeness</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Mean">Mean</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Standard Deviation">Standard Deviation</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Min">Min</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Max">Max</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Histogram">Histogram</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="skim_variable" class="gt_row gt_left">appeared</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right">1.991105e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">1.114434e+02</td>
<td headers="numeric.p0" class="gt_row gt_right">-2000</td>
<td headers="numeric.p100" class="gt_row gt_right">2023</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▁▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">domain_name_registered</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3801</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.1166628</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">2.011333e+03</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">7.021132e+00</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">1990</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">2023</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▃▃▇▆</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">isbndb</td>
<td headers="n_missing" class="gt_row gt_right">3217</td>
<td headers="complete_rate" class="gt_row gt_right">0.2523821</td>
<td headers="numeric.mean" class="gt_row gt_right">7.706262e+00</td>
<td headers="numeric.sd" class="gt_row gt_right">3.316421e+01</td>
<td headers="numeric.p0" class="gt_row gt_right">0</td>
<td headers="numeric.p100" class="gt_row gt_right">400</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">book_count</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">2.079479e+00</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.734465e+01</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">401</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">semantic_scholar</td>
<td headers="n_missing" class="gt_row gt_right">3545</td>
<td headers="complete_rate" class="gt_row gt_right">0.1761562</td>
<td headers="numeric.mean" class="gt_row gt_right">3.794195e+00</td>
<td headers="numeric.sd" class="gt_row gt_right">8.316231e+00</td>
<td headers="numeric.p0" class="gt_row gt_right">0</td>
<td headers="numeric.p100" class="gt_row gt_right">52</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">language_rank</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">2.151000e+03</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.242313e+03</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">4302</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▇▇▇▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">github_repo_stars</td>
<td headers="n_missing" class="gt_row gt_right">3414</td>
<td headers="complete_rate" class="gt_row gt_right">0.2066000</td>
<td headers="numeric.mean" class="gt_row gt_right">2.127403e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">7.554016e+03</td>
<td headers="numeric.p0" class="gt_row gt_right">0</td>
<td headers="numeric.p100" class="gt_row gt_right">88526</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">github_repo_forks</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3417</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.2059029</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">2.612867e+02</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.203003e+03</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">23732</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">github_repo_updated</td>
<td headers="n_missing" class="gt_row gt_right">3418</td>
<td headers="complete_rate" class="gt_row gt_right">0.2056705</td>
<td headers="numeric.mean" class="gt_row gt_right">2.021390e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">1.763285e+00</td>
<td headers="numeric.p0" class="gt_row gt_right">2012</td>
<td headers="numeric.p100" class="gt_row gt_right">2023</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▁▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">github_repo_subscribers</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3418</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.2056705</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">6.234237e+01</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">2.008820e+02</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">2910</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">github_repo_created</td>
<td headers="n_missing" class="gt_row gt_right">3425</td>
<td headers="complete_rate" class="gt_row gt_right">0.2040437</td>
<td headers="numeric.mean" class="gt_row gt_right">2.015843e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">3.479589e+00</td>
<td headers="numeric.p0" class="gt_row gt_right">2006</td>
<td headers="numeric.p100" class="gt_row gt_right">2022</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▅▇▇▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">github_repo_issues</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3518</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.1824309</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">1.230344e+02</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">5.462553e+02</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">9522</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">github_repo_first_commit</td>
<td headers="n_missing" class="gt_row gt_right">3567</td>
<td headers="complete_rate" class="gt_row gt_right">0.1710435</td>
<td headers="numeric.mean" class="gt_row gt_right">2.014739e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">4.985409e+00</td>
<td headers="numeric.p0" class="gt_row gt_right">1987</td>
<td headers="numeric.p100" class="gt_row gt_right">2022</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▆▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">github_language_repos</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3833</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.1092261</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">1.971347e+05</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.226901e+06</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">16046489</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">wikipedia_daily_page_views</td>
<td headers="n_missing" class="gt_row gt_right">2837</td>
<td headers="complete_rate" class="gt_row gt_right">0.3406925</td>
<td headers="numeric.mean" class="gt_row gt_right">2.271330e+02</td>
<td headers="numeric.sd" class="gt_row gt_right">7.835524e+02</td>
<td headers="numeric.p0" class="gt_row gt_right">-1</td>
<td headers="numeric.p100" class="gt_row gt_right">13394</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">wikipedia_backlinks_count</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">2877</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.3313967</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">3.185484e+02</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.635289e+03</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">1</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">34348</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">wikipedia_page_id</td>
<td headers="n_missing" class="gt_row gt_right">2893</td>
<td headers="complete_rate" class="gt_row gt_right">0.3276784</td>
<td headers="numeric.mean" class="gt_row gt_right">9.167847e+06</td>
<td headers="numeric.sd" class="gt_row gt_right">1.350683e+07</td>
<td headers="numeric.p0" class="gt_row gt_right">928</td>
<td headers="numeric.p100" class="gt_row gt_right">63063548</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">wikipedia_appeared</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">2958</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.3125726</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">1.991144e+03</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">1.702650e+01</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">1830</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">2019</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▁▁▃▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">wikipedia_created</td>
<td headers="n_missing" class="gt_row gt_right">3040</td>
<td headers="complete_rate" class="gt_row gt_right">0.2935162</td>
<td headers="numeric.mean" class="gt_row gt_right">2.005748e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">3.768240e+00</td>
<td headers="numeric.p0" class="gt_row gt_right">2001</td>
<td headers="numeric.p100" class="gt_row gt_right">2020</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▇▂▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">wikipedia_revision_count</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">3130</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.2726005</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">3.304314e+02</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">8.132556e+02</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">1</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">10104</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">last_activity</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right">2.000616e+03</td>
<td headers="numeric.sd" class="gt_row gt_right">8.459776e+01</td>
<td headers="numeric.p0" class="gt_row gt_right">-900</td>
<td headers="numeric.p100" class="gt_row gt_right">2023</td>
<td headers="numeric.hist" class="gt_row gt_left">▁▁▁▁▇</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">number_of_users</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">0</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">1.377126e+04</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">2.277129e+05</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">7179119</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left">number_of_jobs</td>
<td headers="n_missing" class="gt_row gt_right">0</td>
<td headers="complete_rate" class="gt_row gt_right">1.0000000</td>
<td headers="numeric.mean" class="gt_row gt_right">4.221838e+02</td>
<td headers="numeric.sd" class="gt_row gt_right">1.257299e+04</td>
<td headers="numeric.p0" class="gt_row gt_right">0</td>
<td headers="numeric.p100" class="gt_row gt_right">771996</td>
<td headers="numeric.hist" class="gt_row gt_left">▇▁▁▁▁</td></tr>
    <tr><td headers="skim_variable" class="gt_row gt_left gt_striped">central_package_repository_count</td>
<td headers="n_missing" class="gt_row gt_right gt_striped">1482</td>
<td headers="complete_rate" class="gt_row gt_right gt_striped">0.6555891</td>
<td headers="numeric.mean" class="gt_row gt_right gt_striped">0.000000e+00</td>
<td headers="numeric.sd" class="gt_row gt_right gt_striped">0.000000e+00</td>
<td headers="numeric.p0" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.p100" class="gt_row gt_right gt_striped">0</td>
<td headers="numeric.hist" class="gt_row gt_left gt_striped">▁▁▇▁▁</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
</section>
<section id="visualizing-missingness-with-visdat" class="level3">
<h3 class="anchored" data-anchor-id="visualizing-missingness-with-visdat">Visualizing Missingness with visdat</h3>
<p>The <a href="https://cran.r-project.org/web/packages/visdat/">visdat package</a> makes ggplot- compatible missingness plots. The cluster = TRUE option groups variables that share missingness. Here we see that usually if some of the GitHub data is missing, then all of the GitHub data is missing. The percent missing is listed for each variable, and the overall missingness of the dataset is shown in the legend.</p>
<p>Note vis_miss doesn’t work on very large datasets. The documentation suggests keeping the number of records below 1,000. A more extensive package for exploratory visualizations called <a href="https://naniar.njtierney.com/">naniar</a> could also be used.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">languages_numeric <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">vis_miss</span>(<span class="at" style="color: #657422;">cluster =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"Missing Data in the Languages Dataset"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4">  <span class="co" style="color: #5E5E5E;">#theme_classic() +</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">8</span>, <span class="at" style="color: #657422;">angle =</span> <span class="dv" style="color: #AD0000;">90</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="improving-the-most-popular-language-for-each-comment-token-figure" class="level2">
<h2 class="anchored" data-anchor-id="improving-the-most-popular-language-for-each-comment-token-figure">Improving “The Most Popular Language for Each Comment Token” Figure</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">joined <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"processed_lang.csv"</span> , <span class="at" style="color: #657422;">show_col_types =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</div>
<p>Now the original figure:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">joined <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(line_comment_token, n, <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), </span>
<span id="cb7-3">             <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), <span class="at" style="color: #657422;">label =</span> title)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-4"> <span class="co" style="color: #5E5E5E;"># geom_point() +</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">show.legend =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-7">   <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"The Most Popular Language for Each Comment Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Number of languages using token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/index_files/figure-html/lang-token-graph-undordered-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I thought I had noted this in the previous post, but one of the tokens, ⍝ , is rendered as an empty box in the ggplot figures. I thought fixing this would be easy. First, I thought I could just pass the Unicode value for that symbol. Then, when that didn’t work, I thought I could change the font to one supporting that symbol. Supposedly, changing the font should be easy, yet after 3 hours working on it, I still had blank squares. There is a nice tutorial on <a href="https://statisticaloddsandends.wordpress.com/2021/07/08/using-different-fonts-with-ggplot2/">changing fonts in ggplot</a> that did not work until <a href="https://github.com/GuangchuangYu/meme/issues/1">I found someone with the same issue</a>. The solution is to add a line of code that doesn’t make much sense to me : <code>windowsFonts("Cambria Math" = windowsFont("Cambria Math"))</code></p>
<p>I saw a nice TidyTuesday figure on Twitter:</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
</p><p>My submission for <a href="https://twitter.com/hashtag/TidyTuesday?src=hash&amp;ref_src=twsrc%5Etfw">#TidyTuesday</a>, Week 12 on programming languages. I explore jobs per users.<br><br>Code: <a href="https://t.co/bV9DUHZmro">https://t.co/bV9DUHZmro</a> <a href="https://t.co/2D5YLnE5yz">pic.twitter.com/2D5YLnE5yz</a></p>
<p></p>
<p>— Mitsuo Shiota (<span class="citation" data-cites="mitsuoxv">@mitsuoxv</span>) <a href="https://twitter.com/mitsuoxv/status/1637986238962728961?ref_src=twsrc%5Etfw">March 21, 2023</a></p>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>with a caption referencing the original dataset. I’d like to add that. I generally want to increase the figure’s legibility and flip the color scale so that darker blue corresponds to more users. I also don’t think what popular means is entirely clear, so I’d like to explain more fully what I’m graphing.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">windowsFonts</span>(<span class="st" style="color: #20794D;">"Cambria Math"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">windowsFont</span>(<span class="st" style="color: #20794D;">"Cambria Math"</span>))</span>
<span id="cb8-2">joined <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(line_comment_token, n, <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), </span>
<span id="cb8-4">             <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), <span class="at" style="color: #657422;">label =</span> title)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">show.legend =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-7">    <span class="fu" style="color: #4758AB;">scale_colour_gradient</span>(<span class="at" style="color: #657422;">high =</span> <span class="st" style="color: #20794D;">"#08306b"</span>, <span class="at" style="color: #657422;">low =</span> <span class="st" style="color: #20794D;">"#6baed6"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb8-8">   <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"The Most Popular Language for Each Comment Token"</span>,</span>
<span id="cb8-9">       <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Based on # Users and Rank"</span>,</span>
<span id="cb8-10">       <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"data from https://pldb.com/"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Number of languages using token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;">theme_classic</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">16</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">text =</span> <span class="fu" style="color: #4758AB;">element_text</span>( <span class="at" style="color: #657422;">family =</span> <span class="st" style="color: #20794D;">"Cambria Math"</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">face =</span> <span class="st" style="color: #20794D;">"bold"</span>)) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {TidyTuesday {Week} 12: {Programming} {Languages} {Revisited}},
  date = {2023-03-24},
  url = {https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“TidyTuesday Week 12: Programming Languages
Revisited.”</span> March 24, 2023. <a href="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/">https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>TidyTuesday</category>
  <category>R-code</category>
  <category>Code-Along</category>
  <category>Data-Viz</category>
  <category>skimr</category>
  <guid>https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/index.html</guid>
  <pubDate>Fri, 24 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-24-tidytuesday-figure-polishing/thumbnail.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Twitter Cards</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-25-twitter-cards/twitter-cards.html</link>
  <description><![CDATA[ 



<p>Trying to get the picture to show in a twitter card. Apparently you need to specify the image on every document, not just in the main yml doc, which is what I understood from the instructions.</p>
<p>Now this works for new posts, but not old posts.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {Twitter {Cards}},
  date = {2023-03-24},
  url = {https://lsinks.github.io/posts/2023-03-25-twitter-cards/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“Twitter Cards.”</span> March 24, 2023. <a href="https://lsinks.github.io/posts/2023-03-25-twitter-cards/">https://lsinks.github.io/posts/2023-03-25-twitter-cards/</a>.
</div></div></section></div> ]]></description>
  <category>Quarto</category>
  <guid>https://lsinks.github.io/posts/2023-03-25-twitter-cards/twitter-cards.html</guid>
  <pubDate>Fri, 24 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-25-twitter-cards/thumbnail.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>TidyTuesday Week 12: Programming Languages</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index.html</link>
  <description><![CDATA[ 



<p>This is my first attempt at Tidy Tuesday. The dataset today is about Programming Languages. The <a href="https://pldb.com/posts/does-every-programming-language-support-line-comments.html">sample visualizations are about the comment codes</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidytuesdayR)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(skimr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(ggthemes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(gt)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(ggrepel)</span></code></pre></div>
</div>
<p>Load the data first. There has been some cleaning done as outlined on the <a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-03-21/readme.md">TidyTuesday github page</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Get the Data</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;"># Read in with tidytuesdayR package </span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># This loads the readme and all the datasets for the week of interest</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;"># Either ISO-8601 date or year/week works!</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#tuesdata &lt;- tidytuesdayR::tt_load('2023-03-21')</span></span>
<span id="cb2-9">tuesdata <span class="ot" style="color: #003B4F;">&lt;-</span> tidytuesdayR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tt_load</span>(<span class="dv" style="color: #AD0000;">2023</span>, <span class="at" style="color: #657422;">week =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11">languages <span class="ot" style="color: #003B4F;">&lt;-</span> tuesdata<span class="sc" style="color: #5E5E5E;">$</span>languages</span></code></pre></div>
</div>
<p>First, let’s look at how complete the data is. The skimr package produces nice summary information about the variables and their completeness.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">skim</span>(languages)</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<caption>Data summary</caption>
<tbody>
<tr class="odd">
<td style="text-align: left;">Name</td>
<td style="text-align: left;">languages</td>
</tr>
<tr class="even">
<td style="text-align: left;">Number of rows</td>
<td style="text-align: left;">4303</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Number of columns</td>
<td style="text-align: left;">49</td>
</tr>
<tr class="even">
<td style="text-align: left;">_______________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Column type frequency:</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">character</td>
<td style="text-align: left;">21</td>
</tr>
<tr class="odd">
<td style="text-align: left;">logical</td>
<td style="text-align: left;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">numeric</td>
<td style="text-align: left;">24</td>
</tr>
<tr class="odd">
<td style="text-align: left;">________________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">Group variables</td>
<td style="text-align: left;">None</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: character</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 35%">
<col style="width: 10%">
<col style="width: 15%">
<col style="width: 4%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 9%">
<col style="width: 12%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">empty</th>
<th style="text-align: right;">n_unique</th>
<th style="text-align: right;">whitespace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">pldb_id</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">52</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4303</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">title</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">56</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4267</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">description</td>
<td style="text-align: right;">3480</td>
<td style="text-align: right;">0.19</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">2273</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">811</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">type</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">27</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">40</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">creators</td>
<td style="text-align: right;">3203</td>
<td style="text-align: right;">0.26</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">253</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">985</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">website</td>
<td style="text-align: right;">2928</td>
<td style="text-align: right;">0.32</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">131</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1368</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">domain_name</td>
<td style="text-align: right;">3588</td>
<td style="text-align: right;">0.17</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">700</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">reference</td>
<td style="text-align: right;">2314</td>
<td style="text-align: right;">0.46</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">251</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1955</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo</td>
<td style="text-align: right;">3402</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">25</td>
<td style="text-align: right;">73</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">897</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_description</td>
<td style="text-align: right;">3438</td>
<td style="text-align: right;">0.20</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">419</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">853</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language</td>
<td style="text-align: right;">3829</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">30</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">474</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_tm_scope</td>
<td style="text-align: right;">3837</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">34</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">361</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language_type</td>
<td style="text-align: right;">3837</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_ace_mode</td>
<td style="text-align: right;">3838</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">16</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">96</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_language_file_extensions</td>
<td style="text-align: right;">3833</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">606</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">466</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia</td>
<td style="text-align: right;">2731</td>
<td style="text-align: right;">0.37</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">104</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1566</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_summary</td>
<td style="text-align: right;">2884</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">17</td>
<td style="text-align: right;">6741</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1407</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_related</td>
<td style="text-align: right;">3145</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1761</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1059</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">line_comment_token</td>
<td style="text-align: right;">3831</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">origin_community</td>
<td style="text-align: right;">1190</td>
<td style="text-align: right;">0.72</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">305</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2232</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">file_type</td>
<td style="text-align: right;">3213</td>
<td style="text-align: right;">0.25</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: logical</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 41%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 6%">
<col style="width: 22%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: left;">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">features_has_comments</td>
<td style="text-align: right;">3683</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">TRU: 617, FAL: 3</td>
</tr>
<tr class="even">
<td style="text-align: left;">features_has_semantic_indentation</td>
<td style="text-align: right;">3722</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: left;">FAL: 516, TRU: 65</td>
</tr>
<tr class="odd">
<td style="text-align: left;">features_has_line_comments</td>
<td style="text-align: right;">3765</td>
<td style="text-align: right;">0.13</td>
<td style="text-align: right;">0.96</td>
<td style="text-align: left;">TRU: 517, FAL: 21</td>
</tr>
<tr class="even">
<td style="text-align: left;">is_open_source</td>
<td style="text-align: right;">3792</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0.89</td>
<td style="text-align: left;">TRU: 453, FAL: 58</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: numeric</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 24%">
<col style="width: 7%">
<col style="width: 10%">
<col style="width: 8%">
<col style="width: 9%">
<col style="width: 4%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 9%">
<col style="width: 6%">
<col style="width: 4%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">p0</th>
<th style="text-align: right;">p25</th>
<th style="text-align: right;">p50</th>
<th style="text-align: right;">p75</th>
<th style="text-align: right;">p100</th>
<th style="text-align: left;">hist</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">appeared</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1991.11</td>
<td style="text-align: right;">111.44</td>
<td style="text-align: right;">-2000</td>
<td style="text-align: right;">1984.00</td>
<td style="text-align: right;">1997.0</td>
<td style="text-align: right;">2012.00</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">domain_name_registered</td>
<td style="text-align: right;">3801</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">2011.33</td>
<td style="text-align: right;">7.02</td>
<td style="text-align: right;">1990</td>
<td style="text-align: right;">2007.00</td>
<td style="text-align: right;">2013.0</td>
<td style="text-align: right;">2017.00</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▃▃▇▆</td>
</tr>
<tr class="odd">
<td style="text-align: left;">isbndb</td>
<td style="text-align: right;">3217</td>
<td style="text-align: right;">0.25</td>
<td style="text-align: right;">7.71</td>
<td style="text-align: right;">33.16</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">2.00</td>
<td style="text-align: right;">400</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">book_count</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2.08</td>
<td style="text-align: right;">17.34</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">401</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">semantic_scholar</td>
<td style="text-align: right;">3545</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">3.79</td>
<td style="text-align: right;">8.32</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">3.00</td>
<td style="text-align: right;">52</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">language_rank</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2151.00</td>
<td style="text-align: right;">1242.31</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1075.50</td>
<td style="text-align: right;">2151.0</td>
<td style="text-align: right;">3226.50</td>
<td style="text-align: right;">4302</td>
<td style="text-align: left;">▇▇▇▇▇</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_stars</td>
<td style="text-align: right;">3414</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">2127.40</td>
<td style="text-align: right;">7554.02</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">29.00</td>
<td style="text-align: right;">194.0</td>
<td style="text-align: right;">1071.00</td>
<td style="text-align: right;">88526</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_forks</td>
<td style="text-align: right;">3417</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">261.29</td>
<td style="text-align: right;">1203.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">2.25</td>
<td style="text-align: right;">16.0</td>
<td style="text-align: right;">91.50</td>
<td style="text-align: right;">23732</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_updated</td>
<td style="text-align: right;">3418</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">2021.39</td>
<td style="text-align: right;">1.76</td>
<td style="text-align: right;">2012</td>
<td style="text-align: right;">2022.00</td>
<td style="text-align: right;">2022.0</td>
<td style="text-align: right;">2022.00</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_subscribers</td>
<td style="text-align: right;">3418</td>
<td style="text-align: right;">0.21</td>
<td style="text-align: right;">62.34</td>
<td style="text-align: right;">200.88</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">4.00</td>
<td style="text-align: right;">13.0</td>
<td style="text-align: right;">44.00</td>
<td style="text-align: right;">2910</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_created</td>
<td style="text-align: right;">3425</td>
<td style="text-align: right;">0.20</td>
<td style="text-align: right;">2015.84</td>
<td style="text-align: right;">3.48</td>
<td style="text-align: right;">2006</td>
<td style="text-align: right;">2013.00</td>
<td style="text-align: right;">2016.0</td>
<td style="text-align: right;">2019.00</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▅▇▇▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_repo_issues</td>
<td style="text-align: right;">3518</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">123.03</td>
<td style="text-align: right;">546.26</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">9.0</td>
<td style="text-align: right;">61.00</td>
<td style="text-align: right;">9522</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">github_repo_first_commit</td>
<td style="text-align: right;">3567</td>
<td style="text-align: right;">0.17</td>
<td style="text-align: right;">2014.74</td>
<td style="text-align: right;">4.99</td>
<td style="text-align: right;">1987</td>
<td style="text-align: right;">2012.00</td>
<td style="text-align: right;">2015.0</td>
<td style="text-align: right;">2018.00</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▁▁▆▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">github_language_repos</td>
<td style="text-align: right;">3833</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">197134.67</td>
<td style="text-align: right;">1226900.57</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">91.25</td>
<td style="text-align: right;">725.5</td>
<td style="text-align: right;">7900.25</td>
<td style="text-align: right;">16046489</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_daily_page_views</td>
<td style="text-align: right;">2837</td>
<td style="text-align: right;">0.34</td>
<td style="text-align: right;">227.13</td>
<td style="text-align: right;">783.55</td>
<td style="text-align: right;">-1</td>
<td style="text-align: right;">9.00</td>
<td style="text-align: right;">24.0</td>
<td style="text-align: right;">99.00</td>
<td style="text-align: right;">13394</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_backlinks_count</td>
<td style="text-align: right;">2877</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">318.55</td>
<td style="text-align: right;">1635.29</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">13.00</td>
<td style="text-align: right;">39.0</td>
<td style="text-align: right;">126.00</td>
<td style="text-align: right;">34348</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_page_id</td>
<td style="text-align: right;">2893</td>
<td style="text-align: right;">0.33</td>
<td style="text-align: right;">9167847.21</td>
<td style="text-align: right;">13506832.90</td>
<td style="text-align: right;">928</td>
<td style="text-align: right;">375153.75</td>
<td style="text-align: right;">2114700.5</td>
<td style="text-align: right;">12321223.00</td>
<td style="text-align: right;">63063548</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_appeared</td>
<td style="text-align: right;">2958</td>
<td style="text-align: right;">0.31</td>
<td style="text-align: right;">1991.14</td>
<td style="text-align: right;">17.03</td>
<td style="text-align: right;">1830</td>
<td style="text-align: right;">1980.00</td>
<td style="text-align: right;">1994.0</td>
<td style="text-align: right;">2005.00</td>
<td style="text-align: right;">2019</td>
<td style="text-align: left;">▁▁▁▃▇</td>
</tr>
<tr class="odd">
<td style="text-align: left;">wikipedia_created</td>
<td style="text-align: right;">3040</td>
<td style="text-align: right;">0.29</td>
<td style="text-align: right;">2005.75</td>
<td style="text-align: right;">3.77</td>
<td style="text-align: right;">2001</td>
<td style="text-align: right;">2003.00</td>
<td style="text-align: right;">2005.0</td>
<td style="text-align: right;">2007.00</td>
<td style="text-align: right;">2020</td>
<td style="text-align: left;">▇▇▂▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">wikipedia_revision_count</td>
<td style="text-align: right;">3130</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">330.43</td>
<td style="text-align: right;">813.26</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">35.00</td>
<td style="text-align: right;">84.0</td>
<td style="text-align: right;">242.00</td>
<td style="text-align: right;">10104</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">last_activity</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2000.62</td>
<td style="text-align: right;">84.60</td>
<td style="text-align: right;">-900</td>
<td style="text-align: right;">1992.00</td>
<td style="text-align: right;">2006.0</td>
<td style="text-align: right;">2021.00</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▁▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">number_of_users</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">13771.26</td>
<td style="text-align: right;">227712.95</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">20.0</td>
<td style="text-align: right;">230.00</td>
<td style="text-align: right;">7179119</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">number_of_jobs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">422.18</td>
<td style="text-align: right;">12572.99</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">771996</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">central_package_repository_count</td>
<td style="text-align: right;">1482</td>
<td style="text-align: right;">0.66</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">▁▁▇▁▁</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>The data is pretty incomplete. Only 9 of the 49 variables are fully complete. The line comment token is only 0.110 complete and the has comments is only 0.144 complete. This variable has only 3 false values; it is likely that the missing data is skewed towards false. It is more likely that you’d complete this entry if there were a comment, than if there weren’t. It is also possible that the cleaning and prep done to prepare the #TidyTuesday dataset removed some entries which did have FALSE values for the comments.</p>
<p>There are some funny entries that appeared in the skim report, like -2000 as the year the earliest language appeared. It turns out this is Babylonian numerals, so it probably correct. This does show there is a lot more than computer languages in this dataset though.</p>
<p>Looking through the variables, I see there is a “type” in the data dictionary, and it appears that “pl” means programming language. So let’s filter for that. (I couldn’t find an explanation of this variable on https://pldb.com/) It is used on various pages, but I couldn’t find the definition of the types.</p>
<p>Also, rank starts at 0, and I’d like it to start at 1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">programming_lang <span class="ot" style="color: #003B4F;">&lt;-</span> languages <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">filter</span>(type <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'pl'</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"github"</span>), <span class="sc" style="color: #5E5E5E;">-</span><span class="fu" style="color: #4758AB;">starts_with</span>(<span class="st" style="color: #20794D;">"wikipedia"</span>),</span>
<span id="cb4-4">         <span class="sc" style="color: #5E5E5E;">-</span>description, <span class="sc" style="color: #5E5E5E;">-</span>creators, <span class="sc" style="color: #5E5E5E;">-</span>(website<span class="sc" style="color: #5E5E5E;">:</span>semantic_scholar)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">language_rank =</span> language_rank <span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;">skim</span>(programming_lang)</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<caption>Data summary</caption>
<tbody>
<tr class="odd">
<td style="text-align: left;">Name</td>
<td style="text-align: left;">programming_lang</td>
</tr>
<tr class="even">
<td style="text-align: left;">Number of rows</td>
<td style="text-align: left;">3368</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Number of columns</td>
<td style="text-align: left;">16</td>
</tr>
<tr class="even">
<td style="text-align: left;">_______________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Column type frequency:</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">character</td>
<td style="text-align: left;">6</td>
</tr>
<tr class="odd">
<td style="text-align: left;">logical</td>
<td style="text-align: left;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">numeric</td>
<td style="text-align: left;">6</td>
</tr>
<tr class="odd">
<td style="text-align: left;">________________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">Group variables</td>
<td style="text-align: left;">None</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: character</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 24%">
<col style="width: 12%">
<col style="width: 18%">
<col style="width: 5%">
<col style="width: 5%">
<col style="width: 7%">
<col style="width: 11%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">empty</th>
<th style="text-align: right;">n_unique</th>
<th style="text-align: right;">whitespace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">pldb_id</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">52</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3368</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">title</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">54</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3347</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">type</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">line_comment_token</td>
<td style="text-align: right;">3002</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">18</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">origin_community</td>
<td style="text-align: right;">883</td>
<td style="text-align: right;">0.74</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">176</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1825</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">file_type</td>
<td style="text-align: right;">2609</td>
<td style="text-align: right;">0.23</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: logical</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 41%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 6%">
<col style="width: 22%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: left;">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">features_has_comments</td>
<td style="text-align: right;">2886</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">TRU: 482</td>
</tr>
<tr class="even">
<td style="text-align: left;">features_has_semantic_indentation</td>
<td style="text-align: right;">2917</td>
<td style="text-align: right;">0.13</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: left;">FAL: 410, TRU: 41</td>
</tr>
<tr class="odd">
<td style="text-align: left;">features_has_line_comments</td>
<td style="text-align: right;">2954</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0.97</td>
<td style="text-align: left;">TRU: 401, FAL: 13</td>
</tr>
<tr class="even">
<td style="text-align: left;">is_open_source</td>
<td style="text-align: right;">2984</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">0.85</td>
<td style="text-align: left;">TRU: 328, FAL: 56</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: numeric</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 28%">
<col style="width: 8%">
<col style="width: 12%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 4%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">p0</th>
<th style="text-align: right;">p25</th>
<th style="text-align: right;">p50</th>
<th style="text-align: right;">p75</th>
<th style="text-align: right;">p100</th>
<th style="text-align: left;">hist</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">appeared</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1994.16</td>
<td style="text-align: right;">17.34</td>
<td style="text-align: right;">1948</td>
<td style="text-align: right;">1982.0</td>
<td style="text-align: right;">1994.0</td>
<td style="text-align: right;">2010.0</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▅▇▇▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">language_rank</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2296.75</td>
<td style="text-align: right;">1249.08</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1243.5</td>
<td style="text-align: right;">2334.5</td>
<td style="text-align: right;">3423.5</td>
<td style="text-align: right;">4303</td>
<td style="text-align: left;">▆▆▆▆▇</td>
</tr>
<tr class="odd">
<td style="text-align: left;">last_activity</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2002.04</td>
<td style="text-align: right;">17.91</td>
<td style="text-align: right;">1951</td>
<td style="text-align: right;">1989.0</td>
<td style="text-align: right;">2005.0</td>
<td style="text-align: right;">2019.0</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▂▃▆▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">number_of_users</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">10793.85</td>
<td style="text-align: right;">190197.19</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">15.0</td>
<td style="text-align: right;">165.0</td>
<td style="text-align: right;">5962666</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">number_of_jobs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">160.22</td>
<td style="text-align: right;">2692.65</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">85206</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">central_package_repository_count</td>
<td style="text-align: right;">939</td>
<td style="text-align: right;">0.72</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">▁▁▇▁▁</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>This now produces a dataset with 0.143 completeness for features_has_comments. All non-missing entries are TRUE, which again suggests that FALSE is over represented in the missing data.</p>
<p>Let’s only look at the programming languages that have data for comments.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">programming_lang <span class="ot" style="color: #003B4F;">&lt;-</span> programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">filter</span>(features_has_comments <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">skim</span>(programming_lang)</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<caption>Data summary</caption>
<tbody>
<tr class="odd">
<td style="text-align: left;">Name</td>
<td style="text-align: left;">programming_lang</td>
</tr>
<tr class="even">
<td style="text-align: left;">Number of rows</td>
<td style="text-align: left;">482</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Number of columns</td>
<td style="text-align: left;">16</td>
</tr>
<tr class="even">
<td style="text-align: left;">_______________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Column type frequency:</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">character</td>
<td style="text-align: left;">6</td>
</tr>
<tr class="odd">
<td style="text-align: left;">logical</td>
<td style="text-align: left;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">numeric</td>
<td style="text-align: left;">6</td>
</tr>
<tr class="odd">
<td style="text-align: left;">________________________</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">Group variables</td>
<td style="text-align: left;">None</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: character</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 24%">
<col style="width: 12%">
<col style="width: 18%">
<col style="width: 5%">
<col style="width: 5%">
<col style="width: 7%">
<col style="width: 11%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">empty</th>
<th style="text-align: right;">n_unique</th>
<th style="text-align: right;">whitespace</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">pldb_id</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">35</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">482</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">title</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">481</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">type</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">line_comment_token</td>
<td style="text-align: right;">120</td>
<td style="text-align: right;">0.75</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">18</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;">origin_community</td>
<td style="text-align: right;">112</td>
<td style="text-align: right;">0.77</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">105</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">311</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">file_type</td>
<td style="text-align: right;">146</td>
<td style="text-align: right;">0.70</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">0</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: logical</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 41%">
<col style="width: 12%">
<col style="width: 17%">
<col style="width: 6%">
<col style="width: 22%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: left;">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">features_has_comments</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: left;">TRU: 482</td>
</tr>
<tr class="even">
<td style="text-align: left;">features_has_semantic_indentation</td>
<td style="text-align: right;">57</td>
<td style="text-align: right;">0.88</td>
<td style="text-align: right;">0.05</td>
<td style="text-align: left;">FAL: 405, TRU: 20</td>
</tr>
<tr class="odd">
<td style="text-align: left;">features_has_line_comments</td>
<td style="text-align: right;">71</td>
<td style="text-align: right;">0.85</td>
<td style="text-align: right;">0.97</td>
<td style="text-align: left;">TRU: 400, FAL: 11</td>
</tr>
<tr class="even">
<td style="text-align: left;">is_open_source</td>
<td style="text-align: right;">305</td>
<td style="text-align: right;">0.37</td>
<td style="text-align: right;">0.91</td>
<td style="text-align: left;">TRU: 161, FAL: 16</td>
</tr>
</tbody>
</table>
<p><strong>Variable type: numeric</strong></p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 27%">
<col style="width: 8%">
<col style="width: 11%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 4%">
<col style="width: 6%">
<col style="width: 5%">
<col style="width: 6%">
<col style="width: 6%">
<col style="width: 5%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">skim_variable</th>
<th style="text-align: right;">n_missing</th>
<th style="text-align: right;">complete_rate</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">p0</th>
<th style="text-align: right;">p25</th>
<th style="text-align: right;">p50</th>
<th style="text-align: right;">p75</th>
<th style="text-align: right;">p100</th>
<th style="text-align: left;">hist</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">appeared</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2000.17</td>
<td style="text-align: right;">14.07</td>
<td style="text-align: right;">1957</td>
<td style="text-align: right;">1991.00</td>
<td style="text-align: right;">2003.0</td>
<td style="text-align: right;">2011.00</td>
<td style="text-align: right;">2022</td>
<td style="text-align: left;">▁▂▆▇▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">language_rank</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">656.10</td>
<td style="text-align: right;">559.75</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">201.25</td>
<td style="text-align: right;">515.5</td>
<td style="text-align: right;">997.25</td>
<td style="text-align: right;">2994</td>
<td style="text-align: left;">▇▃▂▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">last_activity</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">2016.20</td>
<td style="text-align: right;">8.27</td>
<td style="text-align: right;">1967</td>
<td style="text-align: right;">2011.00</td>
<td style="text-align: right;">2022.0</td>
<td style="text-align: right;">2022.00</td>
<td style="text-align: right;">2023</td>
<td style="text-align: left;">▁▁▁▂▇</td>
</tr>
<tr class="even">
<td style="text-align: left;">number_of_users</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">62892.08</td>
<td style="text-align: right;">462314.18</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">112.00</td>
<td style="text-align: right;">437.5</td>
<td style="text-align: right;">1615.25</td>
<td style="text-align: right;">5962666</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="odd">
<td style="text-align: left;">number_of_jobs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1.00</td>
<td style="text-align: right;">971.30</td>
<td style="text-align: right;">6489.83</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">85206</td>
<td style="text-align: left;">▇▁▁▁▁</td>
</tr>
<tr class="even">
<td style="text-align: left;">central_package_repository_count</td>
<td style="text-align: right;">136</td>
<td style="text-align: right;">0.72</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0.0</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">▁▁▇▁▁</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>This subset is still moderately incomplete for information about comments. Only 75% of the data has the type of comment entered (#, //, etc). 86% of the entries are completed for “feature_has_line_comments” which indicates if comments must occupy a single line or if they can be made inline.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">group_by</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">count</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="fu" style="color: #4758AB;">fct_rev</span>(<span class="fu" style="color: #4758AB;">fct_reorder</span>(line_comment_token, n)), n)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;">geom_col</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"dodgerblue2"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Count"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Comment Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"Popularity of different comment tokens"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">angle =</span> <span class="dv" style="color: #AD0000;">45</span>,  <span class="at" style="color: #657422;">vjust =</span> <span class="fl" style="color: #AD0000;">0.25</span>, <span class="at" style="color: #657422;">hjust =</span> <span class="fl" style="color: #AD0000;">0.25</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/most-popular-comment-token-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s make a nice table of the popular comment types.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># | label: table-tokens</span></span>
<span id="cb7-2">programming_lang2 <span class="ot" style="color: #003B4F;">&lt;-</span> programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;">count</span>(line_comment_token, <span class="at" style="color: #657422;">sort =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span>
<span id="cb7-5"></span>
<span id="cb7-6">programming_lang2 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;">gt</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;">tab_header</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Most Common Comment Tokens"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;">cols_label</span>(<span class="at" style="color: #657422;">line_comment_token =</span> <span class="st" style="color: #20794D;">"Token"</span>, <span class="at" style="color: #657422;">n =</span> <span class="st" style="color: #20794D;">"# of Languages that use token"</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="pjpfmdqtoy" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#pjpfmdqtoy) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#pjpfmdqtoy) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#pjpfmdqtoy) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#pjpfmdqtoy) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#pjpfmdqtoy) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#pjpfmdqtoy) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#pjpfmdqtoy) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#pjpfmdqtoy) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#pjpfmdqtoy) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#pjpfmdqtoy) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#pjpfmdqtoy) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#pjpfmdqtoy) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#pjpfmdqtoy) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#pjpfmdqtoy) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#pjpfmdqtoy) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#pjpfmdqtoy) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#pjpfmdqtoy) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#pjpfmdqtoy) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#pjpfmdqtoy) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#pjpfmdqtoy) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#pjpfmdqtoy) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#pjpfmdqtoy) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#pjpfmdqtoy) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#pjpfmdqtoy) .gt_left {
  text-align: left;
}

:where(#pjpfmdqtoy) .gt_center {
  text-align: center;
}

:where(#pjpfmdqtoy) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#pjpfmdqtoy) .gt_font_normal {
  font-weight: normal;
}

:where(#pjpfmdqtoy) .gt_font_bold {
  font-weight: bold;
}

:where(#pjpfmdqtoy) .gt_font_italic {
  font-style: italic;
}

:where(#pjpfmdqtoy) .gt_super {
  font-size: 65%;
}

:where(#pjpfmdqtoy) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#pjpfmdqtoy) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#pjpfmdqtoy) .gt_indent_1 {
  text-indent: 5px;
}

:where(#pjpfmdqtoy) .gt_indent_2 {
  text-indent: 10px;
}

:where(#pjpfmdqtoy) .gt_indent_3 {
  text-indent: 15px;
}

:where(#pjpfmdqtoy) .gt_indent_4 {
  text-indent: 20px;
}

:where(#pjpfmdqtoy) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="2" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Most Common Comment Tokens</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Token">Token</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="# of Languages that use token"># of Languages that use token</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="line_comment_token" class="gt_row gt_left">//</td>
<td headers="n" class="gt_row gt_right">161</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">#</td>
<td headers="n" class="gt_row gt_right">70</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">;</td>
<td headers="n" class="gt_row gt_right">49</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">--</td>
<td headers="n" class="gt_row gt_right">31</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">'</td>
<td headers="n" class="gt_row gt_right">16</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">%</td>
<td headers="n" class="gt_row gt_right">12</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">!</td>
<td headers="n" class="gt_row gt_right">7</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">*</td>
<td headers="n" class="gt_row gt_right">5</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">REM</td>
<td headers="n" class="gt_row gt_right">2</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">*&gt;</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">---</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">/</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">NB.</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">\</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">\*</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">__</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">~</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
    <tr><td headers="line_comment_token" class="gt_row gt_left">⍝</td>
<td headers="n" class="gt_row gt_right">1</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>There is a language rank, which measures the popularity of the language based on signals such as number of users and number of jobs. Let’s see the average rank of languages for each token.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">group_by</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">summarize</span>(<span class="at" style="color: #657422;">avg_rank =</span> <span class="fu" style="color: #4758AB;">mean</span>(language_rank)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>((<span class="fu" style="color: #4758AB;">fct_reorder</span>(line_comment_token, avg_rank)), avg_rank)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;">geom_col</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"dodgerblue2"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Average Rank of Language"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Comment Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"Average rank of languages using different comment tokens"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">angle =</span> <span class="dv" style="color: #AD0000;">45</span>,  <span class="at" style="color: #657422;">vjust =</span> <span class="fl" style="color: #AD0000;">0.25</span>, <span class="at" style="color: #657422;">hjust =</span> <span class="fl" style="color: #AD0000;">0.25</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/avg-rank-by-token-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The highest (average) ranked token is “*&gt;”. What languages use this?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(line_comment_token <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"*&gt;"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">select</span>(title, language_rank, line_comment_token)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 3
  title language_rank line_comment_token
  &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;             
1 COBOL            19 *&gt;                </code></pre>
</div>
</div>
<p>Only COBOL does, so the rank of this token isn’t diluted by many less popular languages. We can view the distribution of the language ranks for all the tokens.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(line_comment_token, language_rank)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"dodgerblue2"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"The rank of languages by token."</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">ylab</span> (<span class="st" style="color: #20794D;">"Language Rank"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/boxplot-ranks-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Okay, let’s clean this up. I’d like it sorted by the median rank. Remeber rank is in reverse numerical order- a low number means a higher rank.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="fu" style="color: #4758AB;">fct_reorder</span>(line_comment_token, language_rank,</span>
<span id="cb12-4">                         <span class="at" style="color: #657422;">.fun =</span> median, <span class="at" style="color: #657422;">.desc =</span> <span class="cn" style="color: #8f5902;">FALSE</span>), language_rank)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"dodgerblue2"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"The rank of languages by token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Language Rank"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-9">    <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/sorted-rank-boxplot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s see the most popular language for each symbol. There might be a way to do this all at once, but I’m going to pull it out with joins to previous tables I’ve created.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">programming_lang3 <span class="ot" style="color: #003B4F;">&lt;-</span> programming_lang <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="fu" style="color: #4758AB;">is.na</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">==</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;">group_by</span>(line_comment_token) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">summarize</span>(<span class="at" style="color: #657422;">highest_rank =</span> <span class="fu" style="color: #4758AB;">min</span>(language_rank)) </span>
<span id="cb13-5"></span>
<span id="cb13-6">join_madness <span class="ot" style="color: #003B4F;">&lt;-</span> programming_lang2 <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;">left_join</span>(programming_lang3, <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"line_comment_token"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;">left_join</span>(programming_lang, </span>
<span id="cb13-9">            <span class="at" style="color: #657422;">by =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"highest_rank"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"language_rank"</span>,</span>
<span id="cb13-10">                   <span class="st" style="color: #20794D;">"line_comment_token"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"line_comment_token"</span>)) </span>
<span id="cb13-11"></span>
<span id="cb13-12">join_madness <span class="ot" style="color: #003B4F;">&lt;-</span> join_madness <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;">select</span>(line_comment_token, n, highest_rank, title, appeared, number_of_users,</span>
<span id="cb13-14">         number_of_jobs)</span></code></pre></div>
</div>
<p>So now we have a bunch of summarized data in a single dataframe. Here’s a graph. It is saying something, but I’m not sure what. When you can’t come up with a concise title, then you probably don’t know what you are trying to say…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">join_madness <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(highest_rank, n, <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), </span>
<span id="cb14-3">             <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), <span class="at" style="color: #657422;">label =</span> line_comment_token)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;">scale_x_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">show.legend =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"Popularity of tokens by language rank and usage"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Highest Rank of language using Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Number of Languages using token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/tokens-pop-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is a visualization of the highest ranked languages for each token. The number of users of the dominant language is also encoded in the size and color of the label. Having it ordered makes it difficult to tell if Java or Python is the most popular/ highest ranked language.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">join_madness <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="fu" style="color: #4758AB;">fct_rev</span>(<span class="fu" style="color: #4758AB;">fct_reorder</span>(line_comment_token, highest_rank)), n,</span>
<span id="cb15-3">             <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users),</span>
<span id="cb15-4">             <span class="at" style="color: #657422;">label =</span> title)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-5"> <span class="co" style="color: #5E5E5E;"># geom_point() +</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">show.legend =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-8">   <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"The Most Popular Language for Each Comment Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-10">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Number of languages using token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-11">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/lang-token-graph-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here is the same graph just ordered “alphabetically” by token.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">join_madness <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(line_comment_token, n, <span class="at" style="color: #657422;">size =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), </span>
<span id="cb16-3">             <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">log</span>(number_of_users), <span class="at" style="color: #657422;">label =</span> title)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-4"> <span class="co" style="color: #5E5E5E;"># geom_point() +</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">show.legend =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-7">   <span class="fu" style="color: #4758AB;">ggtitle</span>(<span class="st" style="color: #20794D;">"The Most Popular Language for Each Comment Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;">xlab</span>(<span class="st" style="color: #20794D;">"Token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;">ylab</span>(<span class="st" style="color: #20794D;">"Number of languages using token"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index_files/figure-html/lang-token-graph-undordered-1.png" class="img-fluid" width="672"></p>
</div>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {TidyTuesday {Week} 12: {Programming} {Languages}},
  date = {2023-03-21},
  url = {https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“TidyTuesday Week 12: Programming
Languages.”</span> March 21, 2023. <a href="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/">https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>TidyTuesday</category>
  <category>R-code</category>
  <category>Code-Along</category>
  <guid>https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/index.html</guid>
  <pubDate>Tue, 21 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-21-tidytuesday-programming-languages/pop-lang-by-token.png" medium="image" type="image/png" height="114" width="144"/>
</item>
<item>
  <title>Creating a Blog</title>
  <dc:creator>Louise E. Sinks</dc:creator>
  <link>https://lsinks.github.io/posts/2023-03-14-tester-post/index.html</link>
  <description><![CDATA[ 



<p>This is my first blog entry. I am following the tutorials here:</p>
<p>https://ucsb-meds.github.io/creating-quarto-websites/#where-you-should-start-changing-stuff</p>
<p>https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/</p>
<p>Generally, this process has been a nightmare. The website is being created within RStudio, then pushed to GitHub and published through GitHub pages. As I’ve made changes per the tutorial, I have repeatedly been unable to push changes to GitHub due to a variety of fatal errors and merge conflicts. Since I’m only working in a single place I have no idea where all these merge conflicts are arising from. I don’t understand how I can have everything in sync everywhere, make a local change, commit it, and then be unable to push it. I’ve had to delete the GitHub repository at least half a dozen times and recreate it from my local version because I couldn’t find any way to fix the conflicts and fatal errors. I’m not sure whose fault this is (Quarto, GitHub or RStudio). It could be my fault, but I really don’t understand why things are breaking so spectacularly. I’ve used git/ GitHub for version control of R projects before and I’ve never had an error. (I don’t really see how you can get a merge conflict if you are the only person working on a project and you are only working at a single location, but maybe I’m failing to envision some use case.)</p>
<p>I decided to go with Quarto because it is now built-in to RStudio and the tutorials by Samantha Csik seemed very clear. (And to be fair, they are! Very easy to follow.) The tutorials I found for R Markdown to make a website seemed a little more involved and a little more kludgey.</p>
<p>Couldn’t have done it without the best helper turtle in the world. Mac took a lot of executive naps to work on the problem.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="An orange box turtle is peering out of an office made out of a cardboard box."><img src="https://lsinks.github.io/posts/2023-03-14-tester-post/mac_face.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{e.sinks2023,
  author = {Louise E. Sinks},
  title = {Creating a {Blog}},
  date = {2023-03-14},
  url = {https://lsinks.github.io/2023-03-14_tester-post},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-e.sinks2023" class="csl-entry quarto-appendix-citeas">
Louise E. Sinks. 2023. <span>“Creating a Blog.”</span> March 14, 2023.
<a href="https://lsinks.github.io/2023-03-14_tester-post">https://lsinks.github.io/2023-03-14_tester-post</a>.
</div></div></section></div> ]]></description>
  <category>Quarto</category>
  <category>R</category>
  <category>turtle</category>
  <guid>https://lsinks.github.io/posts/2023-03-14-tester-post/index.html</guid>
  <pubDate>Tue, 14 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://lsinks.github.io/posts/2023-03-14-tester-post/mckinley.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
